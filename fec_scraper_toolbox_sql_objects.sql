-- This is a dump of all database objects housed in my FEC database as of 2/25/2015.
-- Apologies for the messy code. These scripts have been generated by SQL Server and might
-- contain unnecessary comments. I've attempted to remove development objects you don't
-- need but could have missed some. Please contact me with questions or problems.

-- Unfortunately, the automated scripts do not include indexes.

USE [FEC]
GO



/****** Object:  Table [dbo].[CandCommLinks]    Script Date: 2/25/2015 1:01:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CandCommLinks](
	[FECLinkID] [int] NOT NULL,
	[ElecCycle] [smallint] NOT NULL,
	[CandID] [int] NOT NULL,
	[CommID] [int] NOT NULL,
	[CommDesignation] [char](1) NOT NULL,
	[CommType] [char](1) NOT NULL,
	[CandElecYr] [smallint] NULL,
	[FileDate] [date] NOT NULL,
 CONSTRAINT [PK_CandCommLinks] PRIMARY KEY CLUSTERED 
(
	[FECLinkID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CandMaster]    Script Date: 2/25/2015 1:01:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CandMaster](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[CandID] [int] NOT NULL,
	[FECName] [varchar](200) NOT NULL,
	[PartyID] [tinyint] NOT NULL,
	[ElecYr] [smallint] NOT NULL,
	[ElecCycle] [smallint] NOT NULL,
	[OfficeState] [char](2) NOT NULL,
	[Office] [char](1) NOT NULL,
	[OfficeDist] [tinyint] NOT NULL,
	[IncChalStatus] [char](1) NOT NULL,
	[CandStatus] [char](1) NOT NULL,
	[PrinCommID] [int] NOT NULL,
	[Addr1] [varchar](34) NULL,
	[Addr2] [varchar](34) NULL,
	[MailCity] [varchar](30) NULL,
	[MailState] [char](2) NOT NULL,
	[Zip] [varchar](9) NULL,
	[FileDate] [date] NOT NULL,
 CONSTRAINT [PK_CandMaster] PRIMARY KEY CLUSTERED 
(
	[CandID] ASC,
	[ElecCycle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CommInfo]    Script Date: 2/25/2015 1:01:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CommInfo](
	[CommID] [int] NOT NULL,
	[LibCons] [char](1) NOT NULL,
	[URL] [varchar](150) NULL,
	[Notes] [varchar](max) NULL,
 CONSTRAINT [PK_CommInfo] PRIMARY KEY CLUSTERED 
(
	[CommID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CommMaster]    Script Date: 2/25/2015 1:01:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CommMaster](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[CommID] [int] NOT NULL,
	[FECName] [varchar](200) NOT NULL,
	[ElecCycle] [smallint] NOT NULL,
	[PartyID] [tinyint] NOT NULL,
	[Addr1] [varchar](34) NULL,
	[Addr2] [varchar](34) NULL,
	[MailCity] [varchar](30) NULL,
	[MailState] [char](2) NOT NULL,
	[Zip] [varchar](9) NULL,
	[Designation] [char](1) NOT NULL,
	[CommType] [char](1) NOT NULL,
	[FilingFreq] [char](1) NOT NULL,
	[IntGrpCat] [char](1) NOT NULL,
	[ConnectedOrg] [varchar](200) NULL,
	[CandID] [int] NOT NULL,
	[Treasurer] [varchar](90) NULL,
	[FileDate] [date] NOT NULL,
 CONSTRAINT [PK_CommMaster] PRIMARY KEY CLUSTERED 
(
	[CommID] ASC,
	[ElecCycle] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CongLdrRoles]    Script Date: 2/25/2015 1:01:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CongLdrRoles](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[CongressID] [int] NOT NULL,
	[Title] [varchar](255) NOT NULL,
	[Chamber] [varchar](6) NOT NULL,
	[StDate] [date] NOT NULL,
	[EdDate] [date] NULL,
	[DateAdded] [date] NOT NULL,
 CONSTRAINT [PK_CongLdrRoles] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CongOthNames]    Script Date: 2/25/2015 1:01:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CongOthNames](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[CongressID] [int] NOT NULL,
	[FName] [varchar](15) NULL,
	[MName] [varchar](25) NULL,
	[LName] [varchar](25) NULL,
	[Suffix] [varchar](5) NULL,
	[Nickname] [varchar](15) NULL,
	[OfficialFullName] [varchar](30) NULL,
	[StDate] [date] NULL,
	[EdDate] [date] NULL,
	[DateAdded] [date] NOT NULL,
 CONSTRAINT [PK_CongOthNames] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Congress]    Script Date: 2/25/2015 1:01:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Congress](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[FName] [varchar](15) NOT NULL,
	[MName] [varchar](25) NULL,
	[LName] [varchar](25) NOT NULL,
	[Suffix] [varchar](5) NULL,
	[Nickname] [varchar](15) NULL,
	[OfficialFullName] [varchar](30) NULL,
	[Birthday] [date] NULL,
	[Gender] [char](1) NOT NULL,
	[Religion] [varchar](45) NULL,
	[Bioguide] [varchar](7) NOT NULL,
	[Thomas] [varchar](5) NULL,
	[SenLegID] [varchar](4) NULL,
	[FECIDs] [varchar](31) NULL,
	[GovTrackID] [int] NOT NULL,
	[OpenSecretsID] [varchar](9) NULL,
	[VoteSmartID] [int] NOT NULL,
	[ICPSRID] [int] NOT NULL,
	[CSPANID] [int] NOT NULL,
	[WikipediaPage] [varchar](45) NULL,
	[BallotpediaPage] [varchar](55) NULL,
	[WaPoTopicName] [varchar](40) NULL,
	[MaplightID] [varchar](5) NULL,
	[HouseHistoryID] [varchar](5) NULL,
	[BioguideOldID] [varchar](9) NULL,
	[PeopleID] [int] NOT NULL,
	[DateAdded] [date] NOT NULL,
 CONSTRAINT [PK_Congress] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CongTerms]    Script Date: 2/25/2015 1:01:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CongTerms](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[CongressID] [int] NOT NULL,
	[Chamber] [char](3) NOT NULL,
	[StDate] [date] NULL,
	[EdDate] [date] NOT NULL,
	[StAbbr] [char](2) NOT NULL,
	[Dist] [smallint] NOT NULL,
	[SenClass] [tinyint] NOT NULL,
	[StRank] [char](6) NOT NULL,
	[Party] [varchar](26) NULL,
	[URL] [varchar](50) NULL,
	[Addr] [varchar](75) NULL,
	[Phone] [varchar](15) NULL,
	[Fax] [varchar](15) NULL,
	[ContactForm] [varchar](150) NULL,
	[Office] [varchar](50) NULL,
	[RSSURL] [varchar](150) NULL,
	[DateAdded] [date] NOT NULL,
 CONSTRAINT [PK_CongTerms] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Form1]    Script Date: 2/25/2015 1:01:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Form1](
	[ImageID] [int] NOT NULL,
	[Active] [bit] NOT NULL,
	[FormTpID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[flgChgCommNm] [bit] NOT NULL,
	[CommNm] [varchar](200) NOT NULL,
	[flgAddrChg] [bit] NOT NULL,
	[Addr1] [varchar](34) NOT NULL,
	[Addr2] [varchar](34) NULL,
	[City] [varchar](30) NOT NULL,
	[StAbbr] [char](2) NOT NULL,
	[Zip] [varchar](9) NOT NULL,
	[flgChgCommEmail] [bit] NOT NULL,
	[CommEmail] [varchar](90) NULL,
	[flgChgCommUrl] [bit] NOT NULL,
	[CommUrl] [varchar](90) NOT NULL,
	[SubmDt] [date] NULL,
	[SignLName] [varchar](90) NOT NULL,
	[SignFName] [varchar](20) NULL,
	[SignMName] [varchar](20) NULL,
	[SignPfx] [varchar](10) NULL,
	[SignSfx] [varchar](10) NULL,
	[SignDt] [date] NULL,
	[F1CommTpCd] [char](1) NOT NULL,
	[CandID] [int] NOT NULL,
	[CandLName] [varchar](90) NULL,
	[CandFName] [varchar](20) NULL,
	[CandMName] [varchar](20) NULL,
	[CandPfx] [varchar](10) NULL,
	[CandSfx] [varchar](10) NULL,
	[CandOff] [char](1) NOT NULL,
	[CandStAbbr] [char](2) NOT NULL,
	[CandDist] [tinyint] NULL,
	[PartyID] [tinyint] NOT NULL,
	[PartyTpID] [tinyint] NOT NULL,
	[PACTp] [char](1) NOT NULL,
	[flgLobRegPAC_ConnOrg_5e] [bit] NOT NULL,
	[flgLobRegPAC_MultCands_5f] [bit] NOT NULL,
	[flgLdspPAC_5f] [bit] NOT NULL,
	[AffCommID] [int] NOT NULL,
	[AffCommNm] [varchar](200) NULL,
	[AffCandID] [int] NOT NULL,
	[AffCandLName] [varchar](30) NULL,
	[AffCandFName] [varchar](20) NULL,
	[AffCandMName] [varchar](20) NULL,
	[AffCandPfx] [varchar](10) NULL,
	[AffCandSfx] [varchar](10) NULL,
	[AffAddr1] [varchar](34) NULL,
	[AffAddr2] [varchar](34) NULL,
	[AffCity] [varchar](30) NULL,
	[AffStAbbr] [char](2) NOT NULL,
	[AffZip] [varchar](9) NULL,
	[AffRelID] [tinyint] NOT NULL,
	[CustLName] [varchar](90) NULL,
	[CustFName] [varchar](20) NULL,
	[CustMName] [varchar](20) NULL,
	[CustPfx] [varchar](10) NULL,
	[CustSfx] [varchar](10) NULL,
	[CustAddr1] [varchar](34) NULL,
	[CustAddr2] [varchar](34) NULL,
	[CustCity] [varchar](30) NULL,
	[CustStAbbr] [char](2) NOT NULL,
	[CustZip] [varchar](9) NULL,
	[CustTitle] [varchar](20) NULL,
	[CustPhone] [varchar](10) NULL,
	[TrsLName] [varchar](90) NULL,
	[TrsFName] [varchar](20) NULL,
	[TrsMName] [varchar](20) NULL,
	[TrsPfx] [varchar](10) NULL,
	[TrsSfx] [varchar](10) NULL,
	[TrsAddr1] [varchar](34) NULL,
	[TrsAddr2] [varchar](34) NULL,
	[TrsCity] [varchar](30) NULL,
	[TrsStAbbr] [char](2) NOT NULL,
	[TrsZip] [varchar](9) NULL,
	[TrsTitle] [varchar](20) NULL,
	[TrsPhone] [varchar](10) NULL,
	[AgtLName] [varchar](90) NULL,
	[AgtFName] [varchar](20) NULL,
	[AgtMName] [varchar](20) NULL,
	[AgtPfx] [varchar](10) NULL,
	[AgtSfx] [varchar](10) NULL,
	[AgtAddr1] [varchar](34) NULL,
	[AgtAddr2] [varchar](34) NULL,
	[AgtCity] [varchar](30) NULL,
	[AgtStAbbr] [char](2) NOT NULL,
	[AgtZip] [varchar](9) NULL,
	[AgtTitle] [varchar](20) NULL,
	[AgtPhone] [varchar](10) NULL,
	[Bank1Nm] [varchar](200) NULL,
	[Bank1Addr1] [varchar](34) NULL,
	[Bank1Addr2] [varchar](34) NULL,
	[Bank1City] [varchar](30) NULL,
	[Bank1StAbbr] [char](2) NOT NULL,
	[Bank1Zip] [varchar](9) NULL,
	[Bank2Nm] [varchar](200) NULL,
	[Bank2Addr1] [varchar](34) NULL,
	[Bank2Addr2] [varchar](34) NULL,
	[Bank2City] [varchar](30) NULL,
	[Bank2StAbbr] [char](2) NOT NULL,
	[Bank2Zip] [varchar](9) NULL,
	[HdrVer] [decimal](3, 1) NULL,
	[SoftNm] [varchar](50) NULL,
	[SoftVer] [varchar](50) NULL,
	[RptID] [varchar](50) NULL,
	[RptNbr] [varchar](50) NULL,
	[HdrCmnt] [varchar](200) NULL,
	[Vetted] [bit] NOT NULL,
 CONSTRAINT [PK_Form1] PRIMARY KEY CLUSTERED 
(
	[ImageID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Form1S]    Script Date: 2/25/2015 1:01:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Form1S](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[JtCommNm] [varchar](200) NULL,
	[JtCommID] [int] NOT NULL,
	[AffCommID] [int] NOT NULL,
	[AffCommNm] [varchar](200) NULL,
	[AffCandID] [int] NOT NULL,
	[AffLName] [varchar](95) NULL,
	[AffFName] [varchar](20) NULL,
	[AffMName] [varchar](20) NULL,
	[AffPfx] [varchar](10) NULL,
	[AffSfx] [varchar](10) NULL,
	[AffAddr1] [varchar](34) NULL,
	[AffAddr2] [varchar](34) NULL,
	[AffCity] [varchar](30) NULL,
	[AffStAbbr] [char](2) NOT NULL,
	[AffZip] [varchar](9) NULL,
	[AffRelID] [tinyint] NOT NULL,
	[AgtLName] [varchar](95) NULL,
	[AgtFName] [varchar](20) NULL,
	[AgtMName] [varchar](20) NULL,
	[AgtPfx] [varchar](10) NULL,
	[AgtSfx] [varchar](10) NULL,
	[AgtAddr1] [varchar](34) NULL,
	[AgtAddr2] [varchar](34) NULL,
	[AgtCity] [varchar](30) NULL,
	[AgtStAbbr] [char](2) NOT NULL,
	[AgtZip] [varchar](9) NULL,
	[AgtTitle] [varchar](20) NULL,
	[AgtPhone] [varchar](10) NULL,
	[BankNm] [varchar](200) NULL,
	[BankAddr1] [varchar](34) NULL,
	[BankAddr2] [varchar](34) NULL,
	[BankCity] [varchar](30) NULL,
	[BankStAbbr] [char](2) NOT NULL,
	[BankZip] [varchar](9) NULL,
 CONSTRAINT [PK_Form1S] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Indiv]    Script Date: 2/25/2015 1:01:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Indiv](
	[FEC_Contrib_ID] [bigint] NOT NULL,
	[RptCommID] [int] NOT NULL,
	[ElecCycle] [smallint] NOT NULL,
	[AmendCd] [char](1) NOT NULL,
	[RptPrdID] [tinyint] NOT NULL,
	[ElecID] [smallint] NOT NULL,
	[RptImgNbr] [bigint] NOT NULL,
	[TransTpID] [tinyint] NOT NULL,
	[ContRcptEntTpID] [tinyint] NOT NULL,
	[ContRcptName] [varchar](200) NULL,
	[ContRcptCity] [varchar](30) NULL,
	[ContRcptStAbbr] [char](2) NOT NULL,
	[ContRcptZip] [varchar](9) NULL,
	[ContRcptEmp] [varchar](38) NULL,
	[ContRcptOcc] [varchar](38) NULL,
	[ContRcptDt] [date] NULL,
	[ContRcptAmt] [money] NULL,
	[ContRcptCommID] [int] NOT NULL,
	[ContRcptCandID] [int] NOT NULL,
	[TransID] [varchar](32) NULL,
	[ImageID] [int] NULL,
	[flgExclude] [bit] NOT NULL,
	[MemoTxt] [varchar](100) NULL,
	[FileDate] [date] NOT NULL,
 CONSTRAINT [PK_Indiv] PRIMARY KEY CLUSTERED 
(
	[FEC_Contrib_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpAffRel]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpAffRel](
	[USATID] [tinyint] IDENTITY(1,1) NOT NULL,
	[AffRelCd] [char](3) NOT NULL,
	[AffRelDesc] [varchar](50) NULL,
 CONSTRAINT [PK_lkpAffRel] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpAffRel_AffRelCd_UNIQUE] UNIQUE NONCLUSTERED 
(
	[AffRelCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpCandidates]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpCandidates](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[FECCandID] [char](9) NOT NULL,
	[PeopleID] [int] NULL,
 CONSTRAINT [PK_lkpCandidates] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpCandidates_FECCandID_UNIQUE] UNIQUE NONCLUSTERED 
(
	[FECCandID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpCandStatus]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpCandStatus](
	[CandStatusCd] [char](1) NOT NULL,
	[CandStatusDesc] [varchar](40) NOT NULL,
 CONSTRAINT [PK_lkpCandStatus] PRIMARY KEY CLUSTERED 
(
	[CandStatusCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpCandStatus_CandStatusCd_UNIQUE] UNIQUE NONCLUSTERED 
(
	[CandStatusCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpCommittees]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpCommittees](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[FECCommID] [char](9) NOT NULL,
	[CleanCommName] [varchar](200) NULL,
 CONSTRAINT [PK_lkpCommittees] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpCommittees_FECCommID_UNIQUE] UNIQUE NONCLUSTERED 
(
	[FECCommID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpCommType]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpCommType](
	[CommTypeCd] [char](1) NOT NULL,
	[CommTypeDesc] [varchar](160) NOT NULL,
 CONSTRAINT [PK_lkpCommType] PRIMARY KEY CLUSTERED 
(
	[CommTypeCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpCommType_CommTypeCd_UNIQUE] UNIQUE NONCLUSTERED 
(
	[CommTypeCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpDesignation]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpDesignation](
	[DesignationCd] [char](1) NOT NULL,
	[DesignationDesc] [varchar](50) NOT NULL,
 CONSTRAINT [PK_lkpDesignation] PRIMARY KEY CLUSTERED 
(
	[DesignationCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpDesignation_DesignationCd_UNIQUE] UNIQUE NONCLUSTERED 
(
	[DesignationCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpElec]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpElec](
	[USATID] [smallint] IDENTITY(1,1) NOT NULL,
	[ElecCd] [varchar](5) NOT NULL,
 CONSTRAINT [PK_lkpElec] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpElec_ElecCd_UNIQUE] UNIQUE NONCLUSTERED 
(
	[ElecCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpEntTp]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpEntTp](
	[USATID] [tinyint] IDENTITY(1,1) NOT NULL,
	[EntTp] [varchar](3) NOT NULL,
	[EntTpDesc] [varchar](40) NULL,
 CONSTRAINT [PK_lkpEntTp] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpEntTp_EntTp_UNIQUE] UNIQUE NONCLUSTERED 
(
	[EntTp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpExpCat]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpExpCat](
	[USATID] [tinyint] IDENTITY(1,1) NOT NULL,
	[ExpCatCd] [varchar](3) NOT NULL,
	[ExpCatDesc] [varchar](50) NULL,
 CONSTRAINT [PK_lkpExpCat] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpExpCat_ExpCatCd_UNIQUE] UNIQUE NONCLUSTERED 
(
	[ExpCatCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpF1CommTp]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpF1CommTp](
	[F1CommTpCd] [char](1) NOT NULL,
	[F1CommTpDesc] [varchar](100) NULL,
 CONSTRAINT [PK_lkpF1CommTp] PRIMARY KEY CLUSTERED 
(
	[F1CommTpCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpFilingFreq]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpFilingFreq](
	[FilingFreqCd] [char](1) NOT NULL,
	[FilingFreqDesc] [varchar](30) NOT NULL,
 CONSTRAINT [PK_lkpFilingFreq] PRIMARY KEY CLUSTERED 
(
	[FilingFreqCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpFormTp]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpFormTp](
	[USATID] [tinyint] IDENTITY(1,1) NOT NULL,
	[FormTp] [varchar](8) NOT NULL,
 CONSTRAINT [PK_lkpFormTp] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpFormTp_FormTp_UNIQUE] UNIQUE NONCLUSTERED 
(
	[FormTp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpIncChalStatus]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpIncChalStatus](
	[IncChalStatusCd] [char](1) NOT NULL,
	[IncChalStatusDesc] [varchar](10) NOT NULL,
 CONSTRAINT [PK_lkpIncChalStatus] PRIMARY KEY CLUSTERED 
(
	[IncChalStatusCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpIntGrpCat]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpIntGrpCat](
	[IntGrpCatCd] [char](1) NOT NULL,
	[IntGrpCatDesc] [varchar](35) NOT NULL,
 CONSTRAINT [PK_lkpIntGrpCat] PRIMARY KEY CLUSTERED 
(
	[IntGrpCatCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpLnNbr]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpLnNbr](
	[USATID] [tinyint] IDENTITY(1,1) NOT NULL,
	[LnNbr] [varchar](8) NOT NULL,
 CONSTRAINT [PK_lkpLnNbr] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpLnNbr_LnNbr_UNIQUE] UNIQUE NONCLUSTERED 
(
	[LnNbr] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpPACTp]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpPACTp](
	[PACTpCd] [char](1) NOT NULL,
	[PACTp] [varchar](30) NOT NULL,
 CONSTRAINT [PK_lkpPACTp] PRIMARY KEY CLUSTERED 
(
	[PACTpCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpParties]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpParties](
	[USATID] [tinyint] IDENTITY(1,1) NOT NULL,
	[FECCode] [char](3) NOT NULL,
	[Party] [varchar](26) NOT NULL,
	[Short] [char](1) NOT NULL,
 CONSTRAINT [PK_lkpParties] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpParties_FECCode_UNIQUE] UNIQUE NONCLUSTERED 
(
	[FECCode] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpPartyTp]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpPartyTp](
	[USATID] [tinyint] IDENTITY(1,1) NOT NULL,
	[PartyTpCd] [char](3) NOT NULL,
	[PartyTpDesc] [varchar](12) NULL,
 CONSTRAINT [PK_lkpPtyTp] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpPartyTp_PartyTpCd_UNIQUE] UNIQUE NONCLUSTERED 
(
	[PartyTpCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpRptPrd]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpRptPrd](
	[USATID] [tinyint] IDENTITY(1,1) NOT NULL,
	[RptPrdCd] [varchar](4) NOT NULL,
	[RptPrdDesc] [varchar](50) NULL,
	[RptPrdNotes] [varchar](150) NULL,
 CONSTRAINT [PK_lkpRptPrd] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpRptPrd_RptPrdCd_UNIQUE] UNIQUE NONCLUSTERED 
(
	[RptPrdCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpTable]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpTable](
	[TableID] [tinyint] IDENTITY(1,1) NOT NULL,
	[TableName] [varchar](5) NOT NULL,
 CONSTRAINT [PK_lkpTable] PRIMARY KEY CLUSTERED 
(
	[TableID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpTransPurp]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpTransPurp](
	[USATID] [tinyint] IDENTITY(1,1) NOT NULL,
	[TransPurpCd] [varchar](3) NOT NULL,
	[TransPurp] [varchar](50) NULL,
	[ContPurpID] [tinyint] NULL,
	[ExpPurpID] [tinyint] NULL,
 CONSTRAINT [PK_lkpTransPurp] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpTransPurp_TransPurpCd_UNIQUE] UNIQUE NONCLUSTERED 
(
	[TransPurpCd] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lkpTransTp]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lkpTransTp](
	[USATID] [tinyint] IDENTITY(1,1) NOT NULL,
	[TransTp] [varchar](3) NOT NULL,
	[TransDesc] [varchar](100) NULL,
 CONSTRAINT [PK_lkpTransTp] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
 CONSTRAINT [lkpTransTp_TransTp_UNIQUE] UNIQUE NONCLUSTERED 
(
	[TransTp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Oth]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Oth](
	[FEC_Contrib_ID] [bigint] NOT NULL,
	[RptCommID] [int] NOT NULL,
	[ElecCycle] [smallint] NOT NULL,
	[AmendCd] [char](1) NOT NULL,
	[RptPrdID] [tinyint] NOT NULL,
	[ElecID] [smallint] NOT NULL,
	[RptImgNbr] [bigint] NOT NULL,
	[TransTpID] [tinyint] NOT NULL,
	[ContRcptEntTpID] [tinyint] NOT NULL,
	[ContRcptName] [varchar](200) NULL,
	[ContRcptCity] [varchar](30) NULL,
	[ContRcptStAbbr] [char](2) NOT NULL,
	[ContRcptZip] [varchar](9) NULL,
	[ContRcptEmp] [varchar](38) NULL,
	[ContRcptOcc] [varchar](38) NULL,
	[ContRcptDt] [date] NULL,
	[ContRcptAmt] [money] NULL,
	[ContRcptCommID] [int] NOT NULL,
	[ContRcptCandID] [int] NOT NULL,
	[TransID] [varchar](32) NULL,
	[ImageID] [int] NULL,
	[flgExclude] [bit] NOT NULL,
	[MemoTxt] [varchar](100) NULL,
	[FileDate] [date] NOT NULL,
 CONSTRAINT [PK_Oth] PRIMARY KEY CLUSTERED 
(
	[FEC_Contrib_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PACViews]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PACViews](
	[CommID] [int] NOT NULL,
	[PACView] [char](1) NOT NULL,
 CONSTRAINT [PK_PACViews] PRIMARY KEY CLUSTERED 
(
	[CommID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[People]    Script Date: 2/25/2015 1:01:51 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[People](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[LName] [varchar](50) NULL,
	[Suffix] [varchar](5) NULL,
	[FName] [varchar](50) NULL,
	[MName] [varchar](50) NULL,
	[Nickname] [varchar](50) NULL,
	[SourceName] [varchar](200) NULL,
	[PrintName] [varchar](200) NULL,
	[Gender] [varchar](1) NULL,
	[DOB] [date] NULL,
	[Added] [smalldatetime] NOT NULL,
 CONSTRAINT [PK_People] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RptHdrs_F3]    Script Date: 2/25/2015 1:01:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RptHdrs_F3](
	[ImageID] [int] NOT NULL,
	[Active] [bit] NOT NULL,
	[FormTpID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[CommNm] [varchar](200) NOT NULL,
	[flgAddrChg] [bit] NOT NULL,
	[Addr1] [varchar](34) NOT NULL,
	[Addr2] [varchar](34) NULL,
	[City] [varchar](30) NOT NULL,
	[StAbbr] [char](2) NOT NULL,
	[Zip] [varchar](9) NOT NULL,
	[ElecStAbbr] [char](2) NOT NULL,
	[ElecDist] [tinyint] NULL,
	[RptPrdID] [tinyint] NOT NULL,
	[ElecID] [smallint] NOT NULL,
	[ElecDt] [date] NULL,
	[StOfElecAbbr] [char](2) NOT NULL,
	[CovgFmDate] [date] NULL,
	[CovgToDate] [date] NULL,
	[TrsLName] [varchar](95) NOT NULL,
	[TrsFName] [varchar](20) NULL,
	[TrsMName] [varchar](20) NULL,
	[TrsPfx] [varchar](10) NULL,
	[TrsSfx] [varchar](10) NULL,
	[SignDt] [date] NULL,
	[TotConts_P_6a] [money] NULL,
	[TotContRfds_P_6b] [money] NULL,
	[NetConts_P_6c] [money] NULL,
	[TotOpExps_P_7a] [money] NULL,
	[TotOffsetOpExps_P_7b] [money] NULL,
	[NetOpExps_P_7c] [money] NULL,
	[CashClose_P_8] [money] NULL,
	[DebtsTo_P_9] [money] NULL,
	[DebtsBy_P_10] [money] NULL,
	[IndContsItem_P_11a1] [money] NULL,
	[IndContsUnitem_P_11a2] [money] NULL,
	[IndContsTot_P_11a3] [money] NULL,
	[PolPtyCommConts_P_11b] [money] NULL,
	[OthPolCommConts_P_11c] [money] NULL,
	[CandConts_P_11d] [money] NULL,
	[TotConts_P_11e] [money] NULL,
	[TranFmOthAuthComms_P_12] [money] NULL,
	[CandLoans_P_13a] [money] NULL,
	[OthLoans_P_13b] [money] NULL,
	[TotLoans_P_13c] [money] NULL,
	[OffsetOpExps_P_14] [money] NULL,
	[OthRcpts_P_15] [money] NULL,
	[TotRcpts_P_16] [money] NULL,
	[OpExps_P_17] [money] NULL,
	[TranToOthAuthComms_P_18] [money] NULL,
	[CandLoansRepaid_P_19a] [money] NULL,
	[OthLoansRepaid_P_19b] [money] NULL,
	[TotLoansRepaid_P_19c] [money] NULL,
	[RefundsInd_P_20a] [money] NULL,
	[RefundsPolPtyComms_P_20b] [money] NULL,
	[RefundsOthPolComms_P_20c] [money] NULL,
	[TotRefunds_P_20d] [money] NULL,
	[OthDisb_P_21] [money] NULL,
	[TotDisb_P_22] [money] NULL,
	[CashBegin_P_23] [money] NULL,
	[TotRcpts_P_24] [money] NULL,
	[Subtotal_P_25] [money] NULL,
	[TotDisb_P_26] [money] NULL,
	[CashClose_P_27] [money] NULL,
	[TotConts_T_6a] [money] NULL,
	[TotContRfds_T_6b] [money] NULL,
	[NetConts_T_6c] [money] NULL,
	[TotOpExps_T_7a] [money] NULL,
	[TotOffsetOpExps_T_7b] [money] NULL,
	[NetOpExps_T_7c] [money] NULL,
	[IndContsItem_T_11a1] [money] NULL,
	[IndContsUnitem_T_11a2] [money] NULL,
	[IndContsTot_T_11a3] [money] NULL,
	[PolPtyCommConts_T_11b] [money] NULL,
	[OthPolCommConts_T_11c] [money] NULL,
	[CandConts_T_11d] [money] NULL,
	[TotConts_T_11e] [money] NULL,
	[TranFmOthAuthComms_T_12] [money] NULL,
	[CandLoans_T_13a] [money] NULL,
	[OthLoans_T_13b] [money] NULL,
	[TotLoans_T_13c] [money] NULL,
	[OffsetOpExps_T_14] [money] NULL,
	[OthRcpts_T_15] [money] NULL,
	[TotRcpts_T_16] [money] NULL,
	[OpExps_T_17] [money] NULL,
	[TranToOthAuthComms_T_18] [money] NULL,
	[CandLoansRepaid_T_19a] [money] NULL,
	[OthLoansRepaid_T_19b] [money] NULL,
	[TotLoansRepaid_T_19c] [money] NULL,
	[RefundsInd_T_20a] [money] NULL,
	[RefundsPolPtyComms_T_20b] [money] NULL,
	[RefundsOthPolComms_T_20c] [money] NULL,
	[TotRefunds_T_20d] [money] NULL,
	[OthDisb_T_21] [money] NULL,
	[TotDisb_T_22] [money] NULL,
	[HdrVer] [decimal](3, 1) NULL,
	[SoftNm] [varchar](50) NULL,
	[SoftVer] [varchar](50) NULL,
	[RptID] [varchar](50) NULL,
	[RptNbr] [varchar](50) NULL,
	[HdrCmnt] [varchar](200) NULL,
	[Vetted] [bit] NOT NULL,
 CONSTRAINT [PK_RptHdrs_F3] PRIMARY KEY CLUSTERED 
(
	[ImageID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RptHdrs_F3L]    Script Date: 2/25/2015 1:01:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RptHdrs_F3L](
	[ImageID] [int] NOT NULL,
	[Active] [bit] NOT NULL,
	[FormTpID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[CommNm] [varchar](200) NOT NULL,
	[flgAddrChg] [bit] NOT NULL,
	[Addr1] [varchar](34) NOT NULL,
	[Addr2] [varchar](34) NULL,
	[City] [varchar](30) NOT NULL,
	[StAbbr] [char](2) NOT NULL,
	[Zip] [varchar](9) NOT NULL,
	[ElecStAbbr] [char](2) NOT NULL,
	[ElecDist] [tinyint] NULL,
	[RptPrdID] [tinyint] NOT NULL,
	[ElecDt] [date] NULL,
	[StOfElecAbbr] [char](2) NOT NULL,
	[flgInclSemiAnnPrd] [bit] NOT NULL,
	[CovgFmDate] [date] NULL,
	[CovgToDate] [date] NULL,
	[flgInclSemiAnnJanJun] [bit] NOT NULL,
	[flgInclSemiAnnJulDec] [bit] NOT NULL,
	[TotRptBundContribs] [money] NULL,
	[SemiAnnBundContribs] [money] NULL,
	[TrsLName] [varchar](95) NOT NULL,
	[TrsFName] [varchar](20) NULL,
	[TrsMName] [varchar](20) NULL,
	[TrsPfx] [varchar](10) NULL,
	[TrsSfx] [varchar](10) NULL,
	[SignDt] [date] NULL,
	[HdrVer] [decimal](3, 1) NULL,
	[SoftNm] [varchar](50) NULL,
	[SoftVer] [varchar](50) NULL,
	[RptID] [varchar](50) NULL,
	[RptNbr] [varchar](50) NULL,
	[HdrCmnt] [varchar](200) NULL,
	[Vetted] [bit] NOT NULL,
 CONSTRAINT [PK_RptHdrs_F3L] PRIMARY KEY CLUSTERED 
(
	[ImageID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RptHdrs_F3P]    Script Date: 2/25/2015 1:01:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RptHdrs_F3P](
	[ImageID] [int] NOT NULL,
	[Active] [bit] NOT NULL,
	[FormTpID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[CommNm] [varchar](200) NOT NULL,
	[flgAddrChg] [bit] NOT NULL,
	[Addr1] [varchar](34) NOT NULL,
	[Addr2] [varchar](34) NULL,
	[City] [varchar](30) NOT NULL,
	[StAbbr] [char](2) NOT NULL,
	[Zip] [varchar](9) NOT NULL,
	[flgPrimElec] [bit] NOT NULL,
	[flgGenElec] [bit] NOT NULL,
	[RptPrdID] [tinyint] NOT NULL,
	[ElecID] [smallint] NOT NULL,
	[ElecDt] [date] NULL,
	[ElecStAbbr] [char](2) NOT NULL,
	[CovgFmDate] [date] NULL,
	[CovgToDate] [date] NULL,
	[TrsLName] [varchar](95) NOT NULL,
	[TrsFName] [varchar](20) NULL,
	[TrsMName] [varchar](20) NULL,
	[TrsPfx] [varchar](10) NULL,
	[TrsSfx] [varchar](10) NULL,
	[SignDt] [date] NULL,
	[CashBegin_P_6] [money] NULL,
	[TotRcpts_P_7] [money] NULL,
	[Subtotal_P_8] [money] NULL,
	[TotDisb_P_9] [money] NULL,
	[CashClose_P_10] [money] NULL,
	[DebtsTo_P_11] [money] NULL,
	[DebtsBy_P_12] [money] NULL,
	[LmtdExps_P_13] [money] NULL,
	[NetConts_P_14] [money] NULL,
	[NetOpExps_P_15] [money] NULL,
	[FedFnds_P_16] [money] NULL,
	[IndContsItem_P_17a1] [money] NULL,
	[IndContsUnitem_P_17a2] [money] NULL,
	[IndContsTot_P_17a3] [money] NULL,
	[PolPtyCommConts_P_17b] [money] NULL,
	[OthPolCommConts_P_17c] [money] NULL,
	[CandConts_P_17d] [money] NULL,
	[TotConts_P_17e] [money] NULL,
	[TranFmPtyComms_P_18] [money] NULL,
	[CandLoans_P_19a] [money] NULL,
	[OthLoans_P_19b] [money] NULL,
	[TotLoans_P_19c] [money] NULL,
	[OptgOffsets_P_20a] [money] NULL,
	[FndrsgOffsets_P_20b] [money] NULL,
	[LegalAcctgOffsets_P_20c] [money] NULL,
	[TotOffsets_P_20d] [money] NULL,
	[OthRcpts_P_21] [money] NULL,
	[TotRcpts_P_22] [money] NULL,
	[OpExps_P_23] [money] NULL,
	[TranToOthAuthComms_P_24] [money] NULL,
	[FndrsgDisb_P_25] [money] NULL,
	[LegalAcctgDisb_P_26] [money] NULL,
	[CandLoansRepaid_P_27a] [money] NULL,
	[OthLoansRepaid_P_27b] [money] NULL,
	[TotLoansRepaid_P_27c] [money] NULL,
	[RefundsInd_P_28a] [money] NULL,
	[RefundsPolPtyComms_P_28b] [money] NULL,
	[RefundsOthPolComms_P_28c] [money] NULL,
	[TotRefunds_P_28d] [money] NULL,
	[OthDisb_P_29] [money] NULL,
	[TotDisb_P_30] [money] NULL,
	[ItmsToBeLiq_P_31] [money] NULL,
	[Alabama_P] [money] NULL,
	[Alaska_P] [money] NULL,
	[Arizona_P] [money] NULL,
	[Arkansas_P] [money] NULL,
	[California_P] [money] NULL,
	[Colorado_P] [money] NULL,
	[Connecticut_P] [money] NULL,
	[Delaware_P] [money] NULL,
	[DistCol_P] [money] NULL,
	[Florida_P] [money] NULL,
	[Georgia_P] [money] NULL,
	[Hawaii_P] [money] NULL,
	[Idaho_P] [money] NULL,
	[Illinois_P] [money] NULL,
	[Indiana_P] [money] NULL,
	[Iowa_P] [money] NULL,
	[Kansas_P] [money] NULL,
	[Kentucky_P] [money] NULL,
	[Louisiana_P] [money] NULL,
	[Maine_P] [money] NULL,
	[Maryland_P] [money] NULL,
	[Massachusetts_P] [money] NULL,
	[Michigan_P] [money] NULL,
	[Minnesota_P] [money] NULL,
	[Mississippi_P] [money] NULL,
	[Missouri_P] [money] NULL,
	[Montana_P] [money] NULL,
	[Nebraska_P] [money] NULL,
	[Nevada_P] [money] NULL,
	[NewHampshire_P] [money] NULL,
	[NewJersey_P] [money] NULL,
	[NewMexico_P] [money] NULL,
	[NewYork_P] [money] NULL,
	[NorthCarolina_P] [money] NULL,
	[NorthDakota_P] [money] NULL,
	[Ohio_P] [money] NULL,
	[Oklahoma_P] [money] NULL,
	[Oregon_P] [money] NULL,
	[Pennsylvania_P] [money] NULL,
	[RhodeIsland_P] [money] NULL,
	[SouthCarolina_P] [money] NULL,
	[SouthDakota_P] [money] NULL,
	[Tennessee_P] [money] NULL,
	[Texas_P] [money] NULL,
	[Utah_P] [money] NULL,
	[Vermont_P] [money] NULL,
	[Virginia_P] [money] NULL,
	[Washington_P] [money] NULL,
	[WestVirginia_P] [money] NULL,
	[Wisconsin_P] [money] NULL,
	[Wyoming_P] [money] NULL,
	[PuertoRico_P] [money] NULL,
	[Guam_P] [money] NULL,
	[VirginIslands_P] [money] NULL,
	[TotAllocs_P] [money] NULL,
	[FedFnds_T_16] [money] NULL,
	[IndContsItem_T_17a1] [money] NULL,
	[IndContsUnitem_T_17a2] [money] NULL,
	[IndContsTot_T_17a3] [money] NULL,
	[PolPtyCommConts_T_17b] [money] NULL,
	[OthPolCommConts_T_17c] [money] NULL,
	[CandConts_T_17d] [money] NULL,
	[TotConts_T_17e] [money] NULL,
	[TranFmPtyComms_T_18] [money] NULL,
	[CandLoans_T_19a] [money] NULL,
	[OthLoans_T_19b] [money] NULL,
	[TotLoans_T_19c] [money] NULL,
	[OptgOffsets_T_20a] [money] NULL,
	[FndrsgOffsets_T_20b] [money] NULL,
	[LegalAcctgOffsets_T_20c] [money] NULL,
	[TotOffsets_T_20d] [money] NULL,
	[OthRcpts_T_21] [money] NULL,
	[TotRcpts_T_22] [money] NULL,
	[OpExps_T_23] [money] NULL,
	[TranToOthAuthComms_T_24] [money] NULL,
	[FndrsgDisb_T_25] [money] NULL,
	[LegalAcctgDisb_T_26] [money] NULL,
	[CandLoansRepaid_T_27a] [money] NULL,
	[OthLoansRepaid_T_27b] [money] NULL,
	[TotLoansRepaid_T_27c] [money] NULL,
	[RefundsInd_T_28a] [money] NULL,
	[RefundsPolPtyComms_T_28b] [money] NULL,
	[RefundsOthPolComms_T_28c] [money] NULL,
	[TotRefunds_T_28d] [money] NULL,
	[OthDisb_T_29] [money] NULL,
	[TotDisb_T_30] [money] NULL,
	[Alabama_T] [money] NULL,
	[Alaska_T] [money] NULL,
	[Arizona_T] [money] NULL,
	[Arkansas_T] [money] NULL,
	[California_T] [money] NULL,
	[Colorado_T] [money] NULL,
	[Connecticut_T] [money] NULL,
	[Delaware_T] [money] NULL,
	[DistCol_T] [money] NULL,
	[Florida_T] [money] NULL,
	[Georgia_T] [money] NULL,
	[Hawaii_T] [money] NULL,
	[Idaho_T] [money] NULL,
	[Illinois_T] [money] NULL,
	[Indiana_T] [money] NULL,
	[Iowa_T] [money] NULL,
	[Kansas_T] [money] NULL,
	[Kentucky_T] [money] NULL,
	[Louisiana_T] [money] NULL,
	[Maine_T] [money] NULL,
	[Maryland_T] [money] NULL,
	[Massachusetts_T] [money] NULL,
	[Michigan_T] [money] NULL,
	[Minnesota_T] [money] NULL,
	[Mississippi_T] [money] NULL,
	[Missouri_T] [money] NULL,
	[Montana_T] [money] NULL,
	[Nebraska_T] [money] NULL,
	[Nevada_T] [money] NULL,
	[NewHampshire_T] [money] NULL,
	[NewJersey_T] [money] NULL,
	[NewMexico_T] [money] NULL,
	[NewYork_T] [money] NULL,
	[NorthCarolina_T] [money] NULL,
	[NorthDakota_T] [money] NULL,
	[Ohio_T] [money] NULL,
	[Oklahoma_T] [money] NULL,
	[Oregon_T] [money] NULL,
	[Pennsylvania_T] [money] NULL,
	[RhodeIsland_T] [money] NULL,
	[SouthCarolina_T] [money] NULL,
	[SouthDakota_T] [money] NULL,
	[Tennessee_T] [money] NULL,
	[Texas_T] [money] NULL,
	[Utah_T] [money] NULL,
	[Vermont_T] [money] NULL,
	[Virginia_T] [money] NULL,
	[Washington_T] [money] NULL,
	[WestVirginia_T] [money] NULL,
	[Wisconsin_T] [money] NULL,
	[Wyoming_T] [money] NULL,
	[PuertoRico_T] [money] NULL,
	[Guam_T] [money] NULL,
	[VirginIslands_T] [money] NULL,
	[TotAllocs_T] [money] NULL,
	[HdrVer] [decimal](3, 1) NULL,
	[SoftNm] [varchar](50) NULL,
	[SoftVer] [varchar](50) NULL,
	[RptID] [varchar](50) NULL,
	[RptNbr] [varchar](50) NULL,
	[HdrCmnt] [varchar](200) NULL,
	[Vetted] [bit] NOT NULL,
 CONSTRAINT [PK_RptHdrs_F3P] PRIMARY KEY CLUSTERED 
(
	[ImageID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RptHdrs_F3X]    Script Date: 2/25/2015 1:01:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RptHdrs_F3X](
	[ImageID] [int] NOT NULL,
	[Active] [bit] NOT NULL,
	[FormTpID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[CommNm] [varchar](200) NOT NULL,
	[flgAddrChg] [bit] NOT NULL,
	[Addr1] [varchar](34) NOT NULL,
	[Addr2] [varchar](34) NULL,
	[City] [varchar](30) NOT NULL,
	[StAbbr] [char](2) NOT NULL,
	[Zip] [varchar](9) NOT NULL,
	[RptPrdID] [tinyint] NOT NULL,
	[ElecID] [smallint] NOT NULL,
	[ElecDt] [date] NULL,
	[ElecStAbbr] [char](2) NOT NULL,
	[CovgFmDate] [date] NULL,
	[CovgToDate] [date] NULL,
	[flgQualComm] [bit] NOT NULL,
	[TrsLName] [varchar](95) NOT NULL,
	[TrsFName] [varchar](20) NULL,
	[TrsMName] [varchar](20) NULL,
	[TrsPfx] [varchar](10) NULL,
	[TrsSfx] [varchar](10) NULL,
	[SignDt] [date] NULL,
	[CashBegin_P_6b] [money] NULL,
	[TotRcpts_P_6c] [money] NULL,
	[Subtotal_P_6d] [money] NULL,
	[TotDisb_P_7] [money] NULL,
	[CashClose_P_8] [money] NULL,
	[DebtsTo_P_9] [money] NULL,
	[DebtsBy_P_10] [money] NULL,
	[IndContsItem_P_11a1] [money] NULL,
	[IndContsUnitem_P_11a2] [money] NULL,
	[IndContsTot_P_11a3] [money] NULL,
	[PolPtyCommConts_P_11b] [money] NULL,
	[OthPolCommConts_P_11c] [money] NULL,
	[TotConts_P_11d] [money] NULL,
	[TranFmPtyComms_P_12] [money] NULL,
	[AllLoansRcvd_P_13] [money] NULL,
	[LoanPymtsRcvd_P_14] [money] NULL,
	[RefundOffsets_P_15] [money] NULL,
	[RefundsFedConts_P_16] [money] NULL,
	[OthFedRcptsDvds_P_17] [money] NULL,
	[TranFmNonFedAcctH3_P_18a] [money] NULL,
	[TranFmNonFedAcctH5_P_18b] [money] NULL,
	[TotNonFedTrans_P_18c] [money] NULL,
	[TotRcpts_P_19] [money] NULL,
	[TotFedRcpts_P_20] [money] NULL,
	[OpExpsFedShr_P_21a1] [money] NULL,
	[OpExpsNonFedShr_P_21a2] [money] NULL,
	[OpExpsOthFed_P_21b] [money] NULL,
	[TotOpExps_P_21c] [money] NULL,
	[TranToPtyComms_P_22] [money] NULL,
	[ContsToFedCandsComms_P_23] [money] NULL,
	[IndtExps_P_24] [money] NULL,
	[CoordExpsByPtyComms_P_25] [money] NULL,
	[LoansRepaid_P_26] [money] NULL,
	[LoansMade_P_27] [money] NULL,
	[RefundsInd_P_28a] [money] NULL,
	[RefundsPolPtyComms_P_28b] [money] NULL,
	[RefundsOthPolComms_P_28c] [money] NULL,
	[TotContRefunds_P_28d] [money] NULL,
	[OthDisb_P_29] [money] NULL,
	[ShrdElecActivityFedShr_P_30a1] [money] NULL,
	[ShrdElecActivityNonFedShr_P_30a2] [money] NULL,
	[NonAllocFedElecActivity_P_30b] [money] NULL,
	[TotFedElecActivity_P_30c] [money] NULL,
	[TotDisb_P_31] [money] NULL,
	[TotFedDisb_P_32] [money] NULL,
	[TotConts_P_33] [money] NULL,
	[TotContRefunds_P_34] [money] NULL,
	[NetConts_P_35] [money] NULL,
	[TotFedOpExps_P_36] [money] NULL,
	[TotOffsetsOpExp_P_37] [money] NULL,
	[NetOpExps_P_38] [money] NULL,
	[CashBegin_T_6a] [money] NULL,
	[CashBeginYr] [money] NULL,
	[TotRcpts_T_6c] [money] NULL,
	[Subtotal_T_6d] [money] NULL,
	[TotDisb_T_7] [money] NULL,
	[CashClose_T_8] [money] NULL,
	[IndContsItem_T_11a1] [money] NULL,
	[IndContsUnitem_T_11a2] [money] NULL,
	[IndContsTot_T_11a3] [money] NULL,
	[PolPtyCommConts_T_11b] [money] NULL,
	[OthPolCommConts_T_11c] [money] NULL,
	[TotConts_T_11d] [money] NULL,
	[TranFmPtyComms_T_12] [money] NULL,
	[AllLoansRcvd_T_13] [money] NULL,
	[LoanPymtsRcvd_T_14] [money] NULL,
	[RefundOffsets_T_15] [money] NULL,
	[RefundsFedConts_T_16] [money] NULL,
	[OthFedRcptsDvds_T_17] [money] NULL,
	[TranFmNonFedAcctH3_T_18a] [money] NULL,
	[TranFmNonFedAcctH5_T_18b] [money] NULL,
	[TotNonFedTrans_T_18c] [money] NULL,
	[TotRcpts_T_19] [money] NULL,
	[TotFedRcpts_T_20] [money] NULL,
	[OpExpsFedShr_T_21a1] [money] NULL,
	[OpExpsNonFedShr_T_21a2] [money] NULL,
	[OpExpsOthFed_T_21b] [money] NULL,
	[TotOpExps_T_21c] [money] NULL,
	[TranToPtyComms_T_22] [money] NULL,
	[ContsToFedCandsComms_T_23] [money] NULL,
	[IndtExps_T_24] [money] NULL,
	[CoordExpsByPtyComms_T_25] [money] NULL,
	[LoansRepaid_T_26] [money] NULL,
	[LoansMade_T_27] [money] NULL,
	[RefundsInd_T_28a] [money] NULL,
	[RefundsPolPtyComms_T_28b] [money] NULL,
	[RefundsOthPolComms_T_28c] [money] NULL,
	[TotContRefunds_T_28d] [money] NULL,
	[OthDisb_T_29] [money] NULL,
	[ShrdElecActivityFedShr_T_30a1] [money] NULL,
	[ShrdElecActivityNonFedShr_T_30a2] [money] NULL,
	[NonAllocFedElecActivity_T_30b] [money] NULL,
	[TotFedElecActivity_T_30c] [money] NULL,
	[TotDisb_T_31] [money] NULL,
	[TotFedDisb_T_32] [money] NULL,
	[TotConts_T_33] [money] NULL,
	[TotContRefunds_T_34] [money] NULL,
	[NetConts_T_35] [money] NULL,
	[TotFedOpExps_T_36] [money] NULL,
	[TotOffsetsOpExp_T_37] [money] NULL,
	[NetOpExps_T_38] [money] NULL,
	[HdrVer] [decimal](3, 1) NULL,
	[SoftNm] [varchar](50) NULL,
	[SoftVer] [varchar](50) NULL,
	[RptID] [varchar](50) NULL,
	[RptNbr] [varchar](50) NULL,
	[HdrCmnt] [varchar](200) NULL,
	[Vetted] [bit] NOT NULL,
 CONSTRAINT [PK_RptHdrs_F3X] PRIMARY KEY CLUSTERED 
(
	[ImageID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchA]    Script Date: 2/25/2015 1:01:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchA](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](36) NOT NULL,
	[BkRefTransID] [varchar](36) NULL,
	[BkRefSchdID] [tinyint] NOT NULL,
	[EntTpID] [tinyint] NOT NULL,
	[ContOrgNm] [varchar](200) NULL,
	[ContLName] [varchar](95) NULL,
	[ContFName] [varchar](35) NULL,
	[ContMName] [varchar](20) NULL,
	[ContPfx] [varchar](20) NULL,
	[ContSfx] [varchar](15) NULL,
	[Addr1] [varchar](34) NULL,
	[Addr2] [varchar](34) NULL,
	[City] [varchar](30) NULL,
	[StAbbr] [char](2) NOT NULL,
	[Zip] [varchar](9) NULL,
	[ElecID] [smallint] NOT NULL,
	[ElecDesc] [varchar](20) NULL,
	[ContDt] [date] NULL,
	[ContAmt] [money] NULL,
	[ContAgg] [money] NULL,
	[TransPurpID] [tinyint] NOT NULL,
	[ContPurpDesc] [varchar](100) NULL,
	[Emp] [varchar](38) NULL,
	[Occ] [varchar](38) NULL,
	[DonorCommID] [int] NOT NULL,
	[DonorCommNm] [varchar](200) NULL,
	[DonorCandID] [int] NOT NULL,
	[DonorCandLName] [varchar](95) NULL,
	[DonorCandFName] [varchar](35) NULL,
	[DonorCandMName] [varchar](20) NULL,
	[DonorCandPfx] [varchar](20) NULL,
	[DonorCandSfx] [varchar](15) NULL,
	[DonorCandOfc] [char](1) NOT NULL,
	[DonorCandStAbbr] [char](2) NOT NULL,
	[DonorCandDist] [tinyint] NULL,
	[ConduitNm] [varchar](200) NULL,
	[ConduitAddr1] [varchar](34) NULL,
	[ConduitAddr2] [varchar](34) NULL,
	[ConduitCity] [varchar](30) NULL,
	[ConduitStAbbr] [char](2) NOT NULL,
	[ConduitZip] [varchar](9) NULL,
	[flgMemo] [bit] NOT NULL,
	[MemoTxt] [varchar](100) NULL,
	[SIorSLRef] [varchar](9) NULL,
 CONSTRAINT [PK_SchA] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchB]    Script Date: 2/25/2015 1:01:52 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchB](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](36) NOT NULL,
	[BkRefTransID] [varchar](36) NULL,
	[BkRefSchdID] [tinyint] NOT NULL,
	[EntTpID] [tinyint] NOT NULL,
	[PayeeOrgNm] [varchar](200) NULL,
	[PayeeLName] [varchar](95) NULL,
	[PayeeFName] [varchar](35) NULL,
	[PayeeMName] [varchar](20) NULL,
	[PayeePfx] [varchar](20) NULL,
	[PayeeSfx] [varchar](15) NULL,
	[PayeeAddr1] [varchar](34) NULL,
	[PayeeAddr2] [varchar](34) NULL,
	[PayeeCity] [varchar](30) NULL,
	[PayeeStAbbr] [char](2) NOT NULL,
	[PayeeZip] [varchar](9) NULL,
	[ElecID] [smallint] NOT NULL,
	[ElecDesc] [varchar](20) NULL,
	[ExpDt] [date] NULL,
	[ExpAmt] [money] NULL,
	[SemiAnnRefBundAmt] [money] NULL,
	[TransPurpID] [tinyint] NOT NULL,
	[ExpPurpDesc] [varchar](100) NULL,
	[ExpCatID] [tinyint] NOT NULL,
	[BenCommID] [int] NOT NULL,
	[BenCommNm] [varchar](200) NULL,
	[BenCandID] [int] NOT NULL,
	[BenCandLName] [varchar](95) NULL,
	[BenCandFName] [varchar](35) NULL,
	[BenCandMName] [varchar](20) NULL,
	[BenCandPfx] [varchar](20) NULL,
	[BenCandSfx] [varchar](15) NULL,
	[BenCandOfc] [char](1) NOT NULL,
	[BenCandStAbbr] [char](2) NOT NULL,
	[BenCandDist] [tinyint] NULL,
	[ConduitNm] [varchar](200) NULL,
	[ConduitAddr1] [varchar](34) NULL,
	[ConduitAddr2] [varchar](34) NULL,
	[ConduitCity] [varchar](30) NULL,
	[ConduitStAbbr] [char](2) NOT NULL,
	[ConduitZip] [varchar](9) NULL,
	[flgMemo] [bit] NOT NULL,
	[MemoTxt] [varchar](100) NULL,
	[SIorSLRef] [varchar](9) NULL,
 CONSTRAINT [PK_SchB] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchC]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchC](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[RctLnNbr] [varchar](8) NULL,
	[EntTpID] [tinyint] NOT NULL,
	[LenderOrgName] [varchar](200) NULL,
	[LenderLName] [varchar](95) NULL,
	[LenderFName] [varchar](35) NULL,
	[LenderMName] [varchar](20) NULL,
	[LenderPfx] [varchar](20) NULL,
	[LenderSfx] [varchar](15) NULL,
	[LenderAddr1] [varchar](34) NULL,
	[LenderAddr2] [varchar](34) NULL,
	[LenderCity] [varchar](30) NULL,
	[LenderStAbbr] [char](2) NOT NULL,
	[LenderZip] [varchar](9) NULL,
	[ElecID] [smallint] NOT NULL,
	[ElecDesc] [varchar](20) NULL,
	[LoanAmt] [money] NULL,
	[PymtToDt] [money] NULL,
	[LoanBlnc] [money] NULL,
	[IncurredDt] [date] NULL,
	[DueDt] [date] NULL,
	[IntRt] [varchar](15) NULL,
	[flgSecured] [bit] NOT NULL,
	[flgPersFunds] [bit] NOT NULL,
	[LenderCommID] [int] NOT NULL,
	[LenderCandID] [int] NOT NULL,
	[LenderCandLName] [varchar](95) NULL,
	[LenderCandFName] [varchar](35) NULL,
	[LenderCandMName] [varchar](20) NULL,
	[LenderCandPfx] [varchar](20) NULL,
	[LenderCandSfx] [varchar](15) NULL,
	[LenderCandOfc] [char](1) NOT NULL,
	[LenderCandStAbbr] [char](2) NOT NULL,
	[LenderCandDist] [tinyint] NULL,
	[flgMemo] [bit] NOT NULL,
	[MemoTxt] [varchar](100) NULL,
 CONSTRAINT [PK_SchC] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchC1]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchC1](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[BkRefTransID] [varchar](20) NOT NULL,
	[Lender] [varchar](200) NULL,
	[LenderAddr1] [varchar](34) NULL,
	[LenderAddr2] [varchar](34) NULL,
	[LenderCity] [varchar](30) NULL,
	[LenderStAbbr] [char](2) NOT NULL,
	[LenderZip] [varchar](9) NULL,
	[LoanAmt] [money] NULL,
	[IntRt] [varchar](15) NULL,
	[IncurredDt] [date] NULL,
	[DueDt] [date] NULL,
	[flgLoanRestructured] [bit] NOT NULL,
	[OrigLoanDt] [date] NULL,
	[CrdtAmtThisDraw] [money] NULL,
	[TotBlnc] [money] NULL,
	[flgOthersLiable] [bit] NOT NULL,
	[flgCollateral] [bit] NOT NULL,
	[CollateralDesc] [varchar](100) NULL,
	[CollateralVal] [money] NULL,
	[flgPerfectedInt] [bit] NOT NULL,
	[flgFutIncPledged] [bit] NOT NULL,
	[FutIncDesc] [varchar](100) NULL,
	[FutIncEstVal] [money] NULL,
	[DepAcctEstDt] [date] NULL,
	[AcctLocName] [varchar](200) NULL,
	[AcctLocAddr1] [varchar](34) NULL,
	[AcctLocAddr2] [varchar](34) NULL,
	[AcctLocCity] [varchar](30) NULL,
	[AcctLocStAbbr] [char](2) NOT NULL,
	[AcctLocZip] [varchar](9) NULL,
	[DepAcctAuthDt] [date] NULL,
	[LoanBasisDesc] [varchar](100) NULL,
	[TrsLName] [varchar](95) NULL,
	[TrsFName] [varchar](35) NULL,
	[TrsMName] [varchar](20) NULL,
	[TrsPfx] [varchar](20) NULL,
	[TrsSfx] [varchar](15) NULL,
	[TrsSignDt] [date] NULL,
	[LendRepLName] [varchar](95) NULL,
	[LendRepFName] [varchar](35) NULL,
	[LendRepMName] [varchar](20) NULL,
	[LendRepPfx] [varchar](20) NULL,
	[LendRepSfx] [varchar](15) NULL,
	[LendRepTitle] [varchar](20) NULL,
	[LendRepSignDt] [date] NULL,
 CONSTRAINT [PK_SchC1] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchC2]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchC2](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[BkRefTransID] [varchar](20) NOT NULL,
	[GuarLName] [varchar](95) NULL,
	[GuarFName] [varchar](35) NULL,
	[GuarMName] [varchar](20) NULL,
	[GuarPfx] [varchar](20) NULL,
	[GuarSfx] [varchar](15) NULL,
	[GuarAddr1] [varchar](34) NULL,
	[GuarAddr2] [varchar](34) NULL,
	[GuarCity] [varchar](30) NULL,
	[GuarStAbbr] [char](2) NOT NULL,
	[GuarZip] [varchar](9) NULL,
	[GuarEmp] [varchar](38) NULL,
	[GuarOcc] [varchar](38) NULL,
	[GuarAmt] [money] NULL,
 CONSTRAINT [PK_SchC2] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchD]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchD](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[EntTpID] [tinyint] NOT NULL,
	[CreditorOrgNm] [varchar](200) NULL,
	[CreditorLName] [varchar](95) NULL,
	[CreditorFName] [varchar](20) NULL,
	[CreditorMName] [varchar](20) NULL,
	[CreditorPfx] [varchar](10) NULL,
	[CreditorSfx] [varchar](10) NULL,
	[CreditorAddr1] [varchar](34) NULL,
	[CreditorAddr2] [varchar](34) NULL,
	[CreditorCity] [varchar](30) NULL,
	[CreditorStAbbr] [char](2) NOT NULL,
	[CreditorZip] [varchar](9) NULL,
	[DebtPurp] [varchar](100) NULL,
	[BegBlnc_P] [money] NULL,
	[IncurAmt_P] [money] NULL,
	[PymtAmt_P] [money] NULL,
	[BalClose_P] [money] NULL,
	[CreditorCommID] [int] NOT NULL,
	[CreditorCandID] [int] NOT NULL,
	[CreditorCandFullNm] [varchar](95) NULL,
	[CreditorCandOfc] [char](1) NOT NULL,
	[CreditorCandStAbbr] [char](2) NOT NULL,
	[CreditorCandDist] [tinyint] NULL,
	[ConduitNm] [varchar](200) NULL,
	[ConduitAddr1] [varchar](34) NULL,
	[ConduitAddr2] [varchar](34) NULL,
	[ConduitCity] [varchar](30) NULL,
	[ConduitStAbbr] [char](2) NOT NULL,
	[ConduitZip] [varchar](9) NULL,
	[TransID] [varchar](36) NOT NULL,
 CONSTRAINT [PK_SchD] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchE]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchE](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](36) NOT NULL,
	[BkRefTransID] [varchar](36) NULL,
	[BkRefSchdID] [tinyint] NOT NULL,
	[EntTpID] [tinyint] NOT NULL,
	[PayeeOrgNm] [varchar](200) NULL,
	[PayeeLName] [varchar](95) NULL,
	[PayeeFName] [varchar](35) NULL,
	[PayeeMName] [varchar](20) NULL,
	[PayeePfx] [varchar](20) NULL,
	[PayeeSfx] [varchar](15) NULL,
	[PayeeAddr1] [varchar](34) NULL,
	[PayeeAddr2] [varchar](34) NULL,
	[PayeeCity] [varchar](30) NULL,
	[PayeeStAbbr] [char](2) NOT NULL,
	[PayeeZip] [varchar](9) NULL,
	[ExpPurpDesc] [varchar](100) NULL,
	[ExpCatID] [tinyint] NOT NULL,
	[ElecID] [smallint] NOT NULL,
	[ElecDesc] [varchar](20) NULL,
	[ExpDt] [date] NULL,
	[ExpAmt] [money] NULL,
	[ExpAgg] [money] NULL,
	[PayeeCommID] [int] NOT NULL,
	[SupOppCd] [char](1) NOT NULL,
	[SupOppCandID] [int] NULL,
	[SupOppCandLName] [varchar](95) NULL,
	[SupOppCandFName] [varchar](35) NULL,
	[SupOppCandMName] [varchar](20) NULL,
	[SupOppCandPfx] [varchar](20) NULL,
	[SupOppCandSfx] [varchar](15) NULL,
	[SupOppCandOfc] [char](1) NOT NULL,
	[SupOppCandStAbbr] [char](2) NOT NULL,
	[SupOppCandDist] [tinyint] NULL,
	[CompLName] [varchar](95) NULL,
	[CompFName] [varchar](35) NULL,
	[CompMName] [varchar](20) NULL,
	[CompPfx] [varchar](20) NULL,
	[CompSfx] [varchar](15) NULL,
	[SignDt] [date] NULL,
	[flgMemo] [bit] NOT NULL,
	[MemoTxt] [varchar](100) NULL,
	[DissmntnDt] [date] NULL,
 CONSTRAINT [PK_SchE] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchF]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchF](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[BkRefTransID] [varchar](20) NULL,
	[BkRefSchdID] [tinyint] NOT NULL,
	[flgDesigCoordExp] [bit] NOT NULL,
	[DesigCommID] [int] NULL,
	[DesigCommNm] [varchar](200) NULL,
	[SubordCommID] [int] NULL,
	[SubordCommNm] [varchar](200) NULL,
	[SubordAddr1] [varchar](34) NULL,
	[SubordAddr2] [varchar](34) NULL,
	[SubordCity] [varchar](30) NULL,
	[SubordStAbbr] [char](2) NOT NULL,
	[SubordZip] [varchar](9) NULL,
	[EntTpID] [tinyint] NOT NULL,
	[PayeeOrgNm] [varchar](200) NULL,
	[PayeeLName] [varchar](95) NULL,
	[PayeeFName] [varchar](35) NULL,
	[PayeeMName] [varchar](20) NULL,
	[PayeePfx] [varchar](20) NULL,
	[PayeeSfx] [varchar](15) NULL,
	[PayeeAddr1] [varchar](34) NULL,
	[PayeeAddr2] [varchar](34) NULL,
	[PayeeCity] [varchar](30) NULL,
	[PayeeStAbbr] [char](2) NOT NULL,
	[PayeeZip] [varchar](9) NULL,
	[ExpDt] [date] NULL,
	[ExpAmt] [money] NULL,
	[ExpAgg] [money] NULL,
	[TransPurpID] [tinyint] NOT NULL,
	[ExpPurpDesc] [varchar](100) NULL,
	[ExpCatID] [tinyint] NOT NULL,
	[PayeeCommID] [int] NOT NULL,
	[PayeeCandID] [int] NOT NULL,
	[PayeeCandLName] [varchar](95) NULL,
	[PayeeCandFName] [varchar](35) NULL,
	[PayeeCandMName] [varchar](20) NULL,
	[PayeeCandPfx] [varchar](20) NULL,
	[PayeeCandSfx] [varchar](15) NULL,
	[PayeeCandOfc] [char](1) NOT NULL,
	[PayeeCandStAbbr] [char](2) NOT NULL,
	[PayeeCandDist] [tinyint] NULL,
	[flgMemo] [bit] NOT NULL,
	[MemoTxt] [varchar](100) NULL,
 CONSTRAINT [PK_SchF] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchH1]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchH1](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[flgStLocFxPctPresOnly] [bit] NOT NULL,
	[flgStLocFxPctPresAndSen] [bit] NOT NULL,
	[flgStLocFxPctSenOnly] [bit] NOT NULL,
	[flgStLocFxPctNonPresNonSen] [bit] NOT NULL,
	[flgFlatMin50PctFed] [bit] NOT NULL,
	[FedPct] [decimal](7, 4) NULL,
	[NonFedPct] [decimal](7, 4) NULL,
	[flgAdmRatio] [bit] NOT NULL,
	[flgGenericVoterDrvRatio] [bit] NOT NULL,
	[flgPubCommunRefPrtyRatio] [bit] NOT NULL,
 CONSTRAINT [PK_SchH1] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchH2]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchH2](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[EventNm] [varchar](90) NULL,
	[flgDirFndrsg] [bit] NOT NULL,
	[flgDirCandSup] [bit] NOT NULL,
	[RatioCd] [char](1) NOT NULL,
	[FedPct] [decimal](7, 4) NULL,
	[NonFedPct] [decimal](7, 4) NULL,
 CONSTRAINT [PK_SchH2] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchH3]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchH3](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[BkRefTransID] [varchar](20) NULL,
	[AcctNm] [varchar](90) NULL,
	[EventTp] [char](2) NOT NULL,
	[EventNm] [varchar](90) NULL,
	[RcptDt] [date] NULL,
	[TotAmtTrans] [money] NULL,
	[TransAmt] [money] NULL,
 CONSTRAINT [PK_SchH3] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchH4]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchH4](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[BkRefTransID] [varchar](20) NULL,
	[BkRefSchdID] [tinyint] NOT NULL,
	[EntTpID] [tinyint] NOT NULL,
	[PayeeOrgNm] [varchar](200) NULL,
	[PayeeLName] [varchar](95) NULL,
	[PayeeFName] [varchar](35) NULL,
	[PayeeMName] [varchar](20) NULL,
	[PayeePfx] [varchar](20) NULL,
	[PayeeSfx] [varchar](15) NULL,
	[PayeeAddr1] [varchar](34) NULL,
	[PayeeAddr2] [varchar](34) NULL,
	[PayeeCity] [varchar](30) NULL,
	[PayeeStAbbr] [char](2) NOT NULL,
	[PayeeZip] [varchar](9) NULL,
	[EventNm] [varchar](90) NULL,
	[ExpDt] [date] NULL,
	[ExpAmt] [money] NULL,
	[FedAmt] [money] NULL,
	[NonFedAmt] [money] NULL,
	[EventAgg] [money] NULL,
	[TransPurpID] [tinyint] NOT NULL,
	[ExpPurpDesc] [varchar](100) NULL,
	[ExpCatID] [tinyint] NOT NULL,
	[flgAdminActivity] [bit] NOT NULL,
	[flgDirectFndrsg] [bit] NOT NULL,
	[flgExempt] [bit] NOT NULL,
	[flgGenVtrDrv] [bit] NOT NULL,
	[flgDirCandSup] [bit] NOT NULL,
	[flgPubCommun] [bit] NOT NULL,
	[flgMemo] [bit] NOT NULL,
	[MemoTxt] [varchar](100) NULL,
 CONSTRAINT [PK_SchH4] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchH5]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchH5](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[AcctNm] [varchar](90) NULL,
	[RcptDt] [date] NULL,
	[TotAmt] [money] NULL,
	[VotRegnAmt] [money] NULL,
	[VotIDAmt] [money] NULL,
	[GOTVAmt] [money] NULL,
	[GenCampAmt] [money] NULL,
 CONSTRAINT [PK_SchH5] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchH6]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchH6](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[BkRefTransID] [varchar](20) NULL,
	[BkRefSchdID] [tinyint] NOT NULL,
	[EntTpID] [tinyint] NOT NULL,
	[PayeeOrgNm] [varchar](200) NULL,
	[PayeeLName] [varchar](95) NULL,
	[PayeeFName] [varchar](35) NULL,
	[PayeeMName] [varchar](20) NULL,
	[PayeePfx] [varchar](20) NULL,
	[PayeeSfx] [varchar](15) NULL,
	[PayeeAddr1] [varchar](34) NULL,
	[PayeeAddr2] [varchar](34) NULL,
	[PayeeCity] [varchar](30) NULL,
	[PayeeStAbbr] [char](2) NOT NULL,
	[PayeeZip] [varchar](9) NULL,
	[EventNm] [varchar](90) NULL,
	[ExpDt] [date] NULL,
	[TotExpAmt] [money] NULL,
	[FedAmt] [money] NULL,
	[LevinAmt] [money] NULL,
	[ExpAgg] [money] NULL,
	[TransPurpID] [tinyint] NOT NULL,
	[ExpPurpDesc] [varchar](100) NULL,
	[ExpCatID] [tinyint] NOT NULL,
	[flgActVotRegn] [bit] NOT NULL,
	[flgActGOTV] [bit] NOT NULL,
	[flgActVotID] [bit] NOT NULL,
	[flgActGenCamp] [bit] NOT NULL,
	[flgMemo] [bit] NOT NULL,
	[MemoTxt] [varchar](100) NULL,
 CONSTRAINT [PK_SchH6] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchI]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchI](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[RecIDNbr] [varchar](9) NULL,
	[AcctNm] [varchar](90) NULL,
	[BankAcctID] [varchar](16) NULL,
	[CovgFmDt] [date] NULL,
	[CovgToDt] [date] NULL,
	[TotRcpts] [money] NULL,
	[TransToFed] [money] NULL,
	[TransToStAndLoc] [money] NULL,
	[DirStLocCandSup] [money] NULL,
	[OthDisb] [money] NULL,
	[TotDisb] [money] NULL,
	[BegCOH] [money] NULL,
	[Rcpts] [money] NULL,
	[Subtotal] [money] NULL,
	[Disb] [money] NULL,
	[EndCOH] [money] NULL,
	[TotRcpts2] [money] NULL,
	[TransToFed2] [money] NULL,
	[TransToStAndLoc2] [money] NULL,
	[DirStLocCandSup2] [money] NULL,
	[OthDisb2] [money] NULL,
	[TotDisb2] [money] NULL,
	[BegCOH2] [money] NULL,
	[Rcpts2] [money] NULL,
	[Subtotal2] [money] NULL,
	[Disb2] [money] NULL,
	[EndCOH2] [money] NULL,
 CONSTRAINT [PK_SchI] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchL]    Script Date: 2/25/2015 1:01:53 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchL](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](20) NOT NULL,
	[RecordID] [varchar](9) NULL,
	[AcctNm] [varchar](90) NULL,
	[CovgFmDt] [date] NULL,
	[CovgToDt] [date] NULL,
	[IndRcptsItem_P] [money] NULL,
	[IndRcptsUnitem_P] [money] NULL,
	[IndRcptsTot_P] [money] NULL,
	[OthRcpts_P] [money] NULL,
	[TotRcpts_P] [money] NULL,
	[TransVotReg_P] [money] NULL,
	[TransVotID_P] [money] NULL,
	[TransGOTV_P] [money] NULL,
	[TransGenCamp_P] [money] NULL,
	[TransTot_P] [money] NULL,
	[OthDisb_P] [money] NULL,
	[TotDisb_P] [money] NULL,
	[BegCOH_P] [money] NULL,
	[Rcpts_P] [money] NULL,
	[Subtotal_P] [money] NULL,
	[Disb_P] [money] NULL,
	[EndCOH_P] [money] NULL,
	[IndRcptsItem_T] [money] NULL,
	[IndRcptsUnitem_T] [money] NULL,
	[IndRcptsTot_T] [money] NULL,
	[OthRcpts_T] [money] NULL,
	[TotRcpts_T] [money] NULL,
	[TransVotReg_T] [money] NULL,
	[TransVotID_T] [money] NULL,
	[TransGOTV_T] [money] NULL,
	[TransGenCamp_T] [money] NULL,
	[TransTot_T] [money] NULL,
	[OthDisb_T] [money] NULL,
	[TotDisb_T] [money] NULL,
	[BegCOH_T] [money] NULL,
	[Rcpts_T] [money] NULL,
	[Subtotal_T] [money] NULL,
	[Disb_T] [money] NULL,
	[EndCOH_T] [money] NULL,
 CONSTRAINT [PK_SchL] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SchText]    Script Date: 2/25/2015 1:01:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SchText](
	[USATID] [int] IDENTITY(1,1) NOT NULL,
	[ImageID] [int] NOT NULL,
	[PrtTpID] [tinyint] NOT NULL,
	[LnNbrID] [tinyint] NOT NULL,
	[CommID] [int] NOT NULL,
	[TransID] [varchar](36) NOT NULL,
	[BkRefTransID] [varchar](36) NOT NULL,
	[BkRefSchdID] [tinyint] NOT NULL,
	[FullText] [varchar](max) NULL,
 CONSTRAINT [PK_SchText] PRIMARY KEY CLUSTERED 
(
	[USATID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[stgCandCommLinks]    Script Date: 2/25/2015 1:01:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[stgCandCommLinks](
	[CAND_ID] [char](9) NOT NULL,
	[CAND_ELECTION_YR] [smallint] NULL,
	[FEC_ELECTION_YR] [smallint] NULL,
	[CMTE_ID] [char](9) NULL,
	[CMTE_TP] [varchar](1) NULL,
	[CMTE_DSGN] [varchar](1) NULL,
	[LINKAGE_ID] [int] NOT NULL,
	[CommID] [int] NULL,
	[CandID] [int] NULL,
 CONSTRAINT [PK_stgCandCommLinks] PRIMARY KEY NONCLUSTERED 
(
	[LINKAGE_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[stgCandidates]    Script Date: 2/25/2015 1:01:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[stgCandidates](
	[CAND_ID] [char](9) NOT NULL,
	[CAND_NAME] [varchar](200) NOT NULL,
	[PTY_AFF] [char](3) NOT NULL,
	[ELEC_YR] [smallint] NOT NULL,
	[OFFICE_ST] [char](2) NOT NULL,
	[OFFICE] [char](1) NOT NULL,
	[OFFICE_DIST] [varchar](2) NOT NULL,
	[INC_CHAL_STATUS] [char](1) NOT NULL,
	[CAND_STATUS] [char](1) NOT NULL,
	[PRIN_COMM_ID] [char](9) NOT NULL,
	[CAND_ADDR1] [varchar](34) NOT NULL,
	[CAND_ADDR2] [varchar](34) NULL,
	[CAND_CITY] [varchar](30) NOT NULL,
	[CAND_ST] [char](2) NOT NULL,
	[CAND_ZIP] [varchar](9) NOT NULL,
	[ElecCycle] [smallint] NOT NULL,
	[PartyID] [tinyint] NULL,
	[CandID] [int] NULL,
	[OfficeDist] [tinyint] NULL,
	[PeopleID] [int] NULL,
	[PrinCommID] [int] NULL
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[stgCommittees]    Script Date: 2/25/2015 1:01:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[stgCommittees](
	[CMTE_ID] [char](9) NOT NULL,
	[CMTE_NM] [varchar](200) NOT NULL,
	[TRES_NM] [varchar](90) NULL,
	[CMTE_ST1] [varchar](34) NULL,
	[CMTE_ST2] [varchar](34) NULL,
	[CMTE_CITY] [varchar](30) NULL,
	[CMTE_ST] [varchar](2) NULL,
	[CMTE_ZIP] [varchar](9) NULL,
	[CMTE_DSGN] [varchar](1) NULL,
	[CMTE_TP] [varchar](1) NULL,
	[CMTE_PTY_AFFILIATION] [varchar](3) NULL,
	[CMTE_FILING_FREQ] [varchar](1) NULL,
	[ORG_TP] [varchar](1) NULL,
	[CONNECTED_ORG_NM] [varchar](200) NULL,
	[CAND_ID] [varchar](9) NULL,
	[ElecCycle] [smallint] NOT NULL,
	[PartyID] [tinyint] NULL,
	[CommID] [int] NULL,
	[CandID] [int] NULL
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[stgIndiv]    Script Date: 2/25/2015 1:01:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[stgIndiv](
	[CMTE_ID] [char](9) NOT NULL,
	[AMNDT_IND] [varchar](1) NULL,
	[RPT_TP] [varchar](3) NULL,
	[TRANSACTION_PGI] [varchar](5) NULL,
	[IMAGE_NUM] [varchar](11) NULL,
	[TRANSACTION_TP] [varchar](3) NULL,
	[ENTITY_TP] [varchar](3) NULL,
	[_NAME] [varchar](200) NULL,
	[CITY] [varchar](30) NULL,
	[_STATE] [varchar](2) NULL,
	[ZIP_CODE] [varchar](9) NULL,
	[EMPLOYER] [varchar](38) NULL,
	[OCCUPATION] [varchar](38) NULL,
	[TRANSACTION_DT] [varchar](8) NULL,
	[TRANSACTION_AMT] [decimal](14, 2) NULL,
	[OTHER_ID] [varchar](9) NULL,
	[TRAN_ID] [varchar](32) NULL,
	[FILE_NUM] [int] NULL,
	[MEMO_CD] [varchar](1) NULL,
	[MEMO_TEXT] [varchar](100) NULL,
	[SUB_ID] [bigint] NULL,
	[ElecCycle] [smallint] NULL,
	[RptCommID] [int] NULL,
	[RptPrdID] [tinyint] NULL,
	[ElecID] [smallint] NULL,
	[TransTpID] [tinyint] NULL,
	[ContRcptEntTpID] [tinyint] NULL,
	[ContRcptCommID] [int] NULL,
	[ContRcptCandID] [int] NULL
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[stgOth]    Script Date: 2/25/2015 1:01:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[stgOth](
	[CMTE_ID] [char](9) NOT NULL,
	[AMNDT_IND] [varchar](1) NULL,
	[RPT_TP] [varchar](3) NULL,
	[TRANSACTION_PGI] [varchar](5) NULL,
	[IMAGE_NUM] [varchar](11) NULL,
	[TRANSACTION_TP] [varchar](3) NULL,
	[ENTITY_TP] [varchar](3) NULL,
	[_NAME] [varchar](200) NULL,
	[CITY] [varchar](30) NULL,
	[_STATE] [varchar](2) NULL,
	[ZIP_CODE] [varchar](9) NULL,
	[EMPLOYER] [varchar](38) NULL,
	[OCCUPATION] [varchar](38) NULL,
	[TRANSACTION_DT] [varchar](8) NULL,
	[TRANSACTION_AMT] [decimal](14, 2) NULL,
	[OTHER_ID] [varchar](9) NULL,
	[TRAN_ID] [varchar](32) NULL,
	[FILE_NUM] [int] NULL,
	[MEMO_CD] [varchar](1) NULL,
	[MEMO_TEXT] [varchar](100) NULL,
	[SUB_ID] [bigint] NULL,
	[ElecCycle] [smallint] NULL,
	[RptCommID] [int] NULL,
	[RptPrdID] [tinyint] NULL,
	[ElecID] [smallint] NULL,
	[TransTpID] [tinyint] NULL,
	[ContRcptEntTpID] [tinyint] NULL,
	[ContRcptCommID] [int] NULL,
	[ContRcptCandID] [int] NULL
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  View [dbo].[vwCommittees]    Script Date: 2/25/2015 1:01:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE VIEW [dbo].[vwCommittees]

AS

SELECT a.CommID,
	d.FECCommID,
	ISNULL(d.CleanCommName, a.FECName) AS CommNm
FROM CommMaster a
INNER JOIN
		(SELECT b.CommID,
			MAX(b.ElecCycle) AS ElecCycle
		FROM CommMaster b
		GROUP BY b.CommID) c
	ON a.CommID = c.CommID
		AND a.ElecCycle = c.ElecCycle
INNER JOIN lkpCommittees d
	ON a.CommID = d.USATID;




GO
/****** Object:  View [dbo].[vwCongressRoster]    Script Date: 2/25/2015 1:01:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[vwCongressRoster]

AS

-- Includes delegates from AS, DC, GU, MP, PR, VI
-- Some legislators do not have FEC Candidate IDs, so we can't use INNER JOINs based on CandID.

SELECT a.LName + ISNULL(' ' + a.Suffix, '') AS LastName,
	a.FName + ISNULL(' ' + a.MName, '') + ISNULL(' "' + a.Nickname + '"', '') AS FirstName,
	a.OfficialFullName AS OfficialName,
	CASE b.Chamber
		WHEN 'rep' THEN 'House'
		WHEN 'sen' THEN 'Senate'
		ELSE ''
	END AS Chamber,
	b.StAbbr,
	CASE
		WHEN b.Dist = 0 THEN ''
		ELSE CAST(b.Dist AS varchar(3))
	END AS Dist,
	b.Party,
	CASE
		WHEN k.FECCandID IS NULL THEN ''
		ELSE k.FECCandID
	END AS CandID,
	CASE
		WHEN a.FECIDs IS NULL THEN ''
		ELSE a.FECIDS
	END AS AllCandIDs,
	CASE
		WHEN p.FECCommID IS NULL THEN ''
		ELSE p.FECCommID
	END AS PrinCommID,
	CASE
		WHEN p.PrinComm IS NULL THEN ''
		ELSE p.PrinComm
	END AS PrinComm,
	CONVERT(varchar(10), a.Birthday, 101) AS DOB,
	CONVERT(varchar(10), b.StDate, 101) AS TermStart,
	CONVERT(varchar(10), b.EdDate, 101) AS TermEnd,
	a.Gender,
	ISNULL(a.Religion, '') AS Religion,
	a.PeopleID,
	k.CandID AS USATCandID,
	p.CommID AS USATCommID
FROM Congress a
INNER JOIN CongTerms b
	ON a.USATID = b.CongressID
		AND b.EdDate > GETDATE()
LEFT OUTER JOIN (SELECT h.FECCandID, h.PeopleID, h.USATID AS CandID, j.Office, j.PrinCommID
		FROM lkpCandidates h
		INNER JOIN
				(SELECT g.PeopleID, MAX(g.ElecCycle) AS ElecCycle
				FROM
					(SELECT e.PeopleID, e.USATID AS CandID, MAX(f.ElecCycle) AS ElecCycle
					FROM lkpCandidates e
					INNER JOIN CandMaster f
					ON e.USATID = f.CandID
					GROUP BY e.PeopleID, e.USATID) g
				GROUP BY g.PeopleID) i
			ON h.PeopleID = i.PeopleID
		INNER JOIN CandMaster j
			ON h.USATID = j.CandID
				AND i.ElecCycle = j.ElecCycle
				AND ((j.Office = 'H' AND (j.ElecYr = j.ElecCycle
					OR j.ElecYr + 1 = j.ElecCycle))
					OR j.Office = 'S')) k
	ON a.PeopleID = k.PeopleID
		AND ((b.Chamber = 'rep' AND k.Office = 'H')
			OR (b.Chamber = 'sen' AND k.Office = 'S'))
LEFT OUTER JOIN
		(SELECT l.CommID,
			o.FECCommID,
			ISNULL(o.CleanCommName, l.FECName) AS PrinComm
		FROM CommMaster l
		INNER JOIN
				(SELECT m.CommID,
					MAX(m.ElecCycle) AS ElecCycle
				FROM CommMaster m
				GROUP BY m.CommID) n
			ON l.CommID = n.CommID
				AND l.ElecCycle = n.ElecCycle
		INNER JOIN lkpCommittees o
			ON l.CommID = o.USATID) p
	ON k.PrinCommID = p.CommID
WHERE a.PeopleID = 0
	OR (k.PeopleID IS NOT NULL)
	OR (k.PeopleID IS NULL AND GETDATE() BETWEEN b.StDate AND b.EdDate);


GO
/****** Object:  View [dbo].[vwCongressRoster_WithLPACs]    Script Date: 2/25/2015 1:01:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER TABLE [dbo].[CandCommLinks] ADD  CONSTRAINT [DF_CandCommLinks_Added]  DEFAULT (getdate()) FOR [FileDate]
GO
ALTER TABLE [dbo].[CandMaster] ADD  CONSTRAINT [DF_Candidates_Added]  DEFAULT (getdate()) FOR [FileDate]
GO
ALTER TABLE [dbo].[CommInfo] ADD  CONSTRAINT [DF_CommInfo_LibCons]  DEFAULT (' ') FOR [LibCons]
GO
ALTER TABLE [dbo].[CommMaster] ADD  CONSTRAINT [DF_Committees_Added]  DEFAULT (getdate()) FOR [FileDate]
GO
ALTER TABLE [dbo].[CongLdrRoles] ADD  CONSTRAINT [DF_CongLdrRoles_DateAdded]  DEFAULT (getdate()) FOR [DateAdded]
GO
ALTER TABLE [dbo].[CongOthNames] ADD  CONSTRAINT [DF_CongOtherNames_DateAdded]  DEFAULT (getdate()) FOR [DateAdded]
GO
ALTER TABLE [dbo].[Congress] ADD  CONSTRAINT [DF_Congress_DateAdded]  DEFAULT (getdate()) FOR [DateAdded]
GO
ALTER TABLE [dbo].[CongTerms] ADD  CONSTRAINT [DF_CongTerms_DateAdded]  DEFAULT (getdate()) FOR [DateAdded]
GO
ALTER TABLE [dbo].[Form1] ADD  CONSTRAINT [DF_Form1_Active]  DEFAULT ((0)) FOR [Active]
GO
ALTER TABLE [dbo].[Form1] ADD  CONSTRAINT [DF_Form1_flgChgCommNm]  DEFAULT ((0)) FOR [flgChgCommNm]
GO
ALTER TABLE [dbo].[Form1] ADD  CONSTRAINT [DF_Form1_flgAddrChg]  DEFAULT ((0)) FOR [flgAddrChg]
GO
ALTER TABLE [dbo].[Form1] ADD  CONSTRAINT [DF_Form1_flgChgCommEmail]  DEFAULT ((0)) FOR [flgChgCommEmail]
GO
ALTER TABLE [dbo].[Form1] ADD  CONSTRAINT [DF_Form1_flgChgCommUrl]  DEFAULT ((0)) FOR [flgChgCommUrl]
GO
ALTER TABLE [dbo].[Form1] ADD  CONSTRAINT [DF_Form1_flgLobRegPAC_ConnOrg_5e]  DEFAULT ((0)) FOR [flgLobRegPAC_ConnOrg_5e]
GO
ALTER TABLE [dbo].[Form1] ADD  CONSTRAINT [DF_Form1_flgLobRegPAC_MultCands_5f]  DEFAULT ((0)) FOR [flgLobRegPAC_MultCands_5f]
GO
ALTER TABLE [dbo].[Form1] ADD  CONSTRAINT [DF_Form1_flgLdspPAC_5f]  DEFAULT ((0)) FOR [flgLdspPAC_5f]
GO
ALTER TABLE [dbo].[Form1] ADD  CONSTRAINT [DF_Form1_Vetted]  DEFAULT ((0)) FOR [Vetted]
GO
ALTER TABLE [dbo].[People] ADD  CONSTRAINT [DF_People_Added]  DEFAULT (getdate()) FOR [Added]
GO
ALTER TABLE [dbo].[RptHdrs_F3] ADD  CONSTRAINT [DF_RptHdrs_F3_Active]  DEFAULT ((0)) FOR [Active]
GO
ALTER TABLE [dbo].[RptHdrs_F3] ADD  CONSTRAINT [DF_RptHdrs_F3_flgAddrChg]  DEFAULT ((0)) FOR [flgAddrChg]
GO
ALTER TABLE [dbo].[RptHdrs_F3] ADD  CONSTRAINT [DF_RptHdrs_F3_Vetted]  DEFAULT ((0)) FOR [Vetted]
GO
ALTER TABLE [dbo].[RptHdrs_F3L] ADD  CONSTRAINT [DF_RptHdrs_F3L_Active]  DEFAULT ((0)) FOR [Active]
GO
ALTER TABLE [dbo].[RptHdrs_F3L] ADD  CONSTRAINT [DF_RptHdrs_F3L_flgAddrChg]  DEFAULT ((0)) FOR [flgAddrChg]
GO
ALTER TABLE [dbo].[RptHdrs_F3L] ADD  CONSTRAINT [DF_RptHdrs_F3L_flgInclSemiAnnPrd]  DEFAULT ((0)) FOR [flgInclSemiAnnPrd]
GO
ALTER TABLE [dbo].[RptHdrs_F3L] ADD  CONSTRAINT [DF_RptHdrs_F3L_flgInclSemiAnnJanJun]  DEFAULT ((0)) FOR [flgInclSemiAnnJanJun]
GO
ALTER TABLE [dbo].[RptHdrs_F3L] ADD  CONSTRAINT [DF_RptHdrs_F3L_flgInclSemiAnnJulDec]  DEFAULT ((0)) FOR [flgInclSemiAnnJulDec]
GO
ALTER TABLE [dbo].[RptHdrs_F3L] ADD  CONSTRAINT [DF_RptHdrs_F3L_Vetted]  DEFAULT ((0)) FOR [Vetted]
GO
ALTER TABLE [dbo].[RptHdrs_F3P] ADD  CONSTRAINT [DF_RptHdrs_F3P_Active]  DEFAULT ((0)) FOR [Active]
GO
ALTER TABLE [dbo].[RptHdrs_F3P] ADD  CONSTRAINT [DF_RptHdrs_F3P_flgAddrChg]  DEFAULT ((0)) FOR [flgAddrChg]
GO
ALTER TABLE [dbo].[RptHdrs_F3P] ADD  CONSTRAINT [DF_RptHdrs_F3P_flgPrimElec]  DEFAULT ((0)) FOR [flgPrimElec]
GO
ALTER TABLE [dbo].[RptHdrs_F3P] ADD  CONSTRAINT [DF_RptHdrs_F3P_flgGenElec]  DEFAULT ((0)) FOR [flgGenElec]
GO
ALTER TABLE [dbo].[RptHdrs_F3P] ADD  CONSTRAINT [DF_RptHdrs_F3P_Vetted]  DEFAULT ((0)) FOR [Vetted]
GO
ALTER TABLE [dbo].[RptHdrs_F3X] ADD  CONSTRAINT [DF_RptHdrs_F3X_Active]  DEFAULT ((0)) FOR [Active]
GO
ALTER TABLE [dbo].[RptHdrs_F3X] ADD  CONSTRAINT [DF_RptHdrs_F3X_flgAddrChg]  DEFAULT ((0)) FOR [flgAddrChg]
GO
ALTER TABLE [dbo].[RptHdrs_F3X] ADD  CONSTRAINT [DF_RptHdrs_F3X_flgQualComm]  DEFAULT ((0)) FOR [flgQualComm]
GO
ALTER TABLE [dbo].[RptHdrs_F3X] ADD  CONSTRAINT [DF_RptHdrs_F3X_Vetted]  DEFAULT ((0)) FOR [Vetted]
GO
ALTER TABLE [dbo].[SchA] ADD  CONSTRAINT [DF_SchA_TransID]  DEFAULT ('') FOR [TransID]
GO
ALTER TABLE [dbo].[SchB] ADD  CONSTRAINT [DF_SchB_MemoCd]  DEFAULT ((0)) FOR [flgMemo]
GO
ALTER TABLE [dbo].[CandCommLinks]  WITH CHECK ADD  CONSTRAINT [FK_CandCommLinks_lkpCandidates] FOREIGN KEY([CandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[CandCommLinks] CHECK CONSTRAINT [FK_CandCommLinks_lkpCandidates]
GO
ALTER TABLE [dbo].[CandCommLinks]  WITH CHECK ADD  CONSTRAINT [FK_CandCommLinks_lkpCommDesignation] FOREIGN KEY([CommDesignation])
REFERENCES [dbo].[lkpDesignation] ([DesignationCd])
GO
ALTER TABLE [dbo].[CandCommLinks] CHECK CONSTRAINT [FK_CandCommLinks_lkpCommDesignation]
GO
ALTER TABLE [dbo].[CandCommLinks]  WITH CHECK ADD  CONSTRAINT [FK_CandCommLinks_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[CandCommLinks] CHECK CONSTRAINT [FK_CandCommLinks_lkpCommittees]
GO
ALTER TABLE [dbo].[CandCommLinks]  WITH CHECK ADD  CONSTRAINT [FK_CandCommLinks_lkpCommType] FOREIGN KEY([CommType])
REFERENCES [dbo].[lkpCommType] ([CommTypeCd])
GO
ALTER TABLE [dbo].[CandCommLinks] CHECK CONSTRAINT [FK_CandCommLinks_lkpCommType]
GO
ALTER TABLE [dbo].[CandMaster]  WITH CHECK ADD  CONSTRAINT [FK_CandMaster_lkpCandidates] FOREIGN KEY([CandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[CandMaster] CHECK CONSTRAINT [FK_CandMaster_lkpCandidates]
GO
ALTER TABLE [dbo].[CandMaster]  WITH CHECK ADD  CONSTRAINT [FK_CandMaster_lkpCandStatus] FOREIGN KEY([CandStatus])
REFERENCES [dbo].[lkpCandStatus] ([CandStatusCd])
GO
ALTER TABLE [dbo].[CandMaster] CHECK CONSTRAINT [FK_CandMaster_lkpCandStatus]
GO
ALTER TABLE [dbo].[CandMaster]  WITH CHECK ADD  CONSTRAINT [FK_CandMaster_lkpCommittees] FOREIGN KEY([PrinCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[CandMaster] CHECK CONSTRAINT [FK_CandMaster_lkpCommittees]
GO
ALTER TABLE [dbo].[CandMaster]  WITH CHECK ADD  CONSTRAINT [FK_CandMaster_lkpIncChalStatus] FOREIGN KEY([IncChalStatus])
REFERENCES [dbo].[lkpIncChalStatus] ([IncChalStatusCd])
GO
ALTER TABLE [dbo].[CandMaster] CHECK CONSTRAINT [FK_CandMaster_lkpIncChalStatus]
GO
ALTER TABLE [dbo].[CandMaster]  WITH CHECK ADD  CONSTRAINT [FK_CandMaster_lkpParties] FOREIGN KEY([PartyID])
REFERENCES [dbo].[lkpParties] ([USATID])
GO
ALTER TABLE [dbo].[CandMaster] CHECK CONSTRAINT [FK_CandMaster_lkpParties]
GO
ALTER TABLE [dbo].[CommMaster]  WITH CHECK ADD  CONSTRAINT [FK_CommMaster_lkpCandidates] FOREIGN KEY([CandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[CommMaster] CHECK CONSTRAINT [FK_CommMaster_lkpCandidates]
GO
ALTER TABLE [dbo].[CommMaster]  WITH CHECK ADD  CONSTRAINT [FK_CommMaster_lkpCommDesignation] FOREIGN KEY([Designation])
REFERENCES [dbo].[lkpDesignation] ([DesignationCd])
GO
ALTER TABLE [dbo].[CommMaster] CHECK CONSTRAINT [FK_CommMaster_lkpCommDesignation]
GO
ALTER TABLE [dbo].[CommMaster]  WITH CHECK ADD  CONSTRAINT [FK_CommMaster_lkpCommFilingFreq] FOREIGN KEY([FilingFreq])
REFERENCES [dbo].[lkpFilingFreq] ([FilingFreqCd])
GO
ALTER TABLE [dbo].[CommMaster] CHECK CONSTRAINT [FK_CommMaster_lkpCommFilingFreq]
GO
ALTER TABLE [dbo].[CommMaster]  WITH CHECK ADD  CONSTRAINT [FK_CommMaster_lkpCommIntGrpCat] FOREIGN KEY([IntGrpCat])
REFERENCES [dbo].[lkpIntGrpCat] ([IntGrpCatCd])
GO
ALTER TABLE [dbo].[CommMaster] CHECK CONSTRAINT [FK_CommMaster_lkpCommIntGrpCat]
GO
ALTER TABLE [dbo].[CommMaster]  WITH CHECK ADD  CONSTRAINT [FK_CommMaster_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[CommMaster] CHECK CONSTRAINT [FK_CommMaster_lkpCommittees]
GO
ALTER TABLE [dbo].[CommMaster]  WITH CHECK ADD  CONSTRAINT [FK_CommMaster_lkpCommType] FOREIGN KEY([CommType])
REFERENCES [dbo].[lkpCommType] ([CommTypeCd])
GO
ALTER TABLE [dbo].[CommMaster] CHECK CONSTRAINT [FK_CommMaster_lkpCommType]
GO
ALTER TABLE [dbo].[CommMaster]  WITH CHECK ADD  CONSTRAINT [FK_CommMaster_lkpParties] FOREIGN KEY([PartyID])
REFERENCES [dbo].[lkpParties] ([USATID])
GO
ALTER TABLE [dbo].[CommMaster] CHECK CONSTRAINT [FK_CommMaster_lkpParties]
GO
ALTER TABLE [dbo].[CongLdrRoles]  WITH CHECK ADD  CONSTRAINT [FK_CongLdrRoles_Congress] FOREIGN KEY([CongressID])
REFERENCES [dbo].[Congress] ([USATID])
GO
ALTER TABLE [dbo].[CongLdrRoles] CHECK CONSTRAINT [FK_CongLdrRoles_Congress]
GO
ALTER TABLE [dbo].[CongOthNames]  WITH CHECK ADD  CONSTRAINT [FK_CongOthNames_Congress] FOREIGN KEY([CongressID])
REFERENCES [dbo].[Congress] ([USATID])
GO
ALTER TABLE [dbo].[CongOthNames] CHECK CONSTRAINT [FK_CongOthNames_Congress]
GO
ALTER TABLE [dbo].[Congress]  WITH CHECK ADD  CONSTRAINT [FK_Congress_People] FOREIGN KEY([PeopleID])
REFERENCES [dbo].[People] ([USATID])
GO
ALTER TABLE [dbo].[Congress] CHECK CONSTRAINT [FK_Congress_People]
GO
ALTER TABLE [dbo].[CongTerms]  WITH CHECK ADD  CONSTRAINT [FK_CongTerms_Congress] FOREIGN KEY([CongressID])
REFERENCES [dbo].[Congress] ([USATID])
GO
ALTER TABLE [dbo].[CongTerms] CHECK CONSTRAINT [FK_CongTerms_Congress]
GO
ALTER TABLE [dbo].[Form1]  WITH CHECK ADD  CONSTRAINT [FK_Form1_lkpAffRel] FOREIGN KEY([AffRelID])
REFERENCES [dbo].[lkpAffRel] ([USATID])
GO
ALTER TABLE [dbo].[Form1] CHECK CONSTRAINT [FK_Form1_lkpAffRel]
GO
ALTER TABLE [dbo].[Form1]  WITH CHECK ADD  CONSTRAINT [FK_Form1_lkpCandidates_AffCandID] FOREIGN KEY([AffCandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[Form1] CHECK CONSTRAINT [FK_Form1_lkpCandidates_AffCandID]
GO
ALTER TABLE [dbo].[Form1]  WITH CHECK ADD  CONSTRAINT [FK_Form1_lkpCandidates_CandID] FOREIGN KEY([CandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[Form1] CHECK CONSTRAINT [FK_Form1_lkpCandidates_CandID]
GO
ALTER TABLE [dbo].[Form1]  WITH CHECK ADD  CONSTRAINT [FK_Form1_lkpCommittees_AffCommID] FOREIGN KEY([AffCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[Form1] CHECK CONSTRAINT [FK_Form1_lkpCommittees_AffCommID]
GO
ALTER TABLE [dbo].[Form1]  WITH CHECK ADD  CONSTRAINT [FK_Form1_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[Form1] CHECK CONSTRAINT [FK_Form1_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[Form1]  WITH CHECK ADD  CONSTRAINT [FK_Form1_lkpF1CommTp] FOREIGN KEY([F1CommTpCd])
REFERENCES [dbo].[lkpF1CommTp] ([F1CommTpCd])
GO
ALTER TABLE [dbo].[Form1] CHECK CONSTRAINT [FK_Form1_lkpF1CommTp]
GO
ALTER TABLE [dbo].[Form1]  WITH CHECK ADD  CONSTRAINT [FK_Form1_lkpFormTp] FOREIGN KEY([FormTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[Form1] CHECK CONSTRAINT [FK_Form1_lkpFormTp]
GO
ALTER TABLE [dbo].[Form1]  WITH CHECK ADD  CONSTRAINT [FK_Form1_lkpPACTp] FOREIGN KEY([PACTp])
REFERENCES [dbo].[lkpPACTp] ([PACTpCd])
GO
ALTER TABLE [dbo].[Form1] CHECK CONSTRAINT [FK_Form1_lkpPACTp]
GO
ALTER TABLE [dbo].[Form1]  WITH CHECK ADD  CONSTRAINT [FK_Form1_lkpParties] FOREIGN KEY([PartyID])
REFERENCES [dbo].[lkpParties] ([USATID])
GO
ALTER TABLE [dbo].[Form1] CHECK CONSTRAINT [FK_Form1_lkpParties]
GO
ALTER TABLE [dbo].[Form1]  WITH CHECK ADD  CONSTRAINT [FK_Form1_lkpPartyTp] FOREIGN KEY([PartyTpID])
REFERENCES [dbo].[lkpPartyTp] ([USATID])
GO
ALTER TABLE [dbo].[Form1] CHECK CONSTRAINT [FK_Form1_lkpPartyTp]
GO
ALTER TABLE [dbo].[Form1S]  WITH CHECK ADD  CONSTRAINT [FK_Form1S_Form1] FOREIGN KEY([ImageID])
REFERENCES [dbo].[Form1] ([ImageID])
GO
ALTER TABLE [dbo].[Form1S] CHECK CONSTRAINT [FK_Form1S_Form1]
GO
ALTER TABLE [dbo].[Form1S]  WITH CHECK ADD  CONSTRAINT [FK_Form1S_lkpAffRel] FOREIGN KEY([AffRelID])
REFERENCES [dbo].[lkpAffRel] ([USATID])
GO
ALTER TABLE [dbo].[Form1S] CHECK CONSTRAINT [FK_Form1S_lkpAffRel]
GO
ALTER TABLE [dbo].[Form1S]  WITH CHECK ADD  CONSTRAINT [FK_Form1S_lkpCandidates_AffCandID] FOREIGN KEY([AffCandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[Form1S] CHECK CONSTRAINT [FK_Form1S_lkpCandidates_AffCandID]
GO
ALTER TABLE [dbo].[Form1S]  WITH CHECK ADD  CONSTRAINT [FK_Form1S_lkpCommittees_AffCommID] FOREIGN KEY([AffCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[Form1S] CHECK CONSTRAINT [FK_Form1S_lkpCommittees_AffCommID]
GO
ALTER TABLE [dbo].[Form1S]  WITH CHECK ADD  CONSTRAINT [FK_Form1S_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[Form1S] CHECK CONSTRAINT [FK_Form1S_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[Form1S]  WITH CHECK ADD  CONSTRAINT [FK_Form1S_lkpCommittees_JtCommID] FOREIGN KEY([JtCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[Form1S] CHECK CONSTRAINT [FK_Form1S_lkpCommittees_JtCommID]
GO
ALTER TABLE [dbo].[Form1S]  WITH CHECK ADD  CONSTRAINT [FK_Form1S_lkpLnNbr] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[Form1S] CHECK CONSTRAINT [FK_Form1S_lkpLnNbr]
GO
ALTER TABLE [dbo].[Indiv]  WITH CHECK ADD  CONSTRAINT [FK_Indiv_lkpCandidates_ContRcptCandID] FOREIGN KEY([ContRcptCandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[Indiv] CHECK CONSTRAINT [FK_Indiv_lkpCandidates_ContRcptCandID]
GO
ALTER TABLE [dbo].[Indiv]  WITH CHECK ADD  CONSTRAINT [FK_Indiv_lkpCommittees_ContRcptCommID] FOREIGN KEY([ContRcptCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[Indiv] CHECK CONSTRAINT [FK_Indiv_lkpCommittees_ContRcptCommID]
GO
ALTER TABLE [dbo].[Indiv]  WITH CHECK ADD  CONSTRAINT [FK_Indiv_lkpCommittees_RptCommID] FOREIGN KEY([RptCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[Indiv] CHECK CONSTRAINT [FK_Indiv_lkpCommittees_RptCommID]
GO
ALTER TABLE [dbo].[Indiv]  WITH CHECK ADD  CONSTRAINT [FK_Indiv_lkpElec] FOREIGN KEY([ElecID])
REFERENCES [dbo].[lkpElec] ([USATID])
GO
ALTER TABLE [dbo].[Indiv] CHECK CONSTRAINT [FK_Indiv_lkpElec]
GO
ALTER TABLE [dbo].[Indiv]  WITH CHECK ADD  CONSTRAINT [FK_Indiv_lkpEntTp_ContRcptEntTpID] FOREIGN KEY([ContRcptEntTpID])
REFERENCES [dbo].[lkpEntTp] ([USATID])
GO
ALTER TABLE [dbo].[Indiv] CHECK CONSTRAINT [FK_Indiv_lkpEntTp_ContRcptEntTpID]
GO
ALTER TABLE [dbo].[Indiv]  WITH CHECK ADD  CONSTRAINT [FK_Indiv_lkpRptPrd] FOREIGN KEY([RptPrdID])
REFERENCES [dbo].[lkpRptPrd] ([USATID])
GO
ALTER TABLE [dbo].[Indiv] CHECK CONSTRAINT [FK_Indiv_lkpRptPrd]
GO
ALTER TABLE [dbo].[Indiv]  WITH CHECK ADD  CONSTRAINT [FK_Indiv_lkpTransTp] FOREIGN KEY([TransTpID])
REFERENCES [dbo].[lkpTransTp] ([USATID])
GO
ALTER TABLE [dbo].[Indiv] CHECK CONSTRAINT [FK_Indiv_lkpTransTp]
GO
ALTER TABLE [dbo].[lkpCandidates]  WITH CHECK ADD  CONSTRAINT [FK_lkpCandidates_People] FOREIGN KEY([PeopleID])
REFERENCES [dbo].[People] ([USATID])
GO
ALTER TABLE [dbo].[lkpCandidates] CHECK CONSTRAINT [FK_lkpCandidates_People]
GO
ALTER TABLE [dbo].[Oth]  WITH CHECK ADD  CONSTRAINT [FK_Oth_lkpCandidates_ContRcptCandID] FOREIGN KEY([ContRcptCandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[Oth] CHECK CONSTRAINT [FK_Oth_lkpCandidates_ContRcptCandID]
GO
ALTER TABLE [dbo].[Oth]  WITH CHECK ADD  CONSTRAINT [FK_Oth_lkpCommittees_ContRcptCommID] FOREIGN KEY([ContRcptCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[Oth] CHECK CONSTRAINT [FK_Oth_lkpCommittees_ContRcptCommID]
GO
ALTER TABLE [dbo].[Oth]  WITH CHECK ADD  CONSTRAINT [FK_Oth_lkpCommittees_RptCommID] FOREIGN KEY([RptCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[Oth] CHECK CONSTRAINT [FK_Oth_lkpCommittees_RptCommID]
GO
ALTER TABLE [dbo].[Oth]  WITH CHECK ADD  CONSTRAINT [FK_Oth_lkpElec] FOREIGN KEY([ElecID])
REFERENCES [dbo].[lkpElec] ([USATID])
GO
ALTER TABLE [dbo].[Oth] CHECK CONSTRAINT [FK_Oth_lkpElec]
GO
ALTER TABLE [dbo].[Oth]  WITH CHECK ADD  CONSTRAINT [FK_Oth_lkpEntTp_ContRcptEntTpID] FOREIGN KEY([ContRcptEntTpID])
REFERENCES [dbo].[lkpEntTp] ([USATID])
GO
ALTER TABLE [dbo].[Oth] CHECK CONSTRAINT [FK_Oth_lkpEntTp_ContRcptEntTpID]
GO
ALTER TABLE [dbo].[Oth]  WITH CHECK ADD  CONSTRAINT [FK_Oth_lkpRptPrd] FOREIGN KEY([RptPrdID])
REFERENCES [dbo].[lkpRptPrd] ([USATID])
GO
ALTER TABLE [dbo].[Oth] CHECK CONSTRAINT [FK_Oth_lkpRptPrd]
GO
ALTER TABLE [dbo].[Oth]  WITH CHECK ADD  CONSTRAINT [FK_Oth_lkpTransTp] FOREIGN KEY([TransTpID])
REFERENCES [dbo].[lkpTransTp] ([USATID])
GO
ALTER TABLE [dbo].[Oth] CHECK CONSTRAINT [FK_Oth_lkpTransTp]
GO
ALTER TABLE [dbo].[RptHdrs_F3]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3] CHECK CONSTRAINT [FK_RptHdrsF3_lkpCommittees]
GO
ALTER TABLE [dbo].[RptHdrs_F3]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3_lkpElec] FOREIGN KEY([ElecID])
REFERENCES [dbo].[lkpElec] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3] CHECK CONSTRAINT [FK_RptHdrsF3_lkpElec]
GO
ALTER TABLE [dbo].[RptHdrs_F3]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3_lkpFormTp] FOREIGN KEY([FormTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3] CHECK CONSTRAINT [FK_RptHdrsF3_lkpFormTp]
GO
ALTER TABLE [dbo].[RptHdrs_F3]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3_lkpRptPrd] FOREIGN KEY([RptPrdID])
REFERENCES [dbo].[lkpRptPrd] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3] CHECK CONSTRAINT [FK_RptHdrsF3_lkpRptPrd]
GO
ALTER TABLE [dbo].[RptHdrs_F3L]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3L_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3L] CHECK CONSTRAINT [FK_RptHdrsF3L_lkpCommittees]
GO
ALTER TABLE [dbo].[RptHdrs_F3L]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3L_lkpFormTp] FOREIGN KEY([FormTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3L] CHECK CONSTRAINT [FK_RptHdrsF3L_lkpFormTp]
GO
ALTER TABLE [dbo].[RptHdrs_F3L]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3L_lkpRptPrd] FOREIGN KEY([RptPrdID])
REFERENCES [dbo].[lkpRptPrd] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3L] CHECK CONSTRAINT [FK_RptHdrsF3L_lkpRptPrd]
GO
ALTER TABLE [dbo].[RptHdrs_F3P]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3P_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3P] CHECK CONSTRAINT [FK_RptHdrsF3P_lkpCommittees]
GO
ALTER TABLE [dbo].[RptHdrs_F3P]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3P_lkpElec] FOREIGN KEY([ElecID])
REFERENCES [dbo].[lkpElec] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3P] CHECK CONSTRAINT [FK_RptHdrsF3P_lkpElec]
GO
ALTER TABLE [dbo].[RptHdrs_F3P]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3P_lkpFormTp] FOREIGN KEY([FormTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3P] CHECK CONSTRAINT [FK_RptHdrsF3P_lkpFormTp]
GO
ALTER TABLE [dbo].[RptHdrs_F3P]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3P_lkpRptPrd] FOREIGN KEY([RptPrdID])
REFERENCES [dbo].[lkpRptPrd] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3P] CHECK CONSTRAINT [FK_RptHdrsF3P_lkpRptPrd]
GO
ALTER TABLE [dbo].[RptHdrs_F3X]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3X_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3X] CHECK CONSTRAINT [FK_RptHdrsF3X_lkpCommittees]
GO
ALTER TABLE [dbo].[RptHdrs_F3X]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3X_lkpElec] FOREIGN KEY([ElecID])
REFERENCES [dbo].[lkpElec] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3X] CHECK CONSTRAINT [FK_RptHdrsF3X_lkpElec]
GO
ALTER TABLE [dbo].[RptHdrs_F3X]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3X_lkpFormTp] FOREIGN KEY([FormTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3X] CHECK CONSTRAINT [FK_RptHdrsF3X_lkpFormTp]
GO
ALTER TABLE [dbo].[RptHdrs_F3X]  WITH CHECK ADD  CONSTRAINT [FK_RptHdrsF3X_lkpRptPrd] FOREIGN KEY([RptPrdID])
REFERENCES [dbo].[lkpRptPrd] ([USATID])
GO
ALTER TABLE [dbo].[RptHdrs_F3X] CHECK CONSTRAINT [FK_RptHdrsF3X_lkpRptPrd]
GO
ALTER TABLE [dbo].[SchA]  WITH CHECK ADD  CONSTRAINT [FK_SchA_lkpCandidates] FOREIGN KEY([DonorCandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[SchA] CHECK CONSTRAINT [FK_SchA_lkpCandidates]
GO
ALTER TABLE [dbo].[SchA]  WITH CHECK ADD  CONSTRAINT [FK_SchA_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchA] CHECK CONSTRAINT [FK_SchA_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[SchA]  WITH CHECK ADD  CONSTRAINT [FK_SchA_lkpCommittees_DonorCommID] FOREIGN KEY([DonorCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchA] CHECK CONSTRAINT [FK_SchA_lkpCommittees_DonorCommID]
GO
ALTER TABLE [dbo].[SchA]  WITH CHECK ADD  CONSTRAINT [FK_SchA_lkpElec] FOREIGN KEY([ElecID])
REFERENCES [dbo].[lkpElec] ([USATID])
GO
ALTER TABLE [dbo].[SchA] CHECK CONSTRAINT [FK_SchA_lkpElec]
GO
ALTER TABLE [dbo].[SchA]  WITH CHECK ADD  CONSTRAINT [FK_SchA_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchA] CHECK CONSTRAINT [FK_SchA_lkpFormTp]
GO
ALTER TABLE [dbo].[SchA]  WITH CHECK ADD  CONSTRAINT [FK_SchA_lkpLnNbr_BkRefSchdID] FOREIGN KEY([BkRefSchdID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchA] CHECK CONSTRAINT [FK_SchA_lkpLnNbr_BkRefSchdID]
GO
ALTER TABLE [dbo].[SchA]  WITH CHECK ADD  CONSTRAINT [FK_SchA_lkpLnNbr_LnNbrID] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchA] CHECK CONSTRAINT [FK_SchA_lkpLnNbr_LnNbrID]
GO
ALTER TABLE [dbo].[SchA]  WITH CHECK ADD  CONSTRAINT [FK_SchA_lkpTransPurp] FOREIGN KEY([TransPurpID])
REFERENCES [dbo].[lkpTransPurp] ([USATID])
GO
ALTER TABLE [dbo].[SchA] CHECK CONSTRAINT [FK_SchA_lkpTransPurp]
GO
ALTER TABLE [dbo].[SchB]  WITH CHECK ADD  CONSTRAINT [FK_SchB_lkpCandidates] FOREIGN KEY([BenCandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[SchB] CHECK CONSTRAINT [FK_SchB_lkpCandidates]
GO
ALTER TABLE [dbo].[SchB]  WITH CHECK ADD  CONSTRAINT [FK_SchB_lkpCommittees_BenCommID] FOREIGN KEY([BenCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchB] CHECK CONSTRAINT [FK_SchB_lkpCommittees_BenCommID]
GO
ALTER TABLE [dbo].[SchB]  WITH CHECK ADD  CONSTRAINT [FK_SchB_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchB] CHECK CONSTRAINT [FK_SchB_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[SchB]  WITH CHECK ADD  CONSTRAINT [FK_SchB_lkpElec] FOREIGN KEY([ElecID])
REFERENCES [dbo].[lkpElec] ([USATID])
GO
ALTER TABLE [dbo].[SchB] CHECK CONSTRAINT [FK_SchB_lkpElec]
GO
ALTER TABLE [dbo].[SchB]  WITH CHECK ADD  CONSTRAINT [FK_SchB_lkpExpCat] FOREIGN KEY([ExpCatID])
REFERENCES [dbo].[lkpExpCat] ([USATID])
GO
ALTER TABLE [dbo].[SchB] CHECK CONSTRAINT [FK_SchB_lkpExpCat]
GO
ALTER TABLE [dbo].[SchB]  WITH CHECK ADD  CONSTRAINT [FK_SchB_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchB] CHECK CONSTRAINT [FK_SchB_lkpFormTp]
GO
ALTER TABLE [dbo].[SchB]  WITH CHECK ADD  CONSTRAINT [FK_SchB_lkpLnNbr_BkRefSchdID] FOREIGN KEY([BkRefSchdID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchB] CHECK CONSTRAINT [FK_SchB_lkpLnNbr_BkRefSchdID]
GO
ALTER TABLE [dbo].[SchB]  WITH CHECK ADD  CONSTRAINT [FK_SchB_lkpLnNbr_LnNbrID] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchB] CHECK CONSTRAINT [FK_SchB_lkpLnNbr_LnNbrID]
GO
ALTER TABLE [dbo].[SchB]  WITH CHECK ADD  CONSTRAINT [FK_SchB_lkpTransPurp] FOREIGN KEY([TransPurpID])
REFERENCES [dbo].[lkpTransPurp] ([USATID])
GO
ALTER TABLE [dbo].[SchB] CHECK CONSTRAINT [FK_SchB_lkpTransPurp]
GO
ALTER TABLE [dbo].[SchC]  WITH CHECK ADD  CONSTRAINT [FK_SchC_lkpCandidates_LenderCandID] FOREIGN KEY([LenderCandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[SchC] CHECK CONSTRAINT [FK_SchC_lkpCandidates_LenderCandID]
GO
ALTER TABLE [dbo].[SchC]  WITH CHECK ADD  CONSTRAINT [FK_SchC_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchC] CHECK CONSTRAINT [FK_SchC_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[SchC]  WITH CHECK ADD  CONSTRAINT [FK_SchC_lkpCommittees_LenderCommID] FOREIGN KEY([LenderCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchC] CHECK CONSTRAINT [FK_SchC_lkpCommittees_LenderCommID]
GO
ALTER TABLE [dbo].[SchC]  WITH CHECK ADD  CONSTRAINT [FK_SchC_lkpElec] FOREIGN KEY([ElecID])
REFERENCES [dbo].[lkpElec] ([USATID])
GO
ALTER TABLE [dbo].[SchC] CHECK CONSTRAINT [FK_SchC_lkpElec]
GO
ALTER TABLE [dbo].[SchC]  WITH CHECK ADD  CONSTRAINT [FK_SchC_lkpEntTp] FOREIGN KEY([EntTpID])
REFERENCES [dbo].[lkpEntTp] ([USATID])
GO
ALTER TABLE [dbo].[SchC] CHECK CONSTRAINT [FK_SchC_lkpEntTp]
GO
ALTER TABLE [dbo].[SchC]  WITH CHECK ADD  CONSTRAINT [FK_SchC_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchC] CHECK CONSTRAINT [FK_SchC_lkpFormTp]
GO
ALTER TABLE [dbo].[SchC]  WITH CHECK ADD  CONSTRAINT [FK_SchC_lkpLnNbr_LnNbrID] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchC] CHECK CONSTRAINT [FK_SchC_lkpLnNbr_LnNbrID]
GO
ALTER TABLE [dbo].[SchC1]  WITH CHECK ADD  CONSTRAINT [FK_SchC1_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchC1] CHECK CONSTRAINT [FK_SchC1_lkpCommittees]
GO
ALTER TABLE [dbo].[SchC1]  WITH CHECK ADD  CONSTRAINT [FK_SchC1_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchC1] CHECK CONSTRAINT [FK_SchC1_lkpFormTp]
GO
ALTER TABLE [dbo].[SchC1]  WITH CHECK ADD  CONSTRAINT [FK_SchC1_lkpLnNbr] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchC1] CHECK CONSTRAINT [FK_SchC1_lkpLnNbr]
GO
ALTER TABLE [dbo].[SchC2]  WITH CHECK ADD  CONSTRAINT [FK_SchC2_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchC2] CHECK CONSTRAINT [FK_SchC2_lkpCommittees]
GO
ALTER TABLE [dbo].[SchC2]  WITH CHECK ADD  CONSTRAINT [FK_SchC2_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchC2] CHECK CONSTRAINT [FK_SchC2_lkpFormTp]
GO
ALTER TABLE [dbo].[SchC2]  WITH CHECK ADD  CONSTRAINT [FK_SchC2_lkpLnNbr] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchC2] CHECK CONSTRAINT [FK_SchC2_lkpLnNbr]
GO
ALTER TABLE [dbo].[SchD]  WITH CHECK ADD  CONSTRAINT [FK_SchD_lkpCandidates] FOREIGN KEY([CreditorCandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[SchD] CHECK CONSTRAINT [FK_SchD_lkpCandidates]
GO
ALTER TABLE [dbo].[SchD]  WITH CHECK ADD  CONSTRAINT [FK_SchD_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchD] CHECK CONSTRAINT [FK_SchD_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[SchD]  WITH CHECK ADD  CONSTRAINT [FK_SchD_lkpCommittees_CreditorCommID] FOREIGN KEY([CreditorCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchD] CHECK CONSTRAINT [FK_SchD_lkpCommittees_CreditorCommID]
GO
ALTER TABLE [dbo].[SchD]  WITH CHECK ADD  CONSTRAINT [FK_SchD_lkpEntTp] FOREIGN KEY([EntTpID])
REFERENCES [dbo].[lkpEntTp] ([USATID])
GO
ALTER TABLE [dbo].[SchD] CHECK CONSTRAINT [FK_SchD_lkpEntTp]
GO
ALTER TABLE [dbo].[SchD]  WITH CHECK ADD  CONSTRAINT [FK_SchD_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchD] CHECK CONSTRAINT [FK_SchD_lkpFormTp]
GO
ALTER TABLE [dbo].[SchD]  WITH CHECK ADD  CONSTRAINT [FK_SchD_lkpLnNbr_LnNbrID] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchD] CHECK CONSTRAINT [FK_SchD_lkpLnNbr_LnNbrID]
GO
ALTER TABLE [dbo].[SchE]  WITH CHECK ADD  CONSTRAINT [FK_SchE_lkpCandidates] FOREIGN KEY([SupOppCandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[SchE] CHECK CONSTRAINT [FK_SchE_lkpCandidates]
GO
ALTER TABLE [dbo].[SchE]  WITH CHECK ADD  CONSTRAINT [FK_SchE_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchE] CHECK CONSTRAINT [FK_SchE_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[SchE]  WITH CHECK ADD  CONSTRAINT [FK_SchE_lkpCommittees_PayeeCommID] FOREIGN KEY([PayeeCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchE] CHECK CONSTRAINT [FK_SchE_lkpCommittees_PayeeCommID]
GO
ALTER TABLE [dbo].[SchE]  WITH CHECK ADD  CONSTRAINT [FK_SchE_lkpElec] FOREIGN KEY([ElecID])
REFERENCES [dbo].[lkpElec] ([USATID])
GO
ALTER TABLE [dbo].[SchE] CHECK CONSTRAINT [FK_SchE_lkpElec]
GO
ALTER TABLE [dbo].[SchE]  WITH CHECK ADD  CONSTRAINT [FK_SchE_lkpEntTp] FOREIGN KEY([EntTpID])
REFERENCES [dbo].[lkpEntTp] ([USATID])
GO
ALTER TABLE [dbo].[SchE] CHECK CONSTRAINT [FK_SchE_lkpEntTp]
GO
ALTER TABLE [dbo].[SchE]  WITH CHECK ADD  CONSTRAINT [FK_SchE_lkpExpCat] FOREIGN KEY([ExpCatID])
REFERENCES [dbo].[lkpExpCat] ([USATID])
GO
ALTER TABLE [dbo].[SchE] CHECK CONSTRAINT [FK_SchE_lkpExpCat]
GO
ALTER TABLE [dbo].[SchE]  WITH CHECK ADD  CONSTRAINT [FK_SchE_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchE] CHECK CONSTRAINT [FK_SchE_lkpFormTp]
GO
ALTER TABLE [dbo].[SchE]  WITH CHECK ADD  CONSTRAINT [FK_SchE_lkpLnNbr_BkRefSchdID] FOREIGN KEY([BkRefSchdID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchE] CHECK CONSTRAINT [FK_SchE_lkpLnNbr_BkRefSchdID]
GO
ALTER TABLE [dbo].[SchE]  WITH CHECK ADD  CONSTRAINT [FK_SchE_lkpLnNbr_LnNbrID] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchE] CHECK CONSTRAINT [FK_SchE_lkpLnNbr_LnNbrID]
GO
ALTER TABLE [dbo].[SchF]  WITH CHECK ADD  CONSTRAINT [FK_SchF_lkpCandidates] FOREIGN KEY([PayeeCandID])
REFERENCES [dbo].[lkpCandidates] ([USATID])
GO
ALTER TABLE [dbo].[SchF] CHECK CONSTRAINT [FK_SchF_lkpCandidates]
GO
ALTER TABLE [dbo].[SchF]  WITH CHECK ADD  CONSTRAINT [FK_SchF_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchF] CHECK CONSTRAINT [FK_SchF_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[SchF]  WITH CHECK ADD  CONSTRAINT [FK_SchF_lkpCommittees_DesigCommID] FOREIGN KEY([DesigCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchF] CHECK CONSTRAINT [FK_SchF_lkpCommittees_DesigCommID]
GO
ALTER TABLE [dbo].[SchF]  WITH CHECK ADD  CONSTRAINT [FK_SchF_lkpCommittees_PayeeCommID] FOREIGN KEY([PayeeCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchF] CHECK CONSTRAINT [FK_SchF_lkpCommittees_PayeeCommID]
GO
ALTER TABLE [dbo].[SchF]  WITH CHECK ADD  CONSTRAINT [FK_SchF_lkpCommittees_SubordCommID] FOREIGN KEY([SubordCommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchF] CHECK CONSTRAINT [FK_SchF_lkpCommittees_SubordCommID]
GO
ALTER TABLE [dbo].[SchF]  WITH CHECK ADD  CONSTRAINT [FK_SchF_lkpEntTp] FOREIGN KEY([EntTpID])
REFERENCES [dbo].[lkpEntTp] ([USATID])
GO
ALTER TABLE [dbo].[SchF] CHECK CONSTRAINT [FK_SchF_lkpEntTp]
GO
ALTER TABLE [dbo].[SchF]  WITH CHECK ADD  CONSTRAINT [FK_SchF_lkpExpCat] FOREIGN KEY([ExpCatID])
REFERENCES [dbo].[lkpExpCat] ([USATID])
GO
ALTER TABLE [dbo].[SchF] CHECK CONSTRAINT [FK_SchF_lkpExpCat]
GO
ALTER TABLE [dbo].[SchF]  WITH CHECK ADD  CONSTRAINT [FK_SchF_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchF] CHECK CONSTRAINT [FK_SchF_lkpFormTp]
GO
ALTER TABLE [dbo].[SchF]  WITH CHECK ADD  CONSTRAINT [FK_SchF_lkpLnNbr_BkRefSchdID] FOREIGN KEY([BkRefSchdID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchF] CHECK CONSTRAINT [FK_SchF_lkpLnNbr_BkRefSchdID]
GO
ALTER TABLE [dbo].[SchF]  WITH CHECK ADD  CONSTRAINT [FK_SchF_lkpLnNbr_LnNbrID] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchF] CHECK CONSTRAINT [FK_SchF_lkpLnNbr_LnNbrID]
GO
ALTER TABLE [dbo].[SchF]  WITH CHECK ADD  CONSTRAINT [FK_SchF_lkpTransPurp] FOREIGN KEY([TransPurpID])
REFERENCES [dbo].[lkpTransPurp] ([USATID])
GO
ALTER TABLE [dbo].[SchF] CHECK CONSTRAINT [FK_SchF_lkpTransPurp]
GO
ALTER TABLE [dbo].[SchH1]  WITH CHECK ADD  CONSTRAINT [FK_SchH1_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchH1] CHECK CONSTRAINT [FK_SchH1_lkpCommittees]
GO
ALTER TABLE [dbo].[SchH1]  WITH CHECK ADD  CONSTRAINT [FK_SchH1_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchH1] CHECK CONSTRAINT [FK_SchH1_lkpFormTp]
GO
ALTER TABLE [dbo].[SchH1]  WITH CHECK ADD  CONSTRAINT [FK_SchH1_lkpLnNbr] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchH1] CHECK CONSTRAINT [FK_SchH1_lkpLnNbr]
GO
ALTER TABLE [dbo].[SchH2]  WITH CHECK ADD  CONSTRAINT [FK_SchH2_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchH2] CHECK CONSTRAINT [FK_SchH2_lkpCommittees]
GO
ALTER TABLE [dbo].[SchH2]  WITH CHECK ADD  CONSTRAINT [FK_SchH2_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchH2] CHECK CONSTRAINT [FK_SchH2_lkpFormTp]
GO
ALTER TABLE [dbo].[SchH2]  WITH CHECK ADD  CONSTRAINT [FK_SchH2_lkpLnNbr] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchH2] CHECK CONSTRAINT [FK_SchH2_lkpLnNbr]
GO
ALTER TABLE [dbo].[SchH3]  WITH CHECK ADD  CONSTRAINT [FK_SchH3_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchH3] CHECK CONSTRAINT [FK_SchH3_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[SchH3]  WITH CHECK ADD  CONSTRAINT [FK_SchH3_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchH3] CHECK CONSTRAINT [FK_SchH3_lkpFormTp]
GO
ALTER TABLE [dbo].[SchH3]  WITH CHECK ADD  CONSTRAINT [FK_SchH3_lkpLnNbr_LnNbrID] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchH3] CHECK CONSTRAINT [FK_SchH3_lkpLnNbr_LnNbrID]
GO
ALTER TABLE [dbo].[SchH4]  WITH CHECK ADD  CONSTRAINT [FK_SchH4_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchH4] CHECK CONSTRAINT [FK_SchH4_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[SchH4]  WITH CHECK ADD  CONSTRAINT [FK_SchH4_lkpEntTp] FOREIGN KEY([EntTpID])
REFERENCES [dbo].[lkpEntTp] ([USATID])
GO
ALTER TABLE [dbo].[SchH4] CHECK CONSTRAINT [FK_SchH4_lkpEntTp]
GO
ALTER TABLE [dbo].[SchH4]  WITH CHECK ADD  CONSTRAINT [FK_SchH4_lkpExpCat] FOREIGN KEY([ExpCatID])
REFERENCES [dbo].[lkpExpCat] ([USATID])
GO
ALTER TABLE [dbo].[SchH4] CHECK CONSTRAINT [FK_SchH4_lkpExpCat]
GO
ALTER TABLE [dbo].[SchH4]  WITH CHECK ADD  CONSTRAINT [FK_SchH4_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchH4] CHECK CONSTRAINT [FK_SchH4_lkpFormTp]
GO
ALTER TABLE [dbo].[SchH4]  WITH CHECK ADD  CONSTRAINT [FK_SchH4_lkpLnNbr_BkRefSchdID] FOREIGN KEY([BkRefSchdID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchH4] CHECK CONSTRAINT [FK_SchH4_lkpLnNbr_BkRefSchdID]
GO
ALTER TABLE [dbo].[SchH4]  WITH CHECK ADD  CONSTRAINT [FK_SchH4_lkpLnNbr_LnNbrID] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchH4] CHECK CONSTRAINT [FK_SchH4_lkpLnNbr_LnNbrID]
GO
ALTER TABLE [dbo].[SchH4]  WITH CHECK ADD  CONSTRAINT [FK_SchH4_lkpTransPurp] FOREIGN KEY([TransPurpID])
REFERENCES [dbo].[lkpTransPurp] ([USATID])
GO
ALTER TABLE [dbo].[SchH4] CHECK CONSTRAINT [FK_SchH4_lkpTransPurp]
GO
ALTER TABLE [dbo].[SchH5]  WITH CHECK ADD  CONSTRAINT [FK_SchH5_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchH5] CHECK CONSTRAINT [FK_SchH5_lkpCommittees]
GO
ALTER TABLE [dbo].[SchH5]  WITH CHECK ADD  CONSTRAINT [FK_SchH5_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchH5] CHECK CONSTRAINT [FK_SchH5_lkpFormTp]
GO
ALTER TABLE [dbo].[SchH5]  WITH CHECK ADD  CONSTRAINT [FK_SchH5_lkpLnNbr] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchH5] CHECK CONSTRAINT [FK_SchH5_lkpLnNbr]
GO
ALTER TABLE [dbo].[SchH6]  WITH CHECK ADD  CONSTRAINT [FK_SchH6_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchH6] CHECK CONSTRAINT [FK_SchH6_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[SchH6]  WITH CHECK ADD  CONSTRAINT [FK_SchH6_lkpEntTp] FOREIGN KEY([EntTpID])
REFERENCES [dbo].[lkpEntTp] ([USATID])
GO
ALTER TABLE [dbo].[SchH6] CHECK CONSTRAINT [FK_SchH6_lkpEntTp]
GO
ALTER TABLE [dbo].[SchH6]  WITH CHECK ADD  CONSTRAINT [FK_SchH6_lkpExpCat] FOREIGN KEY([ExpCatID])
REFERENCES [dbo].[lkpExpCat] ([USATID])
GO
ALTER TABLE [dbo].[SchH6] CHECK CONSTRAINT [FK_SchH6_lkpExpCat]
GO
ALTER TABLE [dbo].[SchH6]  WITH CHECK ADD  CONSTRAINT [FK_SchH6_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchH6] CHECK CONSTRAINT [FK_SchH6_lkpFormTp]
GO
ALTER TABLE [dbo].[SchH6]  WITH CHECK ADD  CONSTRAINT [FK_SchH6_lkpLnNbr_BkRefSchdID] FOREIGN KEY([BkRefSchdID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchH6] CHECK CONSTRAINT [FK_SchH6_lkpLnNbr_BkRefSchdID]
GO
ALTER TABLE [dbo].[SchH6]  WITH CHECK ADD  CONSTRAINT [FK_SchH6_lkpLnNbr_LnNbrID] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchH6] CHECK CONSTRAINT [FK_SchH6_lkpLnNbr_LnNbrID]
GO
ALTER TABLE [dbo].[SchH6]  WITH CHECK ADD  CONSTRAINT [FK_SchH6_lkpTransPurp] FOREIGN KEY([TransPurpID])
REFERENCES [dbo].[lkpTransPurp] ([USATID])
GO
ALTER TABLE [dbo].[SchH6] CHECK CONSTRAINT [FK_SchH6_lkpTransPurp]
GO
ALTER TABLE [dbo].[SchI]  WITH CHECK ADD  CONSTRAINT [FK_SchI_lkpCommittees_CommID] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchI] CHECK CONSTRAINT [FK_SchI_lkpCommittees_CommID]
GO
ALTER TABLE [dbo].[SchI]  WITH CHECK ADD  CONSTRAINT [FK_SchI_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchI] CHECK CONSTRAINT [FK_SchI_lkpFormTp]
GO
ALTER TABLE [dbo].[SchI]  WITH CHECK ADD  CONSTRAINT [FK_SchI_lkpLnNbr_LnNbrID] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchI] CHECK CONSTRAINT [FK_SchI_lkpLnNbr_LnNbrID]
GO
ALTER TABLE [dbo].[SchL]  WITH CHECK ADD  CONSTRAINT [FK_SchL_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchL] CHECK CONSTRAINT [FK_SchL_lkpCommittees]
GO
ALTER TABLE [dbo].[SchL]  WITH CHECK ADD  CONSTRAINT [FK_SchL_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchL] CHECK CONSTRAINT [FK_SchL_lkpFormTp]
GO
ALTER TABLE [dbo].[SchL]  WITH CHECK ADD  CONSTRAINT [FK_SchL_lkpLnNbr] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchL] CHECK CONSTRAINT [FK_SchL_lkpLnNbr]
GO
ALTER TABLE [dbo].[SchText]  WITH CHECK ADD  CONSTRAINT [FK_SchText_lkpCommittees] FOREIGN KEY([CommID])
REFERENCES [dbo].[lkpCommittees] ([USATID])
GO
ALTER TABLE [dbo].[SchText] CHECK CONSTRAINT [FK_SchText_lkpCommittees]
GO
ALTER TABLE [dbo].[SchText]  WITH CHECK ADD  CONSTRAINT [FK_SchText_lkpFormTp] FOREIGN KEY([PrtTpID])
REFERENCES [dbo].[lkpFormTp] ([USATID])
GO
ALTER TABLE [dbo].[SchText] CHECK CONSTRAINT [FK_SchText_lkpFormTp]
GO
ALTER TABLE [dbo].[SchText]  WITH CHECK ADD  CONSTRAINT [FK_SchText_lkpLnNbr_BkRefSchdID] FOREIGN KEY([BkRefSchdID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchText] CHECK CONSTRAINT [FK_SchText_lkpLnNbr_BkRefSchdID]
GO
ALTER TABLE [dbo].[SchText]  WITH CHECK ADD  CONSTRAINT [FK_SchText_lkpLnNbr_LnNbrID] FOREIGN KEY([LnNbrID])
REFERENCES [dbo].[lkpLnNbr] ([USATID])
GO
ALTER TABLE [dbo].[SchText] CHECK CONSTRAINT [FK_SchText_lkpLnNbr_LnNbrID]
GO






/****** Object:  StoredProcedure [dbo].[tmp_usp_ContribsSearch_NameAmtDateState]    Script Date: 2/25/2015 1:01:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











GO
/****** Object:  StoredProcedure [dbo].[usp_AddAffRel]    Script Date: 2/25/2015 1:01:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[usp_AddAffRel] (@AffRel varchar(3), @AffRelID tinyint output)

AS

-- This stored procedure is used by an SSIS package to add new affiliation relationship
-- codes to lkpAffRel and return the ID for that newly inserted value

BEGIN

	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT USATID
		FROM lkpAffRel
		WHERE AffRelCd = ISNULL(@AffRel, ''))

	BEGIN
		INSERT INTO lkpAffRel (AffRelCd)
		VALUES (@AffRel);
	END

	SELECT @AffRelID = USATID
		FROM lkpAffRel
		WHERE AffRelCd = ISNULL(@AffRel, '');

END







GO
/****** Object:  StoredProcedure [dbo].[usp_AddCandidate]    Script Date: 2/25/2015 1:01:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[usp_AddCandidate] (@FECCandID char(9), @CandID int output)

AS

-- This stored procedure is used by an SSIS package to add new FEC candidate IDs to lkpCandidates and return
-- the identity ID for that newly inserted value

BEGIN

	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT USATID
		FROM lkpCandidates
		WHERE FECCandID = ISNULL(@FECCandID, ''))

	BEGIN
		INSERT INTO lkpCandidates (FECCandID)
		VALUES (@FECCandID);
	END

	SELECT @CandID = USATID
		FROM lkpCandidates
		WHERE FECCandID = ISNULL(@FECCandID, '');

END



GO
/****** Object:  StoredProcedure [dbo].[usp_AddCandidateWrap]    Script Date: 2/25/2015 1:01:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE [dbo].[usp_AddCandidateWrap] (@FECCandID char(9))

AS

-- This stored procedure is a wrapper to allow a Python script to indirectly call usp_AddCandidate

BEGIN

	SET NOCOUNT ON;

	DECLARE @ReturnID int;
	EXEC usp_AddCandidate @FECCandID, @CandID = @ReturnID OUTPUT;
	SELECT @ReturnID;
	RETURN 0;

END


GO
/****** Object:  StoredProcedure [dbo].[usp_AddCommittee]    Script Date: 2/25/2015 1:01:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[usp_AddCommittee] (@FECCommID char(9), @CommID int output)

AS

-- This stored procedure is used by an SSIS package to add new FEC committee IDs to lkpCommittees and return
-- the identity ID for that newly inserted value

BEGIN

	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT USATID
		FROM lkpCommittees
		WHERE FECCommID = @FECCommID)

	BEGIN
		INSERT INTO lkpCommittees (FECCommID)
		VALUES (@FECCommID);
	END

	SELECT @CommID = USATID
		FROM lkpCommittees
		WHERE FECCommID = @FECCommID;

END


GO
/****** Object:  StoredProcedure [dbo].[usp_AddCongLdrRole]    Script Date: 2/25/2015 1:01:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE [dbo].[usp_AddCongLdrRole] (@CongressID int, @Title varchar (255), @Chamber varchar (6),
	@StDate date, @EdDate date)

AS

-- This stored procedure is used by the update_congress Python script to add a row to the CongLdrRoles table
-- and return -1 if the operation raises an error.

BEGIN

	SET NOCOUNT ON;

	BEGIN TRY

	IF @EdDate = CAST('1/1/1900' AS smalldatetime)
		AND @EdDate < @StDate
	SET @EdDate = NULL

	-- Update existing rows
	UPDATE CongLdrRoles
	SET Title = @Title,
		Chamber = @Chamber,
		EdDate = @EdDate
	WHERE CongressID = @CongressID
		AND StDate = @StDate
		AND (ISNULL(Title, '') <> ISNULL(@Title, '')
			OR ISNULL(Chamber, '') <> ISNULL(@Chamber, '')
			OR ISNULL(EdDate, '1/1/0001') <> ISNULL(@EdDate, '1/1/0001'))

	-- Insert new rows
	IF NOT EXISTS (SELECT 1
	FROM CongLdrRoles
	WHERE CongressID = @CongressID
		AND StDate = @StDate)

		BEGIN

		INSERT INTO CongLdrRoles (CongressID, Title, Chamber, StDate, EdDate)
		VALUES (@CongressID, @Title, @Chamber, @StDate, @EdDate)
		
		
		END

	-- Return USATID
	SELECT ISNULL(USATID, -1)
	FROM CongLdrRoles
	WHERE CongressID = @CongressID
		AND StDate = @StDate;

	END TRY

	BEGIN CATCH
		SELECT -1
	END CATCH

END





















GO
/****** Object:  StoredProcedure [dbo].[usp_AddCongOtherName]    Script Date: 2/25/2015 1:01:42 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO










CREATE PROCEDURE [dbo].[usp_AddCongOtherName] (@CongressID int, @FName varchar (15), @MName varchar (25), @LName varchar (25),
	@Suffix varchar (5), @Nickname varchar (15), @OfficialFullName varchar (30), @StDate date, @EdDate date)

AS

-- This stored procedure is used by the update_congress Python script to add a row to the CongOtherNames table
-- and return -1 if the operation raises an error.

BEGIN

	SET NOCOUNT ON;

	BEGIN TRY

	-- Update existing rows
	UPDATE CongOthNames
	SET FName = @FName,
		MName = @MName,
		LName = @LName,
		Suffix = @Suffix,
		Nickname = @Nickname,
		OfficialFullName = @OfficialFullName,
		EdDate = @EdDate
	WHERE CongressID = @CongressID
		AND ISNULL(StDate, '1/1/0001') = ISNULL(@StDate, '1/1/0001')
		AND (ISNULL(FName, '') <> ISNULL(@FName, '')
		OR ISNULL(MName, '') <> ISNULL(@MName, '')
		OR ISNULL(LName, '') <> ISNULL(@LName, '')
		OR ISNULL(Suffix, '') <> ISNULL(@Suffix, '')
		OR ISNULL(Nickname, '') <> ISNULL(@Nickname, '')
		OR ISNULL(OfficialFullName, '') <> ISNULL(@OfficialFullName, '')
		OR ISNULL(EdDate, '1/1/0001') <> ISNULL(@EdDate, '1/1/0001'))

	-- Insert new rows
	IF NOT EXISTS (SELECT 1
	FROM CongOthNames
	WHERE CongressID = @CongressID
		AND ISNULL(StDate, '1/1/0001') = ISNULL(@StDate, '1/1/0001'))

		BEGIN

		INSERT INTO CongOthNames (CongressID, FName, MName, LName, Suffix, Nickname, OfficialFullName, StDate, EdDate)
		VALUES (@CongressID, @FName, @MName, @LName, @Suffix, @Nickname, @OfficialFullName, @StDate, @EdDate)
		
		
		END

	-- Return USATID
	SELECT ISNULL(USATID, -1)
	FROM CongOthNames
	WHERE CongressID = @CongressID
		AND ISNULL(StDate, '1/1/0001') = ISNULL(@StDate, '1/1/0001');

	END TRY

	BEGIN CATCH
		SELECT -1
	END CATCH

END

















GO
/****** Object:  StoredProcedure [dbo].[usp_AddCongTerm]    Script Date: 2/25/2015 1:01:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO












CREATE PROCEDURE [dbo].[usp_AddCongTerm] (@CongressID int, @Chamber char(3), @StDate date, @EdDate date,  @StAbbr char (2),
	@Dist smallint, @SenClass tinyint, @StRank varchar(6), @Party varchar (26), @URL varchar (50), @Addr varchar (75),
	@Phone varchar (15), @Fax varchar (15), @ContactForm varchar (150), @Office varchar (50), @RSSURL varchar (150))

AS

-- This stored procedure is used by the update_congress Python script to add a row to the CongTerms table
-- and return -1 if the operation raises an error.

BEGIN

	SET NOCOUNT ON;

	BEGIN TRY

	-- Update existing rows
	UPDATE CongTerms
	SET EdDate = @EdDate,
		StAbbr = @StAbbr,
		Dist = ISNULL(@Dist, 0),
		SenClass = ISNULL(@SenClass, 0),
		StRank = ISNULL(@StRank, ''),
		Party = @Party,
		URL = @URL,
		Addr = @Addr,
		Phone = @Phone,
		Fax = @Fax,
		ContactForm = @ContactForm,
		Office = @Office,
		RSSURL = @RSSURL
	WHERE CongressID = @CongressID
		AND Chamber = @Chamber
		AND StDate = @StDate
		AND (EdDate <> @EdDate
			OR StAbbr <> ISNULL(@StAbbr, '')
			OR Dist <> ISNULL(@Dist, 0)
			OR SenClass <> ISNULL(@SenClass, 0)
			OR StRank <> ISNULL(@StRank, '')
			OR ISNULL(Party, '') <> ISNULL(@Party, '')
			OR ISNULL(URL, '') <> ISNULL(@URL, '')
			OR ISNULL(Addr, '') <> ISNULL(@Addr, '')
			OR ISNULL(Phone, '') <> ISNULL(@Phone, '')
			OR ISNULL(Fax, '') <> ISNULL(@Fax, '')
			OR ISNULL(ContactForm, '') <> ISNULL(@ContactForm, '')
			OR ISNULL(Office, '') <> ISNULL(@Office, '')
			OR ISNULL(RSSURL, '') <> ISNULL(@RSSURL, ''))

	-- Insert new rows
	IF NOT EXISTS (SELECT 1
	FROM CongTerms
	WHERE CongressID = @CongressID
		AND Chamber = @Chamber
		AND StDate = @StDate)

		BEGIN

		INSERT INTO CongTerms (CongressID, Chamber, StDate, EdDate, StAbbr, Dist, SenClass, StRank, Party, URL, Addr,
			Phone, Fax, ContactForm, Office, RSSURL)
		VALUES (@CongressID, ISNULL(@Chamber, ''), @StDate, @EdDate, ISNULL(@StAbbr, ''), ISNULL(@Dist, 0),
			ISNULL(@SenClass, 0), ISNULL(@StRank, ''), @Party, @URL, @Addr, @Phone, @Fax, @ContactForm, @Office, @RSSURL)

		END

	-- Return USATID
	SELECT ISNULL(USATID, -1)
	FROM CongTerms
	WHERE CongressID = @CongressID
		AND Chamber = @Chamber
		AND StDate = @StDate;

	END TRY

	BEGIN CATCH
		SELECT -1
	END CATCH

END



















GO
/****** Object:  StoredProcedure [dbo].[usp_AddElec]    Script Date: 2/25/2015 1:01:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE PROCEDURE [dbo].[usp_AddElec] (@ElecCd varchar(5), @ElecID smallint output)

AS

-- This stored procedure is used by an SSIS package to add new election codes to lkpElec and return
-- the identity ID for that newly inserted value

BEGIN

	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT USATID
		FROM lkpElec
		WHERE ElecCd = ISNULL(@ElecCd, ''))

	BEGIN
		INSERT INTO lkpElec (ElecCd)
		VALUES (@ElecCd);
	END

	SELECT @ElecID = USATID
		FROM lkpElec
		WHERE ElecCd = ISNULL(@ElecCd, '');

END










GO
/****** Object:  StoredProcedure [dbo].[usp_AddEntTp]    Script Date: 2/25/2015 1:01:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[usp_AddEntTp] (@EntTp varchar(4), @EntTpID tinyint output)

AS

-- This stored procedure is used by an SSIS package to add new entity types to lkpEntTp and return
-- the identity ID for that newly inserted value

BEGIN

	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT USATID
		FROM lkpEntTp
		WHERE EntTp = ISNULL(@EntTp, ''))

	BEGIN
		INSERT INTO lkpEntTp (EntTp)
		VALUES (@EntTp);
	END

	SELECT @EntTpID = USATID
		FROM lkpEntTp
		WHERE EntTp = ISNULL(@EntTp, '');

END





GO
/****** Object:  StoredProcedure [dbo].[usp_AddExpCat]    Script Date: 2/25/2015 1:01:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







CREATE PROCEDURE [dbo].[usp_AddExpCat] (@ExpCatCd varchar(3), @ExpCatID tinyint output)

AS

-- This stored procedure is used by an SSIS package to add new expenditure category codes to lkpExpCat and return
-- the identity ID for that newly inserted value

BEGIN

	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT USATID
		FROM lkpExpCat
		WHERE ExpCatCd = ISNULL(@ExpCatCd, ''))

	BEGIN
		INSERT INTO lkpExpCat (ExpCatCd)
		VALUES (@ExpCatCd);
	END

	SELECT @ExpCatID = USATID
		FROM lkpExpCat
		WHERE ExpCatCd = ISNULL(@ExpCatCd, '');

END








GO
/****** Object:  StoredProcedure [dbo].[usp_AddFormTp]    Script Date: 2/25/2015 1:01:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE [dbo].[usp_AddFormTp] (@FormTp varchar(8), @FormTpID smallint output)

AS

-- This stored procedure is used by an SSIS package to add new form types to lkpFormTp and return
-- the identity ID for that newly inserted value

BEGIN

	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT USATID
		FROM lkpFormTp
		WHERE FormTp = ISNULL(@FormTp, ''))

	BEGIN
		INSERT INTO lkpFormTp (FormTp)
		VALUES (@FormTp);
	END

	SELECT @FormTpID = USATID
		FROM lkpFormTp
		WHERE FormTp = ISNULL(@FormTp, '');

END






GO
/****** Object:  StoredProcedure [dbo].[usp_AddLegislator]    Script Date: 2/25/2015 1:01:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE PROCEDURE [dbo].[usp_AddLegislator] (@FName varchar (15), @MName varchar (25), @LName varchar (25),
	@Suffix varchar (5), @Nickname varchar (15), @OfficialFullName varchar (30), @Birthday date, @Gender char (1),
	@Religion varchar (45), @Bioguide varchar (7), @Thomas varchar (5), @SenLegID varchar (4), @FECIDs varchar (31),
	@GovTrackID int, @OpenSecretsID varchar (9), @VoteSmartID int, @ICPSRID int, @CSPANID int, @WikipediaPage varchar (45),
	@BallotpediaPage varchar (55), @WaPoTopicName varchar (40), @MaplightID varchar (5), @HouseHistoryID varchar (5),
	@BioguideOldID varchar (9), @PeopleID int)

AS

-- This stored procedure is used by the update_congress Python script to add a row to the Congress table
-- and return the primary key for the newly inserted row.

BEGIN

	SET NOCOUNT ON;

	BEGIN TRY

	-- Update existing rows
	UPDATE Congress
	SET FName = ISNULL(@FName, ''),
		MName = @MName,
		LName = ISNULL(@LName, ''),
		Suffix = @Suffix,
		Nickname = @Nickname,
		OfficialFullName = @OfficialFullName,
		Birthday = @Birthday,
		Gender = ISNULL(@Gender, ''),
		Religion = @Religion,
		Bioguide = ISNULL(@Bioguide, ''),
		Thomas = @Thomas,
		SenLegID = @SenLegID,
		FECIDs = @FECIDs,
		OpenSecretsID = @OpenSecretsID,
		VoteSmartID = @VoteSmartID,
		ICPSRID = @ICPSRID,
		CSPANID = @CSPANID,
		WikipediaPage = @WikipediaPage,
		BallotpediaPage = @BallotpediaPage,
		WaPoTopicName = @WaPoTopicName,
		MaplightID = @MaplightID,
		HouseHistoryID = @HouseHistoryID, 
		BioguideOldID = @BioguideOldID,
		PeopleID = @PeopleID
	WHERE GovTrackID = @GovTrackID
		AND (FName <> ISNULL(@FName, '')
		OR ISNULL(MName, '') <> ISNULL(@MName, '')
		OR LName <> ISNULL(@LName, '')
		OR ISNULL(Suffix, '') <> ISNULL(@Suffix, '')
		OR ISNULL(Nickname, '') <> ISNULL(@Nickname, '')
		OR ISNULL(OfficialFullName, '') <> ISNULL(@OfficialFullName, '')
		OR ISNULL(Birthday, '1/1/0001') <> ISNULL(@Birthday, '1/1/0001')
		OR Gender <> ISNULL(@Gender, '')
		OR ISNULL(Religion, '') <> ISNULL(@Religion, '')
		OR Bioguide <> ISNULL(@Bioguide, '')
		OR ISNULL(Thomas, '') <> ISNULL(@Thomas, '')
		OR ISNULL(SenLegID, '') <> ISNULL(@SenLegID, '')
		OR ISNULL(FECIDs, '') <> ISNULL(@FECIDs, '')
		OR ISNULL(OpenSecretsID, '') <> ISNULL(@OpenSecretsID, '')
		OR VoteSmartID <> @VoteSmartID
		OR ICPSRID <> @ICPSRID
		OR CSPANID <> @CSPANID
		OR ISNULL(WikipediaPage, '') <> ISNULL(@WikipediaPage, '')
		OR ISNULL(BallotpediaPage, '') <> ISNULL(@BallotpediaPage, '')
		OR ISNULL(WaPoTopicName, '') <> ISNULL(@WaPoTopicName, '')
		OR ISNULL(MaplightID, '') <> ISNULL(@MaplightID, '')
		OR ISNULL(HouseHistoryID, '') <> ISNULL(@HouseHistoryID, '')
		OR ISNULL(BioguideOldID, '') <> ISNULL(@BioguideOldID, '')
		OR PeopleID <> @PeopleID)

	-- Insert new rows
	IF NOT EXISTS (SELECT 1
	FROM Congress
	WHERE GovTrackID = @GovTrackID)

		BEGIN

		INSERT INTO Congress (FName, MName, LName, Suffix, Nickname, OfficialFullName, Birthday, Gender, Religion, Bioguide, Thomas,
			SenLegID, FECIDs, GovTrackID, OpenSecretsID, VoteSmartID, ICPSRID, CSPANID, WikipediaPage, BallotpediaPage,
			WaPoTopicName, MaplightID, HouseHistoryID, BioguideOldID, PeopleID)
		VALUES (ISNULL(@FName, ''), @MName, ISNULL(@LName, ''), @Suffix, @Nickname, @OfficialFullName, @Birthday, ISNULL(@Gender, ''),
			@Religion, ISNULL(@Bioguide, ''),
			@Thomas, @SenLegID, @FECIDs, @GovTrackID, @OpenSecretsID, @VoteSmartID, @ICPSRID, @CSPANID, @WikipediaPage,
			@BallotpediaPage, @WaPoTopicName, @MaplightID, @HouseHistoryID, @BioguideOldID, @PeopleID)

		END

	-- Return USATID
	SELECT ISNULL(USATID, 0)
	FROM Congress
	WHERE GovTrackID = @GovTrackID;

	END TRY

	BEGIN CATCH
		SELECT -1
	END CATCH

END














GO
/****** Object:  StoredProcedure [dbo].[usp_AddLnNbr]    Script Date: 2/25/2015 1:01:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE [dbo].[usp_AddLnNbr] (@LnNbr varchar(8), @LnNbrID tinyint output)

AS

-- This stored procedure is used by an SSIS package to add new line numbers to lkpLnNbr and return
-- the identity ID for that newly inserted value

BEGIN

	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT USATID
		FROM lkpLnNbr
		WHERE LnNbr = ISNULL(@LnNbr, ''))

	BEGIN
		INSERT INTO lkpLnNbr (LnNbr)
		VALUES (@LnNbr);
	END

	SELECT @LnNbrID = USATID
		FROM lkpLnNbr
		WHERE LnNbr = ISNULL(@LnNbr, '');

END






GO
/****** Object:  StoredProcedure [dbo].[usp_AddRptHdr_F1]    Script Date: 2/25/2015 1:01:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








-- This stored procedure adds a header row to Form1
-- It returns -1 if the report already exists in the database
CREATE PROC [dbo].[usp_AddRptHdr_F1] (@ImageID int, @FormTp char(3) = '', @CommID char (9), @flgChgCommNm bit, @CommNm varchar (200),
	@flgAddrChg bit, @Addr1 varchar(34), @Addr2 varchar(34), @City varchar(30), @StAbbr char(2) = '', @Zip varchar(9),
	@flgChgCommEmail bit, @CommEmail varchar (90), @flgChgCommUrl bit, @CommUrl varchar (90), @SubmDt date, @SignLName varchar (90),
	@SignFName varchar (20), @SignMName varchar (20), @SignPfx varchar (10), @SignSfx varchar (10), @SignDt date, @F1CommTpCd char (1),
	@CandID char (9), @CandLName varchar (90), @CandFName varchar (20), @CandMName varchar (20), @CandPfx varchar (10),
	@CandSfx varchar (10), @CandOff char (1), @CandStAbbr char (2), @CandDist tinyint, @PartyCd char (3), @PartyTp char (3),
	@PACTp char (1), @flgLobRegPAC_ConnOrg_5e bit, @flgLobRegPAC_MultCands_5f bit, @flgLdspPAC_5f bit, @AffCommID char (9),
	@AffCommNm varchar (200), @AffCandID char (9), @AffCandLName varchar (30), @AffCandFName varchar (20),
	@AffCandMName varchar (20), @AffCandPfx varchar (10), @AffCandSfx varchar (10), @AffAddr1 varchar(34), @AffAddr2 varchar(34),
	@AffCity varchar(30), @AffStAbbr char (2), @AffZip varchar (9), @AffRelCd char (3), @CustLName varchar (90),
	@CustFName varchar (20), @CustMName varchar (20), @CustPfx varchar (10), @CustSfx varchar (10), @CustAddr1 varchar(34),
	@CustAddr2 varchar(34), @CustCity varchar(30), @CustStAbbr char (2) = '', @CustZip varchar (9), @CustTitle varchar (20),
	@CustPhone varchar (10), @TrsLName varchar (90), @TrsFName varchar (20), @TrsMName varchar (20), @TrsPfx varchar (10),
	@TrsSfx varchar (10), @TrsAddr1 varchar(34), @TrsAddr2 varchar(34), @TrsCity varchar(30), @TrsStAbbr char (2), @TrsZip varchar (9),
	@TrsTitle varchar (20), @TrsPhone varchar (10), @AgtLName varchar (90), @AgtFName varchar (20), @AgtMName varchar (20),
	@AgtPfx varchar (10), @AgtSfx varchar (10), @AgtAddr1 varchar(34), @AgtAddr2 varchar(34), @AgtCity varchar(30),
	@AgtStAbbr char (2), @AgtZip varchar (9), @AgtTitle varchar(20), @AgtPhone varchar(10), @Bank1Nm varchar(200),
	@Bank1Addr1 varchar(34), @Bank1Addr2 varchar(34), @Bank1City varchar(30), @Bank1StAbbr char (2), @Bank1Zip varchar (9),
	@Bank2Nm varchar(200), @Bank2Addr1 varchar(34), @Bank2Addr2 varchar(34), @Bank2City varchar(30), @Bank2StAbbr char (2),
	@Bank2Zip varchar (9), @HdrVer decimal(3, 1), @SoftNm varchar(50), @SoftVer varchar(50),@RptID varchar(50), @RptNbr varchar(50),
	@HdrCmnt varchar(200))

AS

SET NOCOUNT ON

-- See if this file already has been imported
-- If so, return -1
IF EXISTS
	(SELECT ImageID
	FROM dbo.Form1
	WHERE ImageID = @ImageID)
	BEGIN
		SELECT -1;
		RETURN 0;
	END

-- Otherwise, get FormTpID, CommID, USATCandID, PtyID, PtyTpID, PACTp, USATAffCommID, USATAffCandID and AffRelID
-- and add any new values to the lookup tables

-- FormTpID
DECLARE @FormTpID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpFormTp
	WHERE FormTp = ISNULL(@FormTp, ''))

	BEGIN
		INSERT INTO lkpFormTp (FormTp)
		VALUES (@FormTp);
	END

SET @FormTpID = (SELECT USATID
	FROM lkpFormTp
	WHERE FormTp = ISNULL(@FormTp, ''));

-- USATCommID
DECLARE @USATCommID int
IF NOT EXISTS (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @CommID)

	BEGIN
		INSERT INTO lkpCommittees (FECCommID)
		VALUES (@CommID);
	END

SET @USATCommID = (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @CommID);

-- F1CommTpCd
IF NOT EXISTS (SELECT F1CommTpCd
	FROM lkpF1CommTp
	WHERE F1CommTpCd = ISNULL(@F1CommTpCd, ''))

	BEGIN
		INSERT INTO lkpF1CommTp (F1CommTpCd, F1CommTpDesc)
		VALUES (ISNULL(@F1CommTpCd, ''), 'Undefined');
	END

-- USATCandID
DECLARE @USATCandID int
IF NOT EXISTS (SELECT USATID
	FROM lkpCandidates
	WHERE FECCandID = ISNULL(@CandID, ''))

	BEGIN
		INSERT INTO lkpCandidates (FECCandID)
		VALUES (@CandID);
	END

SET @USATCandID = (SELECT USATID
	FROM lkpCandidates
	WHERE FECCandID = ISNULL(@CandID, ''));

-- PartyID
DECLARE @PartyID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpParties
	WHERE FECCode = ISNULL(@PartyCd, ''))

	BEGIN
		INSERT INTO lkpParties (FECCode, Party, Short)
		VALUES (@PartyCd, 'Undefined', 'O');
	END

SET @PartyID = (SELECT USATID
	FROM lkpParties
	WHERE FECCode = ISNULL(@PartyCd, ''));

-- PartyTpID
DECLARE @PartyTpID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpPartyTp
	WHERE PartyTpCd = ISNULL(@PartyTp, ''))

	BEGIN
		INSERT INTO lkpPartyTp (PartyTpCd)
		VALUES (@PartyTp);
	END

SET @PartyTpID = (SELECT USATID
	FROM lkpPartyTp
	WHERE PartyTpCd = ISNULL(@PartyTp, ''));

-- PACTp
IF NOT EXISTS (SELECT PACTpCd
	FROM lkpPACTp
	WHERE PACTpCd = ISNULL(@PACTp, ''))

	BEGIN
		INSERT INTO lkpPACTp (PACTpCd, PACTp)
		VALUES (ISNULL(@PACTp, ''), 'Undefined');
	END

-- USATAffCommID
DECLARE @USATAffCommID int
IF NOT EXISTS (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @AffCommID)

	BEGIN
		INSERT INTO lkpCommittees (FECCommID)
		VALUES (@AffCommID);
	END

SET @USATAffCommID = (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @AffCommID);

-- USATAffCandID
DECLARE @USATAffCandID int
IF NOT EXISTS (SELECT USATID
	FROM lkpCandidates
	WHERE FECCandID = ISNULL(@AffCandID, ''))

	BEGIN
		INSERT INTO lkpCandidates (FECCandID)
		VALUES (@AffCandID);
	END

SET @USATAffCandID = (SELECT USATID
	FROM lkpCandidates
	WHERE FECCandID = ISNULL(@AffCandID, ''));

-- AffRelID
DECLARE @AffRelID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpAffRel
	WHERE AffRelCd = ISNULL(@AffRelCd, ''))

	BEGIN
		INSERT INTO lkpAffRel (AffRelCd)
		VALUES (@AffRelCd);
	END

SET @AffRelID = (SELECT USATID
	FROM lkpAffRel
	WHERE AffRelCd = ISNULL(@AffRelCd, ''));


-- Insert the header
INSERT INTO dbo.Form1 (ImageID, FormTpID, CommID, flgChgCommNm, CommNm, flgAddrChg, Addr1, Addr2, City, StAbbr, Zip, flgChgCommEmail, CommEmail,
	flgChgCommUrl, CommUrl, SubmDt, SignLName, SignFName, SignMName, SignPfx, SignSfx, SignDt, F1CommTpCd, CandID, CandLName, CandFName,
	CandMName, CandPfx, CandSfx, CandOff, CandStAbbr, CandDist, PartyID, PartyTpID, PACTp, flgLobRegPAC_ConnOrg_5e, flgLobRegPAC_MultCands_5f,
	flgLdspPAC_5f, AffCommID, AffCommNm, AffCandID, AffCandLName, AffCandFName, AffCandMName, AffCandPfx, AffCandSfx, AffAddr1, AffAddr2,
	AffCity, AffStAbbr, AffZip, AffRelID, CustLName, CustFName, CustMName, CustPfx, CustSfx, CustAddr1, CustAddr2, CustCity, CustStAbbr,
	CustZip, CustTitle, CustPhone, TrsLName, TrsFName, TrsMName, TrsPfx, TrsSfx, TrsAddr1, TrsAddr2, TrsCity, TrsStAbbr, TrsZip, TrsTitle,
	TrsPhone, AgtLName, AgtFName, AgtMName, AgtPfx, AgtSfx, AgtAddr1, AgtAddr2, AgtCity, AgtStAbbr, AgtZip, AgtTitle, AgtPhone, Bank1Nm,
	Bank1Addr1, Bank1Addr2, Bank1City, Bank1StAbbr, Bank1Zip, Bank2Nm, Bank2Addr1, Bank2Addr2, Bank2City, Bank2StAbbr, Bank2Zip, HdrVer,
	SoftNm, SoftVer, RptID, RptNbr, HdrCmnt)
VALUES (@ImageID, @FormTpID, @USATCommID, @flgChgCommNm, @CommNm, @flgAddrChg, @Addr1, @Addr2, @City, @StAbbr, @Zip, @flgChgCommEmail, @CommEmail,
	@flgChgCommUrl, @CommUrl, @SubmDt, @SignLName, @SignFName, @SignMName, @SignPfx, @SignSfx, @SignDt, ISNULL(@F1CommTpCd, ''), @USATCandID, @CandLName,
	@CandFName, @CandMName, @CandPfx, @CandSfx, @CandOff, @CandStAbbr, @CandDist, @PartyID, @PartyTpID, ISNULL(@PACTp, ''), @flgLobRegPAC_ConnOrg_5e,
	@flgLobRegPAC_MultCands_5f, @flgLdspPAC_5f, @USATAffCommID, @AffCommNm, @USATAffCandID, @AffCandLName, @AffCandFName, @AffCandMName,
	@AffCandPfx, @AffCandSfx, @AffAddr1, @AffAddr2, @AffCity, @AffStAbbr, @AffZip, @AffRelID, @CustLName, @CustFName, @CustMName, @CustPfx,
	@CustSfx, @CustAddr1, @CustAddr2, @CustCity, @CustStAbbr, @CustZip, @CustTitle, @CustPhone, @TrsLName, @TrsFName, @TrsMName, @TrsPfx,
	@TrsSfx, @TrsAddr1, @TrsAddr2, @TrsCity, @TrsStAbbr, @TrsZip, @TrsTitle, @TrsPhone, @AgtLName, @AgtFName, @AgtMName, @AgtPfx, @AgtSfx,
	@AgtAddr1, @AgtAddr2, @AgtCity, @AgtStAbbr, @AgtZip, @AgtTitle, @AgtPhone, @Bank1Nm, @Bank1Addr1, @Bank1Addr2, @Bank1City, @Bank1StAbbr,
	@Bank1Zip, @Bank2Nm, @Bank2Addr1, @Bank2Addr2, @Bank2City, @Bank2StAbbr, @Bank2Zip, @HdrVer, @SoftNm, @SoftVer, @RptID, @RptNbr, @HdrCmnt);


-- Return value to show new header row added.
IF EXISTS
	(SELECT ImageID
	FROM dbo.Form1
	WHERE ImageID = @ImageID)
	BEGIN
		SELECT 1;
		RETURN 0;
	END



-- Return -2 if insert failed
SELECT -2;
RETURN 0;

SET NOCOUNT OFF












GO
/****** Object:  StoredProcedure [dbo].[usp_AddRptHdr_F3]    Script Date: 2/25/2015 1:01:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





-- This stored procedure adds a header row to RptHdrs_F3
-- It returns -1 if the report already exists in the database
CREATE PROC [dbo].[usp_AddRptHdr_F3] (@ImageID int, @FormTp char(3) = '', @FECCommID char(9), @CommNm varchar(200),
	@flgAddrChg bit, @Addr1 varchar(34), @Addr2 varchar(34), @City varchar(30), @StAbbr char(2) = '', @Zip varchar(9),
	@ElecSt char(2) = '', @ElecDist tinyint, @RptCd char(3) = '', @ElecCd varchar(5) = '', @ElecDt date, @StateOfElec char(2) = '',
	@CovgFmDate date, @CovgToDate date, @TrsLName varchar(95), @TrsFName varchar(20), @TrsMName varchar(20),
	@TrsPfx varchar(10), @TrsSfx varchar(10), @SignDt date, @TotConts_P_6a money, @TotContRfds_P_6b money, @NetConts_P_6c money, @TotOpExps_P_7a money, @TotOffsetOpExps_P_7b money,
	@NetOpExps_P_7c money, @CashClose_P_8 money, @DebtsTo_P_9 money, @DebtsBy_P_10 money, @IndContsItem_P_11a1 money,
	@IndContsUnitem_P_11a2 money, @IndContsTot_P_11a3 money, @PolPtyCommConts_P_11b money, @OthPolCommConts_P_11c money,
	@CandConts_P_11d money, @TotConts_P_11e money, @TranFmOthAuthComms_P_12 money, @CandLoans_P_13a money, @OthLoans_P_13b money,
	@TotLoans_P_13c money, @OffsetOpExps_P_14 money, @OthRcpts_P_15 money, @TotRcpts_P_16 money, @OpExps_P_17 money,
	@TranToOthAuthComms_P_18 money, @CandLoansRepaid_P_19a money, @OthLoansRepaid_P_19b money, @TotLoansRepaid_P_19c money,
	@RefundsInd_P_20a money, @RefundsPolPtyComms_P_20b money, @RefundsOthPolComms_P_20c money, @TotRefunds_P_20d money,
	@OthDisb_P_21 money, @TotDisb_P_22 money, @CashBegin_P_23 money, @TotRcpts_P_24 money, @Subtotal_P_25 money, @TotDisb_P_26 money,
	@CashClose_P_27 money, @TotConts_T_6a money, @TotContRfds_T_6b money, @NetConts_T_6c money, @TotOpExps_T_7a money,
	@TotOffsetOpExps_T_7b money, @NetOpExps_T_7c money, @IndContsItem_T_11a1 money, @IndContsUnitem_T_11a2 money,
	@IndContsTot_T_11a3 money, @PolPtyCommConts_T_11b money, @OthPolCommConts_T_11c money, @CandConts_T_11d money,
	@TotConts_T_11e money, @TranFmOthAuthComms_T_12 money, @CandLoans_T_13a money, @OthLoans_T_13b money, @TotLoans_T_13c money,
	@OffsetOpExps_T_14 money, @OthRcpts_T_15 money, @TotRcpts_T_16 money, @OpExps_T_17 money, @TranToOthAuthComms_T_18 money,
	@CandLoansRepaid_T_19a money, @OthLoansRepaid_T_19b money, @TotLoansRepaid_T_19c money, @RefundsInd_T_20a money,
	@RefundsPolPtyComms_T_20b money, @RefundsOthPolComms_T_20c money, @TotRefunds_T_20d money, @OthDisb_T_21 money, @TotDisb_T_22 money,
	@HdrVer decimal(3, 1), @SoftNm varchar(50), @SoftVer varchar(50),@RptID varchar(50), @RptNbr varchar(50), @HdrCmnt varchar(200))

AS

SET NOCOUNT ON

-- See if this file already has been imported
-- If so, return -1
IF EXISTS
	(SELECT ImageID
	FROM dbo.RptHdrs_F3
	WHERE ImageID = @ImageID)
	BEGIN
		SELECT -1;
		RETURN 0;
	END

-- Otherwise, get CommID, FormTpID, StateID, RptCdID, ElecCdID, ElecStateID and StateOfElecID
-- and add any new values to the lookup tables

-- CommID
DECLARE @CommID int
IF NOT EXISTS (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @FECCommID)

	BEGIN
		INSERT INTO lkpCommittees (FECCommID)
		VALUES (@FECCommID);
	END

SET @CommID = (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @FECCommID);

-- FormTpID
DECLARE @FormTpID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpFormTp
	WHERE FormTp = ISNULL(@FormTp, ''))

	BEGIN
		INSERT INTO lkpFormTp (FormTp)
		VALUES (@FormTp);
	END

SET @FormTpID = (SELECT USATID
	FROM lkpFormTp
	WHERE FormTp = ISNULL(@FormTp, ''));

-- RptPrdID
DECLARE @RptPrdID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpRptPrd
	WHERE RptPrdCd = ISNULL(@RptCd, ''))

	BEGIN
		INSERT INTO lkpRptPrd (RptPrdCd)
		VALUES (@RptCd);
	END

SET @RptPrdID = (SELECT USATID
	FROM lkpRptPrd
	WHERE RptPrdCd = ISNULL(@RptCd, ''));

-- ElecID
DECLARE @ElecID smallint
IF NOT EXISTS (SELECT USATID
	FROM lkpElec
	WHERE ElecCd = ISNULL(@ElecCd, ''))

	BEGIN
		INSERT INTO lkpElec (ElecCd)
		VALUES (@ElecCd);
	END

SET @ElecID = (SELECT USATID
	FROM lkpElec
	WHERE ElecCd = ISNULL(@ElecCd, ''));

-- Insert the header
INSERT INTO dbo.RptHdrs_F3 (ImageID, FormTpID, CommID, CommNm, flgAddrChg, Addr1, Addr2, City, StAbbr, Zip, ElecStAbbr, ElecDist, RptPrdID,
	ElecID, ElecDt, StOfElecAbbr, CovgFmDate, CovgToDate, TrsLName, TrsFName, TrsMName, TrsPfx, TrsSfx, SignDt, TotConts_P_6a,
	TotContRfds_P_6b, NetConts_P_6c, TotOpExps_P_7a, TotOffsetOpExps_P_7b, NetOpExps_P_7c, CashClose_P_8, DebtsTo_P_9, DebtsBy_P_10,
	IndContsItem_P_11a1, IndContsUnitem_P_11a2, IndContsTot_P_11a3, PolPtyCommConts_P_11b, OthPolCommConts_P_11c, CandConts_P_11d,
	TotConts_P_11e, TranFmOthAuthComms_P_12, CandLoans_P_13a, OthLoans_P_13b, TotLoans_P_13c, OffsetOpExps_P_14, OthRcpts_P_15,
	TotRcpts_P_16, OpExps_P_17, TranToOthAuthComms_P_18, CandLoansRepaid_P_19a, OthLoansRepaid_P_19b, TotLoansRepaid_P_19c,
	RefundsInd_P_20a, RefundsPolPtyComms_P_20b, RefundsOthPolComms_P_20c, TotRefunds_P_20d, OthDisb_P_21, TotDisb_P_22, CashBegin_P_23,
	TotRcpts_P_24, Subtotal_P_25, TotDisb_P_26, CashClose_P_27, TotConts_T_6a, TotContRfds_T_6b, NetConts_T_6c, TotOpExps_T_7a,
	TotOffsetOpExps_T_7b, NetOpExps_T_7c, IndContsItem_T_11a1, IndContsUnitem_T_11a2, IndContsTot_T_11a3, PolPtyCommConts_T_11b,
	OthPolCommConts_T_11c, CandConts_T_11d, TotConts_T_11e, TranFmOthAuthComms_T_12, CandLoans_T_13a, OthLoans_T_13b, TotLoans_T_13c,
	OffsetOpExps_T_14, OthRcpts_T_15, TotRcpts_T_16, OpExps_T_17, TranToOthAuthComms_T_18, CandLoansRepaid_T_19a, OthLoansRepaid_T_19b,
	TotLoansRepaid_T_19c, RefundsInd_T_20a, RefundsPolPtyComms_T_20b, RefundsOthPolComms_T_20c, TotRefunds_T_20d, OthDisb_T_21,
	TotDisb_T_22, HdrVer, SoftNm, SoftVer, RptID, RptNbr, HdrCmnt)
VALUES (@ImageID, @FormTpID, @CommID, @CommNm, @flgAddrChg, @Addr1, @Addr2, @City, @StAbbr, @Zip, @ElecSt, @ElecDist, @RptPrdID, @ElecID,
	@ElecDt, @StateOfElec, @CovgFmDate, @CovgToDate, @TrsLName, @TrsFName, @TrsMName, @TrsPfx, @TrsSfx, @SignDt, @TotConts_P_6a,
	@TotContRfds_P_6b, @NetConts_P_6c, @TotOpExps_P_7a, @TotOffsetOpExps_P_7b, @NetOpExps_P_7c, @CashClose_P_8, @DebtsTo_P_9,
	@DebtsBy_P_10, @IndContsItem_P_11a1, @IndContsUnitem_P_11a2, @IndContsTot_P_11a3, @PolPtyCommConts_P_11b, @OthPolCommConts_P_11c,
	@CandConts_P_11d, @TotConts_P_11e, @TranFmOthAuthComms_P_12, @CandLoans_P_13a, @OthLoans_P_13b, @TotLoans_P_13c, @OffsetOpExps_P_14,
	@OthRcpts_P_15, @TotRcpts_P_16, @OpExps_P_17, @TranToOthAuthComms_P_18, @CandLoansRepaid_P_19a, @OthLoansRepaid_P_19b,
	@TotLoansRepaid_P_19c, @RefundsInd_P_20a, @RefundsPolPtyComms_P_20b, @RefundsOthPolComms_P_20c, @TotRefunds_P_20d, @OthDisb_P_21,
	@TotDisb_P_22, @CashBegin_P_23, @TotRcpts_P_24, @Subtotal_P_25, @TotDisb_P_26, @CashClose_P_27, @TotConts_T_6a, @TotContRfds_T_6b,
	@NetConts_T_6c, @TotOpExps_T_7a, @TotOffsetOpExps_T_7b, @NetOpExps_T_7c, @IndContsItem_T_11a1, @IndContsUnitem_T_11a2,
	@IndContsTot_T_11a3, @PolPtyCommConts_T_11b, @OthPolCommConts_T_11c, @CandConts_T_11d, @TotConts_T_11e, @TranFmOthAuthComms_T_12,
	@CandLoans_T_13a, @OthLoans_T_13b, @TotLoans_T_13c, @OffsetOpExps_T_14, @OthRcpts_T_15, @TotRcpts_T_16, @OpExps_T_17,
	@TranToOthAuthComms_T_18, @CandLoansRepaid_T_19a, @OthLoansRepaid_T_19b, @TotLoansRepaid_T_19c, @RefundsInd_T_20a,
	@RefundsPolPtyComms_T_20b, @RefundsOthPolComms_T_20c, @TotRefunds_T_20d, @OthDisb_T_21, @TotDisb_T_22, @HdrVer, @SoftNm, @SoftVer,
	@RptID, @RptNbr, @HdrCmnt);

-- Return value to show new header row added.
IF EXISTS
	(SELECT ImageID
	FROM dbo.RptHdrs_F3
	WHERE ImageID = @ImageID)
	BEGIN
		SELECT 1;
		RETURN 0;
	END



-- Return -2 if insert failed
SELECT -2;
RETURN 0;

SET NOCOUNT OFF










GO
/****** Object:  StoredProcedure [dbo].[usp_AddRptHdr_F3L]    Script Date: 2/25/2015 1:01:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








-- This stored procedure adds a header row to RptHdrs_F3L
-- It returns -1 if the report already exists in the database
CREATE PROC [dbo].[usp_AddRptHdr_F3L] (@ImageID int, @FormTp char(4) = '', @FECCommID char(9), @CommNm varchar(200),
	@flgAddrChg bit, @Addr1 varchar(34), @Addr2 varchar(34), @City varchar(30), @StAbbr char(2) = '', @Zip varchar(9),
	@ElecSt char(2) = '', @ElecDist tinyint, @RptCd char(3) = '', @ElecDt date, @StateOfElec char(2) = '',
	@flgInclSemiAnnPrd bit, @CovgFmDate date, @CovgToDate date, @flgInclSemiAnnJanJun bit, @flgInclSemiAnnJulDec bit,
	@TotRptBundContribs money, @SemiAnnBundContribs money, @TrsLName varchar(95), @TrsFName varchar(20), @TrsMName varchar(20),
	@TrsPfx varchar(10), @TrsSfx varchar(10), @SignDt date,
	@HdrVer decimal(3, 1), @SoftNm varchar(50), @SoftVer varchar(50),@RptID varchar(50), @RptNbr varchar(50), @HdrCmnt varchar(200))

AS

SET NOCOUNT ON

-- See if this file already has been imported
-- If so, return -1
IF EXISTS
	(SELECT ImageID
	FROM dbo.RptHdrs_F3L
	WHERE ImageID = @ImageID)
	BEGIN
		SELECT -1;
		RETURN 0;
	END

-- Otherwise, get CommID, FormTpID and RptCdID
-- and add any new values to the lookup tables

-- CommID
DECLARE @CommID int
IF NOT EXISTS (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @FECCommID)

	BEGIN
		INSERT INTO lkpCommittees (FECCommID)
		VALUES (@FECCommID);
	END

SET @CommID = (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @FECCommID);

-- FormTpID
DECLARE @FormTpID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpFormTp
	WHERE FormTp = ISNULL(@FormTp, ''))

	BEGIN
		INSERT INTO lkpFormTp (FormTp)
		VALUES (@FormTp);
	END

SET @FormTpID = (SELECT USATID
	FROM lkpFormTp
	WHERE FormTp = ISNULL(@FormTp, ''));

-- RptPrdID
DECLARE @RptPrdID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpRptPrd
	WHERE RptPrdCd = ISNULL(@RptCd, ''))

	BEGIN
		INSERT INTO lkpRptPrd (RptPrdCd)
		VALUES (@RptCd);
	END

SET @RptPrdID = (SELECT USATID
	FROM lkpRptPrd
	WHERE RptPrdCd = ISNULL(@RptCd, ''));

-- Insert the header
INSERT INTO dbo.RptHdrs_F3L (ImageID, FormTpID, CommID, CommNm, flgAddrChg, Addr1, Addr2, City, StAbbr, Zip, ElecStAbbr, ElecDist,
	RptPrdID, ElecDt, StOfElecAbbr, flgInclSemiAnnPrd, CovgFmDate, CovgToDate, flgInclSemiAnnJanJun, flgInclSemiAnnJulDec,
	TotRptBundContribs, SemiAnnBundContribs, TrsLName, TrsFName, TrsMName, TrsPfx, TrsSfx, SignDt, HdrVer, SoftNm, SoftVer, RptID,
	RptNbr, HdrCmnt)
VALUES (@ImageID, @FormTpID, @CommID, @CommNm, @flgAddrChg, @Addr1, @Addr2, @City, @StAbbr, @Zip, @ElecSt, @ElecDist, @RptPrdID,
	@ElecDt, @StateOfElec, @flgInclSemiAnnPrd, @CovgFmDate, @CovgToDate, @flgInclSemiAnnJanJun, @flgInclSemiAnnJulDec,
	@TotRptBundContribs, @SemiAnnBundContribs, @TrsLName, @TrsFName, @TrsMName, @TrsPfx, @TrsSfx, @SignDt, @HdrVer, @SoftNm, @SoftVer,
	@RptID, @RptNbr, @HdrCmnt);

-- Return value to show new header row added.
IF EXISTS
	(SELECT ImageID
	FROM dbo.RptHdrs_F3L
	WHERE ImageID = @ImageID)
	BEGIN
		SELECT 1;
		RETURN 0;
	END



-- Return -2 if insert failed
SELECT -2;
RETURN 0;

SET NOCOUNT OFF






GO
/****** Object:  StoredProcedure [dbo].[usp_AddRptHdr_F3P]    Script Date: 2/25/2015 1:01:44 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE PROC [dbo].[usp_AddRptHdr_F3P] (@ImageID int, @FormTp char(4) = '', @FECCommID char(9), @CommNm varchar(200),
	@flgAddrChg bit, @Addr1 varchar(34), @Addr2 varchar(34), @City varchar(30), @StAbbr char(2) = '', @Zip varchar(9),
	@flgPrimElec bit, @flgGenElec bit, @RptCd char(4) = '', @ElecCd varchar(5) = '', @ElecDt date, @ElecSt char(2) = '',
	@CovgFmDate date, @CovgToDate date, @TrsLName varchar(95), @TrsFName varchar(20), @TrsMName varchar(20),
	@TrsPfx varchar(10), @TrsSfx varchar(10), @SignDt date, @CashBegin_P_6 money,
	@TotRcpts_P_7 money, @Subtotal_P_8 money, @TotDisb_P_9 money, @CashClose_P_10 money, @DebtsTo_P_11 money, @DebtsBy_P_12 money,
	@LmtdExps_P_13 money, @NetConts_P_14 money, @NetOpExps_P_15 money, @FedFnds_P_16 money, @IndContsItem_P_17a1 money,
	@IndContsUnitem_P_17a2 money, @IndContsTot_P_17a3 money, @PolPtyCommConts_P_17b money, @OthPolCommConts_P_17c money,
	@CandConts_P_17d money, @TotConts_P_17e money, @TranFmPtyComms_P_18 money, @CandLoans_P_19a money, @OthLoans_P_19b money,
	@TotLoans_P_19c money, @OptgOffsets_P_20a money, @FndrsgOffsets_P_20b money, @LegalAcctgOffsets_P_20c money, @TotOffsets_P_20d money,
	@OthRcpts_P_21 money, @TotRcpts_P_22 money, @OpExps_P_23 money, @TranToOthAuthComms_P_24 money, @FndrsgDisb_P_25 money,
	@LegalAcctgDisb_P_26 money, @CandLoansRepaid_P_27a money, @OthLoansRepaid_P_27b money, @TotLoansRepaid_P_27c money,
	@RefundsInd_P_28a money, @RefundsPolPtyComms_P_28b money, @RefundsOthPolComms_P_28c money, @TotRefunds_P_28d money,
	@OthDisb_P_29 money, @TotDisb_P_30 money, @ItmsToBeLiq_P_31 money, @Alabama_P money, @Alaska_P money, @Arizona_P money,
	@Arkansas_P money, @California_P money, @Colorado_P money, @Connecticut_P money, @Delaware_P money, @DistCol_P money,
	@Florida_P money, @Georgia_P money, @Hawaii_P money, @Idaho_P money, @Illinois_P money, @Indiana_P money, @Iowa_P money,
	@Kansas_P money, @Kentucky_P money, @Louisiana_P money, @Maine_P money, @Maryland_P money, @Massachusetts_P money,
	@Michigan_P money, @Minnesota_P money, @Mississippi_P money, @Missouri_P money, @Montana_P money, @Nebraska_P money,
	@Nevada_P money, @NewHampshire_P money, @NewJersey_P money, @NewMexico_P money, @NewYork_P money, @NorthCarolina_P money,
	@NorthDakota_P money, @Ohio_P money, @Oklahoma_P money, @Oregon_P money, @Pennsylvania_P money, @RhodeIsland_P money,
	@SouthCarolina_P money, @SouthDakota_P money, @Tennessee_P money, @Texas_P money, @Utah_P money, @Vermont_P money,
	@Virginia_P money, @Washington_P money, @WestVirginia_P money, @Wisconsin_P money, @Wyoming_P money, @PuertoRico_P money,
	@Guam_P money, @VirginIslands_P money, @TotAllocs_P money, @FedFnds_T_16 money, @IndContsItem_T_17a1 money,
	@IndContsUnitem_T_17a2 money, @IndContsTot_T_17a3 money, @PolPtyCommConts_T_17b money, @OthPolCommConts_T_17c money,
	@CandConts_T_17d money, @TotConts_T_17e money, @TranFmPtyComms_T_18 money, @CandLoans_T_19a money, @OthLoans_T_19b money,
	@TotLoans_T_19c money, @OptgOffsets_T_20a money, @FndrsgOffsets_T_20b money, @LegalAcctgOffsets_T_20c money, @TotOffsets_T_20d money,
	@OthRcpts_T_21 money, @TotRcpts_T_22 money, @OpExps_T_23 money, @TranToOthAuthComms_T_24 money, @FndrsgDisb_T_25 money,
	@LegalAcctgDisb_T_26 money, @CandLoansRepaid_T_27a money, @OthLoansRepaid_T_27b money, @TotLoansRepaid_T_27c money,
	@RefundsInd_T_28a money, @RefundsPolPtyComms_T_28b money, @RefundsOthPolComms_T_28c money, @TotRefunds_T_28d money,
	@OthDisb_T_29 money, @TotDisb_T_30 money, @Alabama_T money, @Alaska_T money, @Arizona_T money, @Arkansas_T money, @California_T money,
	@Colorado_T money, @Connecticut_T money, @Delaware_T money, @DistCol_T money, @Florida_T money, @Georgia_T money, @Hawaii_T money,
	@Idaho_T money, @Illinois_T money, @Indiana_T money, @Iowa_T money, @Kansas_T money, @Kentucky_T money, @Louisiana_T money,
	@Maine_T money, @Maryland_T money, @Massachusetts_T money, @Michigan_T money, @Minnesota_T money, @Mississippi_T money,
	@Missouri_T money, @Montana_T money, @Nebraska_T money, @Nevada_T money, @NewHampshire_T money, @NewJersey_T money, @NewMexico_T money,
	@NewYork_T money, @NorthCarolina_T money, @NorthDakota_T money, @Ohio_T money, @Oklahoma_T money, @Oregon_T money,
	@Pennsylvania_T money, @RhodeIsland_T money, @SouthCarolina_T money, @SouthDakota_T money, @Tennessee_T money, @Texas_T money,
	@Utah_T money, @Vermont_T money, @Virginia_T money, @Washington_T money, @WestVirginia_T money, @Wisconsin_T money, @Wyoming_T money,
	@PuertoRico_T money, @Guam_T money, @VirginIslands_T money, @TotAllocs_T money, @HdrVer decimal(3, 1), @SoftNm varchar(50),
	@SoftVer varchar(50), @RptID varchar(50), @RptNbr varchar(50), @HdrCmnt varchar(200))

AS

SET NOCOUNT ON

-- See if this file already has been imported
-- If so, return -1
IF EXISTS
	(SELECT ImageID
	FROM dbo.RptHdrs_F3P
	WHERE ImageID = @ImageID)
	BEGIN
		SELECT -1;
		RETURN 0;
	END

-- Otherwise, get CommID, FormTpID, StateID, RptCdID, ElecCdID and ElecStateID
-- and add any new values to the lookup tables

-- CommID
DECLARE @CommID int
IF NOT EXISTS (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @FECCommID)

	BEGIN
		INSERT INTO lkpCommittees (FECCommID)
		VALUES (@FECCommID);
	END

SET @CommID = (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @FECCommID);

-- FormTpID
DECLARE @FormTpID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpFormTp
	WHERE FormTp = ISNULL(@FormTp, ''))

	BEGIN
		INSERT INTO lkpFormTp (FormTp)
		VALUES (@FormTp);
	END

SET @FormTpID = (SELECT USATID
	FROM lkpFormTp
	WHERE FormTp = ISNULL(@FormTp, ''));

-- RptPrdID
DECLARE @RptPrdID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpRptPrd
	WHERE RptPrdCd = ISNULL(@RptCd, ''))

	BEGIN
		INSERT INTO lkpRptPrd (RptPrdCd)
		VALUES (@RptCd);
	END

SET @RptPrdID = (SELECT USATID
	FROM lkpRptPrd
	WHERE RptPrdCd = ISNULL(@RptCd, ''));

-- ElecID
DECLARE @ElecID smallint
IF NOT EXISTS (SELECT USATID
	FROM lkpElec
	WHERE ElecCd = ISNULL(@ElecCd, ''))

	BEGIN
		INSERT INTO lkpElec (ElecCd)
		VALUES (@ElecCd);
	END

SET @ElecID = (SELECT USATID
	FROM lkpElec
	WHERE ElecCd = ISNULL(@ElecCd, ''));

-- Insert the header
INSERT INTO dbo.RptHdrs_F3P (ImageID, FormTpID, CommID, CommNm, flgAddrChg, Addr1, Addr2, City, StAbbr, Zip, flgPrimElec, flgGenElec, RptPrdID, ElecID,
		ElecDt, ElecStAbbr, CovgFmDate, CovgToDate, TrsLName, TrsFName, TrsMName, TrsPfx, TrsSfx, SignDt, CashBegin_P_6, TotRcpts_P_7,
		Subtotal_P_8, TotDisb_P_9, CashClose_P_10, DebtsTo_P_11, DebtsBy_P_12, LmtdExps_P_13, NetConts_P_14, NetOpExps_P_15, FedFnds_P_16,
		IndContsItem_P_17a1, IndContsUnitem_P_17a2, IndContsTot_P_17a3, PolPtyCommConts_P_17b, OthPolCommConts_P_17c, CandConts_P_17d,
		TotConts_P_17e, TranFmPtyComms_P_18, CandLoans_P_19a, OthLoans_P_19b, TotLoans_P_19c, OptgOffsets_P_20a, FndrsgOffsets_P_20b,
		LegalAcctgOffsets_P_20c, TotOffsets_P_20d, OthRcpts_P_21, TotRcpts_P_22, OpExps_P_23, TranToOthAuthComms_P_24, FndrsgDisb_P_25,
		LegalAcctgDisb_P_26, CandLoansRepaid_P_27a, OthLoansRepaid_P_27b, TotLoansRepaid_P_27c, RefundsInd_P_28a, RefundsPolPtyComms_P_28b,
		RefundsOthPolComms_P_28c, TotRefunds_P_28d, OthDisb_P_29, TotDisb_P_30, ItmsToBeLiq_P_31, Alabama_P, Alaska_P, Arizona_P,
		Arkansas_P, California_P, Colorado_P, Connecticut_P, Delaware_P, DistCol_P, Florida_P, Georgia_P, Hawaii_P, Idaho_P, Illinois_P,
		Indiana_P, Iowa_P, Kansas_P, Kentucky_P, Louisiana_P, Maine_P, Maryland_P, Massachusetts_P, Michigan_P, Minnesota_P, Mississippi_P,
		Missouri_P, Montana_P, Nebraska_P, Nevada_P, NewHampshire_P, NewJersey_P, NewMexico_P, NewYork_P, NorthCarolina_P, NorthDakota_P,
		Ohio_P, Oklahoma_P, Oregon_P, Pennsylvania_P, RhodeIsland_P, SouthCarolina_P, SouthDakota_P, Tennessee_P, Texas_P, Utah_P,
		Vermont_P, Virginia_P, Washington_P, WestVirginia_P, Wisconsin_P, Wyoming_P, PuertoRico_P, Guam_P, VirginIslands_P, TotAllocs_P,
		FedFnds_T_16, IndContsItem_T_17a1, IndContsUnitem_T_17a2, IndContsTot_T_17a3, PolPtyCommConts_T_17b, OthPolCommConts_T_17c,
		CandConts_T_17d, TotConts_T_17e, TranFmPtyComms_T_18, CandLoans_T_19a, OthLoans_T_19b, TotLoans_T_19c, OptgOffsets_T_20a,
		FndrsgOffsets_T_20b, LegalAcctgOffsets_T_20c, TotOffsets_T_20d, OthRcpts_T_21, TotRcpts_T_22, OpExps_T_23, TranToOthAuthComms_T_24,
		FndrsgDisb_T_25, LegalAcctgDisb_T_26, CandLoansRepaid_T_27a, OthLoansRepaid_T_27b, TotLoansRepaid_T_27c, RefundsInd_T_28a,
		RefundsPolPtyComms_T_28b, RefundsOthPolComms_T_28c, TotRefunds_T_28d, OthDisb_T_29, TotDisb_T_30, Alabama_T, Alaska_T, Arizona_T,
		Arkansas_T, California_T, Colorado_T, Connecticut_T, Delaware_T, DistCol_T, Florida_T, Georgia_T, Hawaii_T, Idaho_T, Illinois_T,
		Indiana_T, Iowa_T, Kansas_T, Kentucky_T, Louisiana_T, Maine_T, Maryland_T, Massachusetts_T, Michigan_T, Minnesota_T, Mississippi_T,
		Missouri_T, Montana_T, Nebraska_T, Nevada_T, NewHampshire_T, NewJersey_T, NewMexico_T, NewYork_T, NorthCarolina_T, NorthDakota_T,
		Ohio_T, Oklahoma_T, Oregon_T, Pennsylvania_T, RhodeIsland_T, SouthCarolina_T, SouthDakota_T, Tennessee_T, Texas_T, Utah_T,
		Vermont_T, Virginia_T, Washington_T, WestVirginia_T, Wisconsin_T, Wyoming_T, PuertoRico_T, Guam_T, VirginIslands_T, TotAllocs_T,
		HdrVer, SoftNm, SoftVer, RptID, RptNbr, HdrCmnt)
VALUES (@ImageID, @FormTpID, @CommID, @CommNm, @flgAddrChg, @Addr1, @Addr2, @City, @StAbbr, @Zip, @flgPrimElec, @flgGenElec, @RptPrdID, @ElecID, @ElecDt,
		@ElecSt, @CovgFmDate, @CovgToDate, @TrsLName, @TrsFName, @TrsMName, @TrsPfx, @TrsSfx, @SignDt, @CashBegin_P_6, @TotRcpts_P_7,
		@Subtotal_P_8, @TotDisb_P_9, @CashClose_P_10, @DebtsTo_P_11, @DebtsBy_P_12, @LmtdExps_P_13, @NetConts_P_14, @NetOpExps_P_15,
		@FedFnds_P_16, @IndContsItem_P_17a1, @IndContsUnitem_P_17a2, @IndContsTot_P_17a3, @PolPtyCommConts_P_17b, @OthPolCommConts_P_17c,
		@CandConts_P_17d, @TotConts_P_17e, @TranFmPtyComms_P_18, @CandLoans_P_19a, @OthLoans_P_19b, @TotLoans_P_19c, @OptgOffsets_P_20a,
		@FndrsgOffsets_P_20b, @LegalAcctgOffsets_P_20c, @TotOffsets_P_20d, @OthRcpts_P_21, @TotRcpts_P_22, @OpExps_P_23,
		@TranToOthAuthComms_P_24, @FndrsgDisb_P_25, @LegalAcctgDisb_P_26, @CandLoansRepaid_P_27a, @OthLoansRepaid_P_27b,
		@TotLoansRepaid_P_27c, @RefundsInd_P_28a, @RefundsPolPtyComms_P_28b, @RefundsOthPolComms_P_28c, @TotRefunds_P_28d, @OthDisb_P_29,
		@TotDisb_P_30, @ItmsToBeLiq_P_31, @Alabama_P, @Alaska_P, @Arizona_P, @Arkansas_P, @California_P, @Colorado_P, @Connecticut_P,
		@Delaware_P, @DistCol_P, @Florida_P, @Georgia_P, @Hawaii_P, @Idaho_P, @Illinois_P, @Indiana_P, @Iowa_P, @Kansas_P, @Kentucky_P,
		@Louisiana_P, @Maine_P, @Maryland_P, @Massachusetts_P, @Michigan_P, @Minnesota_P, @Mississippi_P, @Missouri_P, @Montana_P,
		@Nebraska_P, @Nevada_P, @NewHampshire_P, @NewJersey_P, @NewMexico_P, @NewYork_P, @NorthCarolina_P, @NorthDakota_P, @Ohio_P,
		@Oklahoma_P, @Oregon_P, @Pennsylvania_P, @RhodeIsland_P, @SouthCarolina_P, @SouthDakota_P, @Tennessee_P, @Texas_P, @Utah_P,
		@Vermont_P, @Virginia_P, @Washington_P, @WestVirginia_P, @Wisconsin_P, @Wyoming_P, @PuertoRico_P, @Guam_P, @VirginIslands_P,
		@TotAllocs_P, @FedFnds_T_16, @IndContsItem_T_17a1, @IndContsUnitem_T_17a2, @IndContsTot_T_17a3, @PolPtyCommConts_T_17b,
		@OthPolCommConts_T_17c, @CandConts_T_17d, @TotConts_T_17e, @TranFmPtyComms_T_18, @CandLoans_T_19a, @OthLoans_T_19b,
		@TotLoans_T_19c, @OptgOffsets_T_20a, @FndrsgOffsets_T_20b, @LegalAcctgOffsets_T_20c, @TotOffsets_T_20d, @OthRcpts_T_21,
		@TotRcpts_T_22, @OpExps_T_23, @TranToOthAuthComms_T_24, @FndrsgDisb_T_25, @LegalAcctgDisb_T_26, @CandLoansRepaid_T_27a,
		@OthLoansRepaid_T_27b, @TotLoansRepaid_T_27c, @RefundsInd_T_28a, @RefundsPolPtyComms_T_28b, @RefundsOthPolComms_T_28c,
		@TotRefunds_T_28d, @OthDisb_T_29, @TotDisb_T_30, @Alabama_T, @Alaska_T, @Arizona_T, @Arkansas_T, @California_T, @Colorado_T,
		@Connecticut_T, @Delaware_T, @DistCol_T, @Florida_T, @Georgia_T, @Hawaii_T, @Idaho_T, @Illinois_T, @Indiana_T, @Iowa_T, @Kansas_T,
		@Kentucky_T, @Louisiana_T, @Maine_T, @Maryland_T, @Massachusetts_T, @Michigan_T, @Minnesota_T, @Mississippi_T, @Missouri_T,
		@Montana_T, @Nebraska_T, @Nevada_T, @NewHampshire_T, @NewJersey_T, @NewMexico_T, @NewYork_T, @NorthCarolina_T, @NorthDakota_T,
		@Ohio_T, @Oklahoma_T, @Oregon_T, @Pennsylvania_T, @RhodeIsland_T, @SouthCarolina_T, @SouthDakota_T, @Tennessee_T, @Texas_T,
		@Utah_T, @Vermont_T, @Virginia_T, @Washington_T, @WestVirginia_T, @Wisconsin_T, @Wyoming_T, @PuertoRico_T, @Guam_T,
		@VirginIslands_T, @TotAllocs_T, @HdrVer, @SoftNm, @SoftVer, @RptID, @RptNbr, @HdrCmnt);

-- Return value to show new header row added.
IF EXISTS
	(SELECT ImageID
	FROM dbo.RptHdrs_F3P
	WHERE ImageID = @ImageID)
	BEGIN
		SELECT 1;
		RETURN 0;
	END

-- Return -2 if insert failed
SELECT -2;
RETURN 0;



SET NOCOUNT OFF














GO
/****** Object:  StoredProcedure [dbo].[usp_AddRptHdr_F3X]    Script Date: 2/25/2015 1:01:45 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





-- This stored procedure adds a header row to RptHdrs_F3X
-- It returns -1 if the report already exists in the database
CREATE PROC [dbo].[usp_AddRptHdr_F3X] (@ImageID int, @FormTp char(4) = '', @FECCommID char(9), @CommNm varchar(200),
	@flgAddrChg bit, @Addr1 varchar(34), @Addr2 varchar(34), @City varchar(30), @StAbbr char(2) = '',
	@Zip varchar(9), @RptCd char(4) = '', @ElecCd varchar(5) = '', @ElecDt date, @ElecSt char(2) = '',
	@CovgFmDate date, @CovgToDate date, @flgQualComm bit, @TrsLName varchar(95), @TrsFName varchar(20), @TrsMName varchar(20),
	@TrsPfx varchar(10), @TrsSfx varchar(10), @SignDt date, @CashBegin_P_6b money, @TotRcpts_P_6c money, @Subtotal_P_6d money,
	@TotDisb_P_7 money, @CashClose_P_8 money, @DebtsTo_P_9 money, @DebtsBy_P_10 money, @IndContsItem_P_11a1 money,
	@IndContsUnitem_P_11a2 money, @IndContsTot_P_11a3 money, @PolPtyCommConts_P_11b money, @OthPolCommConts_P_11c money,
	@TotConts_P_11d money, @TranFmPtyComms_P_12 money, @AllLoansRcvd_P_13 money, @LoanPymtsRcvd_P_14 money, @RefundOffsets_P_15 money,
	@RefundsFedConts_P_16 money, @OthFedRcptsDvds_P_17 money, @TranFmNonFedAcctH3_P_18a money, @TranFmNonFedAcctH5_P_18b money,
	@TotNonFedTrans_P_18c money, @TotRcpts_P_19 money, @TotFedRcpts_P_20 money, @OpExpsFedShr_P_21a1 money, @OpExpsNonFedShr_P_21a2 money,
	@OpExpsOthFed_P_21b money, @TotOpExps_P_21c money, @TranToPtyComms_P_22 money, @ContsToFedCandsComms_P_23 money, @IndtExps_P_24 money,
	@CoordExpsByPtyComms_P_25 money, @LoansRepaid_P_26 money, @LoansMade_P_27 money, @RefundsInd_P_28a money,
	@RefundsPolPtyComms_P_28b money, @RefundsOthPolComms_P_28c money, @TotContRefunds_P_28d money, @OthDisb_P_29 money,
	@ShrdElecActivityFedShr_P_30a1 money, @ShrdElecActivityNonFedShr_P_30a2 money, @NonAllocFedElecActivity_P_30b money,
	@TotFedElecActivity_P_30c money, @TotDisb_P_31 money, @TotFedDisb_P_32 money, @TotConts_P_33 money, @TotContRefunds_P_34 money,
	@NetConts_P_35 money, @TotFedOpExps_P_36 money, @TotOffsetsOpExp_P_37 money, @NetOpExps_P_38 money, @CashBegin_T_6a money,
	@CashBeginYr money, @TotRcpts_T_6c money, @Subtotal_T_6d money, @TotDisb_T_7 money, @CashClose_T_8 money, @IndContsItem_T_11a1 money,
	@IndContsUnitem_T_11a2 money, @IndContsTot_T_11a3 money, @PolPtyCommConts_T_11b money, @OthPolCommConts_T_11c money,
	@TotConts_T_11d money, @TranFmPtyComms_T_12 money, @AllLoansRcvd_T_13 money, @LoanPymtsRcvd_T_14 money, @RefundOffsets_T_15 money,
	@RefundsFedConts_T_16 money, @OthFedRcptsDvds_T_17 money, @TranFmNonFedAcctH3_T_18a money, @TranFmNonFedAcctH5_T_18b money,
	@TotNonFedTrans_T_18c money, @TotRcpts_T_19 money, @TotFedRcpts_T_20 money, @OpExpsFedShr_T_21a1 money, @OpExpsNonFedShr_T_21a2 money,
	@OpExpsOthFed_T_21b money, @TotOpExps_T_21c money, @TranToPtyComms_T_22 money, @ContsToFedCandsComms_T_23 money, @IndtExps_T_24 money,
	@CoordExpsByPtyComms_T_25 money, @LoansRepaid_T_26 money, @LoansMade_T_27 money, @RefundsInd_T_28a money,
	@RefundsPolPtyComms_T_28b money, @RefundsOthPolComms_T_28c money, @TotContRefunds_T_28d money, @OthDisb_T_29 money,
	@ShrdElecActivityFedShr_T_30a1 money, @ShrdElecActivityNonFedShr_T_30a2 money, @NonAllocFedElecActivity_T_30b money,
	@TotFedElecActivity_T_30c money, @TotDisb_T_31 money, @TotFedDisb_T_32 money, @TotConts_T_33 money, @TotContRefunds_T_34 money,
	@NetConts_T_35 money, @TotFedOpExps_T_36 money, @TotOffsetsOpExp_T_37 money, @NetOpExps_T_38 money, @HdrVer decimal(3, 1),
	@SoftNm varchar(50), @SoftVer varchar(50), @RptID varchar(50), @RptNbr varchar(50), @HdrCmnt varchar(200))

AS

SET NOCOUNT ON

-- See if this file already has been imported
-- If so, return -1
IF EXISTS
	(SELECT ImageID
	FROM dbo.RptHdrs_F3X
	WHERE ImageID = @ImageID)
	BEGIN
		SELECT -1;
		RETURN 0;
	END

-- Otherwise, get CommID, FormTpID, StateID, RptCdID, ElecCdID and ElecStateID
-- and add any new values to the lookup tables

-- CommID
DECLARE @CommID int
IF NOT EXISTS (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @FECCommID)

	BEGIN
		INSERT INTO lkpCommittees (FECCommID)
		VALUES (@FECCommID);
	END

SET @CommID = (SELECT USATID
	FROM lkpCommittees
	WHERE FECCommID = @FECCommID);

-- FormTpID
DECLARE @FormTpID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpFormTp
	WHERE FormTp = ISNULL(@FormTp, ''))

	BEGIN
		INSERT INTO lkpFormTp (FormTp)
		VALUES (@FormTp);
	END

SET @FormTpID = (SELECT USATID
	FROM lkpFormTp
	WHERE FormTp = ISNULL(@FormTp, ''));

-- RptPrdID
DECLARE @RptPrdID tinyint
IF NOT EXISTS (SELECT USATID
	FROM lkpRptPrd
	WHERE RptPrdCd = ISNULL(@RptCd, ''))

	BEGIN
		INSERT INTO lkpRptPrd (RptPrdCd)
		VALUES (@RptCd);
	END

SET @RptPrdID = (SELECT USATID
	FROM lkpRptPrd
	WHERE RptPrdCd = ISNULL(@RptCd, ''));

-- ElecID
DECLARE @ElecID smallint
IF NOT EXISTS (SELECT USATID
	FROM lkpElec
	WHERE ElecCd = ISNULL(@ElecCd, ''))

	BEGIN
		INSERT INTO lkpElec (ElecCd)
		VALUES (@ElecCd);
	END

SET @ElecID = (SELECT USATID
	FROM lkpElec
	WHERE ElecCd = ISNULL(@ElecCd, ''));

-- Insert the header
INSERT INTO dbo.RptHdrs_F3X (ImageID, FormTpID, CommID, CommNm, flgAddrChg, Addr1, Addr2, City, StAbbr, Zip, RptPrdID, ElecId, ElecDt,
	ElecStAbbr, CovgFmDate, CovgToDate, flgQualComm, TrsLName, TrsFName, TrsMName, TrsPfx, TrsSfx, SignDt, CashBegin_P_6b, TotRcpts_P_6c, Subtotal_P_6d,
	TotDisb_P_7, CashClose_P_8, DebtsTo_P_9, DebtsBy_P_10, IndContsItem_P_11a1, IndContsUnitem_P_11a2, IndContsTot_P_11a3,
	PolPtyCommConts_P_11b, OthPolCommConts_P_11c, TotConts_P_11d, TranFmPtyComms_P_12, AllLoansRcvd_P_13, LoanPymtsRcvd_P_14,
	RefundOffsets_P_15, RefundsFedConts_P_16, OthFedRcptsDvds_P_17, TranFmNonFedAcctH3_P_18a, TranFmNonFedAcctH5_P_18b,
	TotNonFedTrans_P_18c, TotRcpts_P_19, TotFedRcpts_P_20, OpExpsFedShr_P_21a1, OpExpsNonFedShr_P_21a2, OpExpsOthFed_P_21b,
	TotOpExps_P_21c, TranToPtyComms_P_22, ContsToFedCandsComms_P_23, IndtExps_P_24, CoordExpsByPtyComms_P_25, LoansRepaid_P_26,
	LoansMade_P_27, RefundsInd_P_28a, RefundsPolPtyComms_P_28b, RefundsOthPolComms_P_28c, TotContRefunds_P_28d, OthDisb_P_29,
	ShrdElecActivityFedShr_P_30a1, ShrdElecActivityNonFedShr_P_30a2, NonAllocFedElecActivity_P_30b, TotFedElecActivity_P_30c,
	TotDisb_P_31, TotFedDisb_P_32, TotConts_P_33, TotContRefunds_P_34, NetConts_P_35, TotFedOpExps_P_36, TotOffsetsOpExp_P_37,
	NetOpExps_P_38, CashBegin_T_6a, CashBeginYr, TotRcpts_T_6c, Subtotal_T_6d, TotDisb_T_7, CashClose_T_8, IndContsItem_T_11a1,
	IndContsUnitem_T_11a2, IndContsTot_T_11a3, PolPtyCommConts_T_11b, OthPolCommConts_T_11c, TotConts_T_11d, TranFmPtyComms_T_12,
	AllLoansRcvd_T_13, LoanPymtsRcvd_T_14, RefundOffsets_T_15, RefundsFedConts_T_16, OthFedRcptsDvds_T_17, TranFmNonFedAcctH3_T_18a,
	TranFmNonFedAcctH5_T_18b, TotNonFedTrans_T_18c, TotRcpts_T_19, TotFedRcpts_T_20, OpExpsFedShr_T_21a1, OpExpsNonFedShr_T_21a2,
	OpExpsOthFed_T_21b, TotOpExps_T_21c, TranToPtyComms_T_22, ContsToFedCandsComms_T_23, IndtExps_T_24, CoordExpsByPtyComms_T_25,
	LoansRepaid_T_26, LoansMade_T_27, RefundsInd_T_28a, RefundsPolPtyComms_T_28b, RefundsOthPolComms_T_28c, TotContRefunds_T_28d,
	OthDisb_T_29, ShrdElecActivityFedShr_T_30a1, ShrdElecActivityNonFedShr_T_30a2, NonAllocFedElecActivity_T_30b, TotFedElecActivity_T_30c,
	TotDisb_T_31, TotFedDisb_T_32, TotConts_T_33, TotContRefunds_T_34, NetConts_T_35, TotFedOpExps_T_36, TotOffsetsOpExp_T_37,
	NetOpExps_T_38, HdrVer, SoftNm, SoftVer, RptID, RptNbr, HdrCmnt)
VALUES (@ImageID, @FormTpID, @CommID, @CommNm, @flgAddrChg, @Addr1, @Addr2, @City, @StAbbr, @Zip, @RptPrdID, @ElecID, @ElecDt, @ElecSt,
	@CovgFmDate, @CovgToDate, @flgQualComm, @TrsLName, @TrsFName, @TrsMName, @TrsPfx, @TrsSfx, @SignDt, @CashBegin_P_6b, @TotRcpts_P_6c, @Subtotal_P_6d,
	@TotDisb_P_7, @CashClose_P_8, @DebtsTo_P_9, @DebtsBy_P_10, @IndContsItem_P_11a1, @IndContsUnitem_P_11a2, @IndContsTot_P_11a3,
	@PolPtyCommConts_P_11b, @OthPolCommConts_P_11c, @TotConts_P_11d, @TranFmPtyComms_P_12, @AllLoansRcvd_P_13, @LoanPymtsRcvd_P_14,
	@RefundOffsets_P_15, @RefundsFedConts_P_16, @OthFedRcptsDvds_P_17, @TranFmNonFedAcctH3_P_18a, @TranFmNonFedAcctH5_P_18b,
	@TotNonFedTrans_P_18c, @TotRcpts_P_19, @TotFedRcpts_P_20, @OpExpsFedShr_P_21a1, @OpExpsNonFedShr_P_21a2, @OpExpsOthFed_P_21b,
	@TotOpExps_P_21c, @TranToPtyComms_P_22, @ContsToFedCandsComms_P_23, @IndtExps_P_24, @CoordExpsByPtyComms_P_25, @LoansRepaid_P_26,
	@LoansMade_P_27, @RefundsInd_P_28a, @RefundsPolPtyComms_P_28b, @RefundsOthPolComms_P_28c, @TotContRefunds_P_28d, @OthDisb_P_29,
	@ShrdElecActivityFedShr_P_30a1, @ShrdElecActivityNonFedShr_P_30a2, @NonAllocFedElecActivity_P_30b, @TotFedElecActivity_P_30c,
	@TotDisb_P_31, @TotFedDisb_P_32, @TotConts_P_33, @TotContRefunds_P_34, @NetConts_P_35, @TotFedOpExps_P_36, @TotOffsetsOpExp_P_37,
	@NetOpExps_P_38, @CashBegin_T_6a, @CashBeginYr, @TotRcpts_T_6c, @Subtotal_T_6d, @TotDisb_T_7, @CashClose_T_8, @IndContsItem_T_11a1,
	@IndContsUnitem_T_11a2, @IndContsTot_T_11a3, @PolPtyCommConts_T_11b, @OthPolCommConts_T_11c, @TotConts_T_11d, @TranFmPtyComms_T_12,
	@AllLoansRcvd_T_13, @LoanPymtsRcvd_T_14, @RefundOffsets_T_15, @RefundsFedConts_T_16, @OthFedRcptsDvds_T_17, @TranFmNonFedAcctH3_T_18a,
	@TranFmNonFedAcctH5_T_18b, @TotNonFedTrans_T_18c, @TotRcpts_T_19, @TotFedRcpts_T_20, @OpExpsFedShr_T_21a1, @OpExpsNonFedShr_T_21a2,
	@OpExpsOthFed_T_21b, @TotOpExps_T_21c, @TranToPtyComms_T_22, @ContsToFedCandsComms_T_23, @IndtExps_T_24, @CoordExpsByPtyComms_T_25,
	@LoansRepaid_T_26, @LoansMade_T_27, @RefundsInd_T_28a, @RefundsPolPtyComms_T_28b, @RefundsOthPolComms_T_28c, @TotContRefunds_T_28d,
	@OthDisb_T_29, @ShrdElecActivityFedShr_T_30a1, @ShrdElecActivityNonFedShr_T_30a2, @NonAllocFedElecActivity_T_30b,
	@TotFedElecActivity_T_30c, @TotDisb_T_31, @TotFedDisb_T_32, @TotConts_T_33, @TotContRefunds_T_34, @NetConts_T_35, @TotFedOpExps_T_36,
	@TotOffsetsOpExp_T_37, @NetOpExps_T_38, @HdrVer, @SoftNm, @SoftVer, @RptID, @RptNbr, @HdrCmnt);

-- Return value to show new header row added.
IF EXISTS
	(SELECT ImageID
	FROM dbo.RptHdrs_F3X
	WHERE ImageID = @ImageID)
	BEGIN
		SELECT 1;
		RETURN 0;
	END

-- Return -2 if insert failed
SELECT -2;
RETURN 0;

SET NOCOUNT OFF









GO
/****** Object:  StoredProcedure [dbo].[usp_AddTransPurp]    Script Date: 2/25/2015 1:01:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







CREATE PROCEDURE [dbo].[usp_AddTransPurp] (@TransPurpCd varchar(3), @TransPurpID tinyint output)

AS

-- This stored procedure is used by an SSIS package to add new contribution and expense purpose codes
-- to lkpTransPurp and return the identity ID for that newly inserted value

BEGIN

	SET NOCOUNT ON;

	IF NOT EXISTS (SELECT USATID
		FROM lkpTransPurp
		WHERE TransPurpCd = ISNULL(@TransPurpCd, ''))

	BEGIN
		INSERT INTO lkpTransPurp (TransPurpCd)
		VALUES (@TransPurpCd);
	END

	SELECT @TransPurpID = USATID
		FROM lkpTransPurp
		WHERE TransPurpCd = ISNULL(@TransPurpCd, '');

END








GO
/****** Object:  StoredProcedure [dbo].[usp_DeactivateOverlappingReports]    Script Date: 2/25/2015 1:01:46 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[usp_DeactivateOverlappingReports]

AS

/*
This stored procedure deactivates reports that have superced by other
reports but for which the current method of deactivation (which requires an
exact match on reporting period and both coverage dates) does not work.
For each row in the three tables, the queries look up the value recorded in
the RptID field. It deactivates all other reports that meet one of two
criteria: 

1 - The other report has the same value in RptID and a lower
ImageID. (This is necessary for reports that are amended more than once; no
matter how many amendments are filed, the RptID field always contains
the value of the initially filed report. Another possibility would be to
use the RptNbr field, which starts at 1 for the first amendment (NULL
for the initial report, 2 for the second amendment and so on), but
at present, this isn't necessary.

2 - The value of the ReportID field has a prefix of "FEC-", with the rest
making up a digit of no more than 9 digits, and where this value matches the
ImageID of the report to be deactivated.

When I ran this query, it updated all but 170 overlapping reports covering
2003 through mid-2013. About 2000 overlapping reports still exist prior to
that date.
*/

BEGIN

	SET NOCOUNT ON;

	UPDATE b
	SET b.Active = 0
	FROM RptHdrs_F3 a
	INNER JOIN RptHdrs_F3 b
		ON a.Active = 1
			AND a.CommID = b.CommID
			AND b.Active = 1
			AND a.ImageID > b.ImageID
			AND ((a.RptID IS NOT NULL
				AND LTRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(a.RptID, 'FEC', ''), '-', ''), '1', ''), '2', ''), '3', ''), '4', ''), '5', ''), '6', ''), '7', ''), '8', ''), '9', ''), '0', '')) = ''
				AND LEN(LTRIM(REPLACE(REPLACE(a.RptID, 'FEC', ''), '-', ''))) < 9
				AND 1 * LTRIM(REPLACE(REPLACE(a.RptID, 'FEC', ''), '-', '')) = b.ImageID)
					OR a.RptID = b.RptID)
	INNER JOIN lkpCommittees c
		ON a.CommID = c.USATID

	UPDATE b
	SET b.Active = 0
	FROM RptHdrs_F3P a
	INNER JOIN RptHdrs_F3P b
		ON a.Active = 1
			AND a.CommID = b.CommID
			AND b.Active = 1
			AND a.ImageID > b.ImageID
			AND ((a.RptID IS NOT NULL
				AND LTRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(a.RptID, 'FEC', ''), '-', ''), '1', ''), '2', ''), '3', ''), '4', ''), '5', ''), '6', ''), '7', ''), '8', ''), '9', ''), '0', '')) = ''
				AND LEN(LTRIM(REPLACE(REPLACE(a.RptID, 'FEC', ''), '-', ''))) < 9
				AND 1 * LTRIM(REPLACE(REPLACE(a.RptID, 'FEC', ''), '-', '')) = b.ImageID)
					OR a.RptID = b.RptID)
	INNER JOIN lkpCommittees c
		ON a.CommID = c.USATID

	UPDATE b
	SET b.Active = 0
	FROM RptHdrs_F3X a
	INNER JOIN RptHdrs_F3X b
		ON a.Active = 1
			AND a.CommID = b.CommID
			AND b.Active = 1
			AND a.ImageID > b.ImageID
			AND ((a.RptID IS NOT NULL
				AND LTRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(a.RptID, 'FEC', ''), '-', ''), '1', ''), '2', ''), '3', ''), '4', ''), '5', ''), '6', ''), '7', ''), '8', ''), '9', ''), '0', '')) = ''
				AND LEN(LTRIM(REPLACE(REPLACE(a.RptID, 'FEC', ''), '-', ''))) < 9
				AND 1 * LTRIM(REPLACE(REPLACE(a.RptID, 'FEC', ''), '-', '')) = b.ImageID)
					OR a.RptID = b.RptID)
	INNER JOIN lkpCommittees c
		ON a.CommID = c.USATID

END



GO
/****** Object:  StoredProcedure [dbo].[usp_FindOverlappingReports]    Script Date: 2/25/2015 1:01:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE [dbo].[usp_FindOverlappingReports]

AS

-- This stored procedure looks for Active reports in the three RptHdrs tables that cover the same dates.

BEGIN

	SET NOCOUNT ON;

	SELECT 'F3' AS Hdr, a.ImageID, a.CommID, c.FECCommID, a.CommNm, d.RptPrdCd, a.CovgFmDate, a.CovgToDate, a.RptID
	FROM RptHdrs_F3 a
	INNER JOIN RptHdrs_F3 b
		ON a.Active = 1
			AND a.CommID = b.CommID
			AND b.Active = 1
			AND a.ImageID <> b.ImageID
			AND ((a.CovgFmDate <= b.CovgFmDate AND a.CovgToDate >= b.CovgFmDate)
				OR (a.CovgFmDate <= b.CovgToDate AND a.CovgToDate >= b.CovgToDate)
				OR (a.CovgFmDate > b.CovgFmDate AND a.CovgToDate < b.CovgToDate))
	INNER JOIN lkpCommittees c
		ON a.CommID = c.USATID
	INNER JOIN lkpRptPrd d
		ON a.RptPrdID = d.USATID
	GROUP BY a.ImageID, a.CommID, c.FECCommID, a.CommNm, d.RptPrdCd, a.CovgFmDate, a.CovgToDate, a.RptID
	UNION
	SELECT 'F3P' AS Hdr, a.ImageID, a.CommID, c.FECCommID, a.CommNm, d.RptPrdCd, a.CovgFmDate, a.CovgToDate, a.RptID
	FROM RptHdrs_F3P a
	INNER JOIN RptHdrs_F3P b
		ON a.Active = 1
			AND a.CommID = b.CommID
			AND b.Active = 1
			AND a.ImageID <> b.ImageID
			AND ((a.CovgFmDate <= b.CovgFmDate AND a.CovgToDate >= b.CovgFmDate)
				OR (a.CovgFmDate <= b.CovgToDate AND a.CovgToDate >= b.CovgToDate)
				OR (a.CovgFmDate > b.CovgFmDate AND a.CovgToDate < b.CovgToDate))
	INNER JOIN lkpCommittees c
		ON a.CommID = c.USATID
	INNER JOIN lkpRptPrd d
		ON a.RptPrdID = d.USATID
	GROUP BY a.ImageID, a.CommID, c.FECCommID, a.CommNm, d.RptPrdCd, a.CovgFmDate, a.CovgToDate, a.RptID
	UNION
	SELECT 'F3X' AS Hdr, a.ImageID, a.CommID, c.FECCommID, a.CommNm, d.RptPrdCd, a.CovgFmDate, a.CovgToDate, a.RptID
	FROM RptHdrs_F3X a
	INNER JOIN RptHdrs_F3X b
		ON a.Active = 1
			AND a.CommID = b.CommID
			AND b.Active = 1
			AND a.ImageID <> b.ImageID
			AND ((a.CovgFmDate <= b.CovgFmDate AND a.CovgToDate >= b.CovgFmDate)
				OR (a.CovgFmDate <= b.CovgToDate AND a.CovgToDate >= b.CovgToDate)
				OR (a.CovgFmDate > b.CovgFmDate AND a.CovgToDate < b.CovgToDate))
	INNER JOIN lkpCommittees c
		ON a.CommID = c.USATID
	INNER JOIN lkpRptPrd d
		ON a.RptPrdID = d.USATID
	GROUP BY a.ImageID, a.CommID, c.FECCommID, a.CommNm, d.RptPrdCd, a.CovgFmDate, a.CovgToDate, a.RptID
	ORDER BY a.CommNm, a.CovgFmDate, a.ImageID;

END










GO
/****** Object:  StoredProcedure [dbo].[usp_GetCommDisb]    Script Date: 2/25/2015 1:01:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- By Christopher Schnaars
-- 9/17/2013

-- This stored procedure is used to look up all disbursements by a committee during an (optional) time period.

-- Set @flgIncludeExcludedRows to 1 if you want excluded rows included in the resultset.


CREATE PROC [dbo].[usp_GetCommDisb] (@FECCommID char (9), @StDate date = NULL, @EndDate date = NULL, @flgIncludeExcludedRows bit = 0)

AS

SET NOCOUNT ON

-- Get internal committee ID
DECLARE @CommID int
SET @CommID = (SELECT USATID FROM lkpCommittees WHERE FECCommID = @FECCommID);

DECLARE @CommName varchar (200)
SET @CommName = (SELECT TOP 1 ISNULL(a.CleanCommName, b.FECName)
	FROM lkpCommittees a
	INNER JOIN CommMaster b
	ON a.USATID = @CommID
		AND a.USATID = b.CommID
	ORDER BY ElecCycle DESC);

SELECT a.USATID,
	a.ImageID,
	@FECCommID AS CommID,
	@CommName AS Committee,
	h.EntTp AS EntTp,
	CONVERT(varchar (10), a.ExpDt, 101) AS ExpDt,
	a.ExpAmt,
	CASE
		WHEN ISNULL(a.PayeeOrgNm, '') <> '' THEN a.PayeeOrgNm
		ELSE a.PayeeLName + ISNULL(' ' + a.PayeeSfx, '')
	END AS 'Last/OrgName',
	CASE
		WHEN ISNULL(a.PayeeFName, '') = '' THEN ''
		ELSE a.PayeeFName + ISNULL(' ' + a.PayeeMName, '')
	END AS FirstName,
	ISNULL(a.PayeeAddr1, '') AS PayeeAddr1,
	ISNULL(a.PayeeAddr2, '') AS PayeeAddr2,
	ISNULL(a.PayeeCity, '') AS PayeeCity,
	a.PayeeStAbbr,
	ISNULL(a.PayeeZip, '') AS PayeeZip,
	a.ExpPurpDesc,
	i.ExpCatCd,
	ISNULL(i.ExpCatDesc, '') AS ExpCatDesc,
	f.LnNbr,
	a.TransID,
	ISNULL(a.BkRefTransID, '') AS BkRefTransID,
	g.LnNbr AS BkRefSchd,
	j.FECCommID AS BenCommID,
	ISNULL(a.BenCommNm, '') AS BenCommName,
	k.FECCandID AS BenCandID,
	ISNULL(a.BenCandLName, '') AS BenCandLName,
	ISNULL(a.BenCandFName, '') AS BenCandFName,
	a.BenCandOfc,
	a.BenCandStAbbr,
	CASE
		WHEN a.BenCandDist = 0 THEN ''
		WHEN a.BenCandDist IS NULL THEN ''
		ELSE CAST(a.BenCandDist AS varchar(3))
	END AS BenCandDist,
	ISNULL(a.ConduitNm, '') AS Conduit,
	CASE a.flgMemo
		WHEN 0 THEN ''
		ELSE 'X'
	END AS Exclude,
	ISNULL(a.MemoTxt, '') AS Memo
FROM SchB a
INNER JOIN (SELECT b.ImageID
		FROM RptHdrs_F3 b
		WHERE b.CommID = @CommID
		AND b.Active = 1
		UNION
		SELECT c.ImageID
		FROM RptHdrs_F3P c
		WHERE c.CommID = @CommID
		AND c.Active = 1
		UNION
		SELECT d.ImageID
		FROM RptHdrs_F3X d
		WHERE d.CommID = @CommID
		AND d.Active = 1) e
	ON a.ImageID = e.ImageID
		AND (@StDate IS NULL OR a.ExpDt >= @StDate)
		AND (@EndDate IS NULL OR a.ExpDt <= @EndDate)
		AND (@flgIncludeExcludedRows = 1 OR a.flgMemo = 0)
INNER JOIN lkpLnNbr f
	ON a.LnNbrID = f.USATID
INNER JOIN lkpLnNbr g
	ON a.BkRefSchdID = g.USATID
INNER JOIN lkpEntTp h
	ON a.EntTpID = h.USATID
INNER JOIN lkpExpCat i
	ON a.ExpCatID = i.USATID
INNER JOIN lkpCommittees j
	ON a.BenCommID = j.USATID
INNER JOIN lkpCandidates k
	ON a.BenCandID = k.USATID;

SET NOCOUNT OFF;


GO
/****** Object:  StoredProcedure [dbo].[usp_GetCongressRoster]    Script Date: 2/25/2015 1:01:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROC [dbo].[usp_GetCongressRoster]

AS
-- Includes delegates from AS, DC, GU, MP, PR, VI
-- Some legislators do not have FEC Candidate IDs, so we can't use INNER JOINs based on CandID.

SELECT a.LName + ISNULL(' ' + a.Suffix, '') AS LastName,
	a.FName + ISNULL(' ' + a.MName, '') + ISNULL(' "' + a.Nickname + '"', '') AS FirstName,
	a.OfficialFullName AS OfficialName,
	CASE b.Chamber
		WHEN 'rep' THEN 'House'
		WHEN 'sen' THEN 'Senate'
		ELSE ''
	END AS Chamber,
	b.StAbbr,
	CASE
		WHEN b.Dist = 0 THEN ''
		ELSE CAST(b.Dist AS varchar(3))
	END AS Dist,
	b.Party,
	CASE
		WHEN k.FECCandID IS NULL THEN ''
		ELSE k.FECCandID
	END AS CandID,
	CASE
		WHEN a.FECIDs IS NULL THEN ''
		ELSE a.FECIDS
	END AS AllCandIDs,
	CASE
		WHEN p.FECCommID IS NULL THEN ''
		ELSE p.FECCommID
	END AS PrinCommID,
	CASE
		WHEN p.PrinComm IS NULL THEN ''
		ELSE p.PrinComm
	END AS PrinComm,
	CONVERT(varchar(10), a.Birthday, 101) AS DOB,
	CONVERT(varchar(10), b.StDate, 101) AS TermStart,
	CONVERT(varchar(10), b.EdDate, 101) AS TermEnd,
	a.Gender,
	ISNULL(a.Religion, '') AS Religion
FROM Congress a
INNER JOIN CongTerms b
	ON a.USATID = b.CongressID
		AND b.EdDate > GETDATE()
LEFT OUTER JOIN (SELECT h.FECCandID, h.PeopleID, h.USATID AS CandID, j.Office, j.PrinCommID
		FROM lkpCandidates h
		INNER JOIN
				(SELECT g.PeopleID, MAX(g.ElecCycle) AS ElecCycle
				FROM
					(SELECT e.PeopleID, e.USATID AS CandID, MAX(f.ElecCycle) AS ElecCycle
					FROM lkpCandidates e
					INNER JOIN CandMaster f
					ON e.USATID = f.CandID
					GROUP BY e.PeopleID, e.USATID) g
				GROUP BY g.PeopleID) i
			ON h.PeopleID = i.PeopleID
		INNER JOIN CandMaster j
			ON h.USATID = j.CandID
				AND i.ElecCycle = j.ElecCycle
				AND ((j.Office = 'H' AND (j.ElecYr = j.ElecCycle
					OR j.ElecYr + 1 = j.ElecCycle
					OR (j.OfficeState = 'PR' AND j.ElecYr - 2 = j.ElecCycle))) -- PR resident commissioner serves 4 years
					OR j.Office = 'S')) k
	ON a.PeopleID = k.PeopleID
		AND ((b.Chamber = 'rep' AND k.Office = 'H')
			OR (b.Chamber = 'sen' AND k.Office = 'S'))
LEFT OUTER JOIN
		(SELECT l.CommID,
			o.FECCommID,
			ISNULL(o.CleanCommName, l.FECName) AS PrinComm
		FROM CommMaster l
		INNER JOIN
				(SELECT m.CommID,
					MAX(m.ElecCycle) AS ElecCycle
				FROM CommMaster m
				GROUP BY m.CommID) n
			ON l.CommID = n.CommID
				AND l.ElecCycle = n.ElecCycle
		INNER JOIN lkpCommittees o
			ON l.CommID = o.USATID) p
	ON k.PrinCommID = p.CommID
WHERE a.PeopleID = 0
	OR (k.PeopleID IS NOT NULL)
	OR (k.PeopleID IS NULL AND GETDATE() BETWEEN b.StDate AND b.EdDate)
ORDER BY b.Chamber, b.StAbbr, b.Dist;






GO
/****** Object:  StoredProcedure [dbo].[usp_GetPACTopLines]    Script Date: 2/25/2015 1:01:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







CREATE PROC [dbo].[usp_GetPACTopLines] (@DataYear smallint, @SuperPACsOnly tinyint = 0, @CommID varchar(9) = NULL)

AS

-- This sproc pulls top line numbers for all PACs from the most recent reports filed
-- in the year specified. Set @SuperPACsOnly flag to 1 to get just SuperPACs (Type O)
--  or 2 to get Super PACs and Hybrid PACs (Type V).
-- You can specify an optional CommID to get numbers only for a specific Super PAC.

/*
-- Test variables
DECLARE @DataYear smallint
SET @DataYear = 2012
*/

SELECT f.CommID AS USATCommID,
	f.FECCommID,
	f.PrinComm AS Committee,
	f.CommType,
	f.PACView,
	i.ImageID,
	CONVERT(varchar(10),i.CovgFmDate,101) AS CovgFmDate,
	CONVERT(varchar(10),i.CovgToDate,101) AS CovgToDate,
	i.TotRcpts_T_6c AS TotRcpts,
	i.CashClose_T_8 AS CashOnHand,
	i.IndContsItem_T_11a1 AS IndContsItem,
	i.IndContsUnitem_T_11a2 AS IndContsUnitem,
	i.IndContsTot_T_11a3 AS IndContsTot,
	i.TotConts_T_11d AS TotConts,
	i.TotDisb_T_7 AS TotDisb,
	i.IndtExps_T_24 AS TotIEs,
	i.ContsToFedCandsComms_P_23 AS ContribsToOthComms
FROM RptHdrs_F3X i
INNER JOIN (SELECT g.CommID,
			MAX(g.CovgToDate) AS CovgToDate
		FROM RptHdrs_F3X g
		WHERE Active = 1
			AND YEAR(g.CovgToDate) = @DataYear
		GROUP BY g.CommID) h
	ON i.Active = 1
		AND i.CommID = h.CommID
		AND i.CovgToDate = h.CovgToDate
INNER JOIN (SELECT a.CommID,
			d.FECCommID,
			ISNULL(d.CleanCommName, a.FECName) AS PrinComm,
			a.CommType,
			CASE
				WHEN e.PACView IS NULL THEN ''
				ELSE e.PACView
			END AS PACView
		FROM CommMaster a
		INNER JOIN
				(SELECT b.CommID,
					MAX(b.ElecCycle) AS ElecCycle
				FROM CommMaster b
				GROUP BY b.CommID) c
			--ON (a.CommType = 'O' OR @SuperPACsOnly = 0)
			ON (@SuperPACsOnly = 0
				OR (@SuperPACsOnly = 1 AND a.CommType = 'O')
				OR (@SuperPACsOnly = 2 AND a.CommType IN ('O', 'V')))
				AND a.CommID = c.CommID
				AND a.ElecCycle = c.ElecCycle
		INNER JOIN lkpCommittees d
			ON a.CommID = d.USATID
		LEFT OUTER JOIN PACViews e
			ON a.CommID = e.CommID) f
	ON (@CommID IS NULL OR f.FECCommID = @CommID)
		AND i.CommID = f.CommID
ORDER BY i.TotRcpts_T_6c DESC;







GO
/****** Object:  StoredProcedure [dbo].[usp_GetPeopleID]    Script Date: 2/25/2015 1:01:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[usp_GetPeopleID] (@CandID int)

AS

-- This stored procedure is used by the update_congress Python script to retrieve
-- the PeopleID for a specific CandID.

BEGIN

	SET NOCOUNT ON;

	SELECT ISNULL(PeopleID, 0)
	FROM lkpCandidates
	WHERE USATID = @CandID;
	RETURN 0

END




GO
/****** Object:  StoredProcedure [dbo].[usp_ScrubCandCommLinks]    Script Date: 2/25/2015 1:01:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE [dbo].[usp_ScrubCandCommLinks] (@FileDate date = NULL)

AS

-- This stored procedure cleans data imported into stgCandCommLinks, then uses that data to update CandCommLinks.

-- 7/11/14: Changed sproc to set @FileDate to today's date rather than most recent Sunday; fixed broken
-- reference to CommTypeCd in lkpCommTypes (was incorrectly referring to CommTypeCode)

BEGIN

	SET NOCOUNT ON;

	-- FOR TESTING ONLY, DECLARE VARIABLE
	-- DECLARE @FileDate date

	-- Populate FileDate with today's date when not provided
	IF @FileDate IS NULL
	-- SET @FileDate = DATEADD(dd, 1 - DATEPART(dw, CAST(GETDATE() as date)), CAST(GETDATE() as date)) -- Most recent Sunday
	SET @FileDate = CAST(GETDATE() as date)
		
	-- FOR TESTING ONLY:
	-- SET @FileDate = CAST('9/1/2013' AS date)

	-- Look for undefined Committee Designation codes
	INSERT INTO lkpCommDesignation (CommDesignationCode, CommDesignationDesc)
	SELECT a.CMTE_DSGN, 'Undefined'
	FROM stgCandCommLinks a
	LEFT OUTER JOIN lkpCommDesignation b
	ON a.CMTE_DSGN = b.CommDesignationCode
	WHERE b.CommDesignationCode IS NULL
	GROUP BY a.CMTE_DSGN;

-----------------------------------

	-- Look for undefined Committee Type codes
	INSERT INTO lkpCommType (CommTypeCd, CommTypeDesc)
	SELECT a.CMTE_TP, 'Undefined'
	FROM stgCandCommLinks a
	LEFT OUTER JOIN lkpCommType b
	ON a.CMTE_TP = b.CommTypeCd
	WHERE b.CommTypeCd IS NULL
	GROUP BY a.CMTE_TP;

-----------------------------------

	-- Populate CommID
	UPDATE a
	SET a.CommID = b.USATID
	FROM stgCandCommLinks a
	INNER JOIN lkpCommittees b
		ON a.CMTE_ID = b.FECCommID;

	-- Add new committee IDs to lookup table
	INSERT INTO lkpCommittees (FECCommID)
	SELECT CMTE_ID
	FROM stgCandCommLinks
	WHERE CommID IS NULL
	GROUP BY CMTE_ID;

	-- Populate remaining records
	UPDATE a
	SET a.CommID = b.USATID
	FROM stgCandCommLinks a
	INNER JOIN lkpCommittees b
		ON a.CommID IS NULL
			AND a.CMTE_ID = b.FECCommID;

-----------------------------------

	-- Populate CandID
	UPDATE a
	SET a.CandID = b.USATID
	FROM stgCandCommLinks a
	INNER JOIN lkpCandidates b
		ON ISNULL(a.CAND_ID, '') = b.FECCandID;

	-- Add new Candidate IDs to lookup table
	INSERT INTO lkpCandidates (FECCandID)
	SELECT DISTINCT CAND_ID
	FROM stgCandCommLinks
	WHERE CandID IS NULL;

	-- Copy new Candidate IDs back to staging table
	UPDATE a
	SET a.CandID = b.USATID
	FROM stgCandCommLinks a
	INNER JOIN lkpCandidates b
		ON a.CandID IS NULL
			AND a.CAND_ID = b.FECCandID;

-----------------------------------

	-- Update existing rows
	UPDATE a
	SET a.ElecCycle = b.FEC_ELECTION_YR,
		a.CandID = b.CandID,
		a.CommID = b.CommID,
		a.CommDesignation = b.CMTE_DSGN,
		a.CommType = b.CMTE_TP,
		a.CandElecYr = b.CAND_ELECTION_YR
	FROM CandCommLinks a
	INNER JOIN stgCandCommLinks b
		ON a.FECLinkID = b.LINKAGE_ID
		AND (a.ElecCycle <> b.FEC_ELECTION_YR
			OR a.CandID <> b.CandID
			OR a.CommID <> b.CommID
			OR a.CommDesignation <> b.CMTE_DSGN
			OR a.CommType <> b.CMTE_TP
			OR a.CandElecYr <> b.CAND_ELECTION_YR);

-----------------------------------

	-- Add new rows
	INSERT INTO CandCommLinks (FECLinkID, ElecCycle, CandID, CommID, CommDesignation, CommType, CandElecYr, FileDate)
	SELECT DISTINCT a.LINKAGE_ID, a.FEC_ELECTION_YR, a.CandID, a.CommID, a.CMTE_DSGN, a.CMTE_TP, a.CAND_ELECTION_YR, @FileDate
	FROM stgCandCommLinks a
	LEFT OUTER JOIN CandCommLinks b
		ON b.FECLinkID = a.LINKAGE_ID
	WHERE b.FECLinkID IS NULL;


END











GO
/****** Object:  StoredProcedure [dbo].[usp_ScrubCandidates]    Script Date: 2/25/2015 1:01:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE PROCEDURE [dbo].[usp_ScrubCandidates] (@FileDate date = NULL)

AS

-- This stored procedure cleans data imported into stgCandidates, then uses that data to update CandMaster.

-- 4/2/13: Added PeopleID
-- 9/26/13: Added FileDate
-- 7/11/14: Changed sproc to set @FileDate to today's date rather than most recent Sunday

BEGIN

	SET NOCOUNT ON;

	-- FOR TESTING ONLY, DECLARE VARIABLE
	-- DECLARE @FileDate date

	-- Populate FileDate with today's date when not provided
	IF @FileDate IS NULL
	-- SET @FileDate = DATEADD(dd, 1 - DATEPART(dw, CAST(GETDATE() as date)), CAST(GETDATE() as date)) -- Most recent Sunday
	SET @FileDate = CAST(GETDATE() as date)
		
	-- FOR TESTING ONLY:
	-- SET @FileDate = CAST('9/1/2013' AS date)

	-- Populate CandID, PeopleID from existing data in lookup table
	UPDATE a
	SET a.CandID = b.USATID,
		a.PeopleID = b.PeopleID
	FROM stgCandidates a
	INNER JOIN lkpCandidates b
		ON a.CAND_ID = b.FECCandID;

	-- Insert anything left over into People table
	INSERT INTO People (SourceName)
	SELECT DISTINCT LTRIM(RTRIM(CAND_NAME))
	FROM stgCandidates
	WHERE PeopleID IS NULL
		AND CandID IS NULL;

	-- Copy PeopleID back to staging table
	UPDATE a
	SET a.PeopleID = b.PeopleID
	FROM stgCandidates a
	INNER JOIN (SELECT c.SourceName, MAX(c.USATID) AS PeopleID
		FROM People c
		WHERE c.SourceName IS NOT NULL
		GROUP BY c.SourceName) b
	ON a.PeopleID IS NULL
		AND a.CandID IS NULL
		AND LTRIM(RTRIM(a.CAND_NAME)) = b.SourceName;

	-- Add new combinations of FECCandID and PeopleID to lkpCandidates
	INSERT INTO lkpCandidates (FECCandID, PeopleID)
	SELECT CAND_ID, PeopleID
	FROM stgCandidates
	WHERE CandID IS NULL;

	-- Copy CandID back to staging table
	UPDATE a
	SET a.CandID = b.USATID
	FROM stgCandidates a
	INNER JOIN lkpCandidates b
		ON a.CandID IS NULL
			AND a.CAND_ID = b.FECCandID;

-----------------------------------

	-- Populate PrinCommID
	UPDATE a
	SET a.PrinCommID = b.USATID
	FROM stgCandidates a
	INNER JOIN lkpCommittees b
		ON ISNULL(a.PRIN_COMM_ID, '') = b.FECCommID;

	-- Add new committee IDs to lookup table
	INSERT INTO lkpCommittees (FECCommID)
	SELECT PRIN_COMM_ID
	FROM stgCandidates
	WHERE PrinCommID IS NULL
	GROUP BY PRIN_COMM_ID;

	-- Populate remaining records
	UPDATE a
	SET a.PrinCommID = b.USATID
	FROM stgCandidates a
	INNER JOIN lkpCommittees b
		ON a.PrinCommID IS NULL
			AND a.PRIN_COMM_ID = b.FECCommID;

-----------------------------------

	-- Populate PartyID field
	UPDATE a
	SET a.PartyID = b.USATID
	FROM stgCandidates a
	INNER JOIN lkpParties b
	ON a.PTY_AFF = b.FECCode;

	-- Add undefined codes to lookup table
	INSERT INTO lkpParties (FECCode, Party, Short)
	SELECT PTY_AFF, 'Undefined', 'O'
	FROM stgCandidates
	WHERE PartyID IS NULL
	GROUP BY PTY_AFF;

	-- Populate remaining records
	UPDATE a
	SET a.PartyID = b.USATID
	FROM stgCandidates a
	INNER JOIN lkpParties b
	ON a.PartyID IS NULL
		AND a.PTY_AFF = b.FECCode;

-----------------------------------

	-- Populate OfficeDist
	UPDATE stgCandidates
	SET OfficeDist = CASE
		WHEN ISNUMERIC(OFFICE_DIST) = 1 AND CAST(OFFICE_DIST AS tinyint) BETWEEN 0 AND 255 THEN CAST(OFFICE_DIST AS tinyint)
		ELSE 0
	END;

-----------------------------------

	-- Look for undefined IncChalStatus codes
	INSERT INTO lkpIncChalStatus (IncChalStatusCd, IncChalStatusDesc)
	SELECT a.INC_CHAL_STATUS, 'Undefined'
	FROM stgCandidates a
	LEFT OUTER JOIN lkpIncChalStatus b
	ON a.INC_CHAL_STATUS = b.IncChalStatusCd
	WHERE b.IncChalStatusCd IS NULL
	GROUP BY a.INC_CHAL_STATUS;

-----------------------------------

	-- Look for undefined CandStatus codes
	INSERT INTO lkpCandStatus (CandStatusCd, CandStatusDesc)
	SELECT a.CAND_STATUS, 'Undefined'
	FROM stgCandidates a
	LEFT OUTER JOIN lkpCandStatus b
	ON a.CAND_STATUS = b.CandStatusCd
	WHERE b.CandStatusCd IS NULL
	GROUP BY a.CAND_STATUS;

-----------------------------------

	-- Update existing rows
	UPDATE a
	SET a.FECName = b.CAND_NAME,
		a.PartyID = b.PartyID,
		a.ElecYr = b.ELEC_YR,
		a.OfficeState = b.OFFICE_ST,
		a.Office = b.OFFICE,
		a.OfficeDist = b.OfficeDist,
		a.IncChalStatus = b.INC_CHAL_STATUS,
		a.CandStatus = b.CAND_STATUS,
		a.PrinCommId = b.PrinCommID,
		a.Addr1 = CASE
			WHEN ISNULL(b.CAND_ADDR1, '') = '' THEN NULL
			ELSE b.CAND_ADDR1
		END,
		a.Addr2 = CASE
			WHEN ISNULL(b.CAND_ADDR2, '') = '' THEN NULL
			ELSE b.CAND_ADDR2
		END,
		a.MailCity = CASE
			WHEN ISNULL(b.CAND_CITY, '') = '' THEN NULL
			ELSE b.CAND_CITY
		END,
		a.MailState = b.CAND_ST,
		a.Zip = CASE
			WHEN ISNULL(b.CAND_ZIP, '') = '' THEN NULL
			ELSE b.CAND_ZIP
		END
	FROM CandMaster a
	INNER JOIN stgCandidates b
		ON a.CandID = b.CandID
		AND a.ElecCycle = b.ElecCycle
		AND (a.FECName <> b.CAND_NAME
			OR a.PartyID <> b.PartyID
			OR a.ElecYr <> b.ELEC_YR
			OR a.OfficeState <> b.OFFICE_ST
			OR a.Office <> b.OFFICE
			OR a.OfficeDist <> b.OfficeDist
			OR a.IncChalStatus <> b.INC_CHAL_STATUS
			OR a.CandStatus <> b.CAND_STATUS
			OR ISNULL(a.PrinCommID, '') <> b.PrinCommID
			OR ISNULL(a.Addr1, '') <> ISNULL(b.CAND_ADDR1, '')
			OR ISNULL(a.Addr2, '') <> ISNULL(b.CAND_ADDR2, '')
			OR ISNULL(a.MailCity, '') <> ISNULL(b.CAND_CITY, '')
			OR a.MailState <> b.CAND_ST
			OR ISNULL(a.Zip, '') <> ISNULL(b.CAND_ZIP, ''));

-----------------------------------

	-- Add new rows
	INSERT INTO CandMaster (CandID, FECName, PartyID, ElecYr, ElecCycle, OfficeState, Office, OfficeDist,
		IncChalStatus, CandStatus, PrinCommID, Addr1, Addr2, MailCity, MailState, Zip, FileDate)
	SELECT DISTINCT a.CandID,
		a.CAND_NAME,
		a.PartyID,
		a.ELEC_YR,
		a.ElecCycle,
		a.OFFICE_ST,
		a.OFFICE,
		a.OfficeDist,
		a.INC_CHAL_STATUS,
		a.CAND_STATUS,
		a.PrinCommID,
		CASE WHEN ISNULL(a.CAND_ADDR1, '') = '' THEN NULL ELSE a.CAND_ADDR1 END,
		CASE WHEN ISNULL(a.CAND_ADDR2, '') = '' THEN NULL ELSE a.CAND_ADDR2 END,
		CASE WHEN ISNULL(a.CAND_CITY, '') = '' THEN NULL ELSE a.CAND_CITY END,
		a.CAND_ST,
		CASE WHEN ISNULL(a.CAND_ZIP, '') = '' THEN NULL ELSE a.CAND_ZIP END,
		@FileDate
	FROM stgCandidates a
	LEFT OUTER JOIN CandMaster b
		ON a.CandID = b.CandID
			AND a.ElecCycle = b.ElecCycle
	WHERE b.USATID IS NULL;


END

















GO
/****** Object:  StoredProcedure [dbo].[usp_ScrubCommittees]    Script Date: 2/25/2015 1:01:47 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







CREATE PROCEDURE [dbo].[usp_ScrubCommittees] (@FileDate date = NULL)

AS

-- This stored procedure cleans data imported into stgCommittees, then uses that data to update CommMaster.

-- 7/11/14: Changed sproc to set @FileDate to today's date rather than most recent Sunday

BEGIN

	SET NOCOUNT ON;

	-- FOR TESTING ONLY, DECLARE VARIABLE
	-- DECLARE @FileDate date

	-- Populate FileDate with today's date when not provided
	IF @FileDate IS NULL
	-- SET @FileDate = DATEADD(dd, 1 - DATEPART(dw, CAST(GETDATE() as date)), CAST(GETDATE() as date)) -- Most recent Sunday
	SET @FileDate = CAST(GETDATE() as date)

	-- FOR TESTING ONLY:
	-- SET @FileDate = CAST('9/1/2013' AS date)

	-- Populate CommID
	UPDATE a
	SET a.CommID = b.USATID
	FROM stgCommittees a
	INNER JOIN lkpCommittees b
		ON a.CMTE_ID = b.FECCommID;

	-- Add new committee IDs to lookup table
	INSERT INTO lkpCommittees (FECCommID)
	SELECT CMTE_ID
	FROM stgCommittees
	WHERE CommID IS NULL
	GROUP BY CMTE_ID;

	-- Populate remaining records
	UPDATE a
	SET a.CommID = b.USATID
	FROM stgCommittees a
	INNER JOIN lkpCommittees b
		ON a.CommID IS NULL
			AND a.CMTE_ID = b.FECCommID;

-----------------------------------

	-- Populate PartyID field
	UPDATE a
	SET a.PartyID = b.USATID
	FROM stgCommittees a
	INNER JOIN lkpParties b
	ON a.CMTE_PTY_AFFILIATION = b.FECCode;

	-- Add undefined codes to lookup table
	INSERT INTO lkpParties (FECCode, Party, Short)
	SELECT CMTE_PTY_AFFILIATION, 'Undefined', 'O'
	FROM stgCommittees
	WHERE PartyID IS NULL
	GROUP BY CMTE_PTY_AFFILIATION;

	-- Populate remaining records
	UPDATE a
	SET a.PartyID = b.USATID
	FROM stgCommittees a
	INNER JOIN lkpParties b
	ON a.PartyID IS NULL
		AND a.CMTE_PTY_AFFILIATION = b.FECCode;

-----------------------------------

	-- Look for undefined Committee Designation codes
	INSERT INTO lkpDesignation (DesignationCd, DesignationDesc)
	SELECT a.CMTE_DSGN, 'Undefined'
	FROM stgCommittees a
	LEFT OUTER JOIN lkpDesignation b
	ON a.CMTE_DSGN = b.DesignationCd
	WHERE b.DesignationCd IS NULL
	GROUP BY a.CMTE_DSGN;

-----------------------------------

	-- Look for undefined Committee Type codes
	INSERT INTO lkpCommType (CommTypeCd, CommTypeDesc)
	SELECT a.CMTE_TP, 'Undefined'
	FROM stgCommittees a
	LEFT OUTER JOIN lkpCommType b
	ON a.CMTE_TP = b.CommTypeCd
	WHERE b.CommTypeCd IS NULL
	GROUP BY a.CMTE_TP;

-----------------------------------

	-- Look for undefined Committee Filing Frequency codes
	INSERT INTO lkpFilingFreq (FilingFreqCd, FilingFreqDesc)
	SELECT a.CMTE_FILING_FREQ, 'Undefined'
	FROM stgCommittees a
	LEFT OUTER JOIN lkpFilingFreq b
	ON a.CMTE_FILING_FREQ = b.FilingFreqCd
	WHERE b.FilingFreqCd IS NULL
	GROUP BY a.CMTE_FILING_FREQ;

-----------------------------------

	-- Look for undefined Interest Group Category codes
	INSERT INTO lkpIntGrpCat (IntGrpCatCd, IntGrpCatDesc)
	SELECT a.ORG_TP, 'Undefined'
	FROM stgCommittees a
	LEFT OUTER JOIN lkpIntGrpCat b
	ON a.ORG_TP = b.IntGrpCatCd
	WHERE b.IntGrpCatCd IS NULL
	GROUP BY a.ORG_TP;

-----------------------------------

	-- Populate CandID
	UPDATE a
	SET a.CandID = b.USATID
	FROM stgCommittees a
	INNER JOIN lkpCandidates b
		ON ISNULL(a.CAND_ID, '') = b.FECCandID;

	-- Add new Candidate IDs to lookup table
	INSERT INTO lkpCandidates (FECCandID)
	SELECT DISTINCT CAND_ID
	FROM stgCommittees
	WHERE CandID IS NULL;

	-- Copy new Candidate IDs back to staging table
	UPDATE a
	SET a.CandID = b.USATID
	FROM stgCommittees a
	INNER JOIN lkpCandidates b
		ON a.CandID IS NULL
			AND a.CAND_ID = b.FECCandID;

-----------------------------------

	-- Update existing rows
	UPDATE a
	SET --a.FECCommID = b.CMTE_ID,
		a.FECName = b.CMTE_NM,
		a.ElecCycle = b.ElecCycle,
		a.PartyID = b.PartyID,
		a.Addr1 = CASE
			WHEN ISNULL(b.CMTE_ST1, '') = '' THEN NULL
			ELSE b.CMTE_ST1
		END,
		a.Addr2 = CASE
			WHEN ISNULL(b.CMTE_ST2, '') = '' THEN NULL
			ELSE b.CMTE_ST2
		END,
		a.MailCity = CASE
			WHEN ISNULL(b.CMTE_CITY, '') = '' THEN NULL
			ELSE b.CMTE_CITY
		END,
		a.MailState = b.CMTE_ST,
		a.Zip = CASE
			WHEN ISNULL(b.CMTE_ZIP, '') = '' THEN NULL
			ELSE b.CMTE_ZIP
		END,
		a.Designation = b.CMTE_DSGN,
		a.CommType = b.CMTE_TP,
		a.FilingFreq = b.CMTE_FILING_FREQ,
		a.IntGrpCat = b.ORG_TP,
		a.ConnectedOrg = CASE
			WHEN ISNULL(b.CONNECTED_ORG_NM, '') = '' THEN NULL
			ELSE b.CONNECTED_ORG_NM
		END,
		a.CandID = b.CandID,
		a.Treasurer = CASE
			WHEN ISNULL(b.TRES_NM, '') = '' THEN NULL
			ELSE b.TRES_NM
		END
	FROM CommMaster a
	INNER JOIN stgCommittees b
		-- ON a.FECCommID = b.CMTE_ID
		ON a.CommID = b.CommID
		AND a.ElecCycle = b.ElecCycle
		AND (a.FECName <> b.CMTE_NM
			OR ISNULL(a.Treasurer, '') <> ISNULL(b.TRES_NM, '')
			OR ISNULL(a.Addr1, '') <> ISNULL(b.CMTE_ST1, '')
			OR ISNULL(a.Addr2, '') <> ISNULL(b.CMTE_ST2, '')
			OR ISNULL(a.MailCity, '') <> ISNULL(b.CMTE_CITY, '')
			OR a.MailState <> b.CMTE_ST
			OR ISNULL(a.Zip, '') <> ISNULL(b.CMTE_ZIP, '')
			OR a.Designation <> b.CMTE_DSGN
			OR a.CommType <> b.CMTE_TP
			OR a.PartyID <> b.PartyID
			OR a.FilingFreq <> b.CMTE_FILING_FREQ
			OR a.IntGrpCat <> b.ORG_TP
			OR ISNULL(a.ConnectedOrg, '') <> ISNULL(b.CONNECTED_ORG_NM, '')
			OR a.CandID <> b.CandID);

-----------------------------------

	-- Add new rows
	INSERT INTO CommMaster (CommID, FECName, ElecCycle, PartyID, Addr1, Addr2, MailCity, MailState, Zip,
		Designation, CommType, FilingFreq, IntGrpCat, ConnectedOrg, CandID, Treasurer, FileDate)
	SELECT DISTINCT a.CommID,
		a.CMTE_NM,
		a.ElecCycle,
		a.PartyID,
		CASE WHEN ISNULL(a.CMTE_ST1, '') = '' THEN NULL ELSE a.CMTE_ST1 END,
		CASE WHEN ISNULL(a.CMTE_ST2, '') = '' THEN NULL ELSE a.CMTE_ST2 END,
		CASE WHEN ISNULL(a.CMTE_CITY, '') = '' THEN NULL ELSE a.CMTE_CITY END,
		a.CMTE_ST,
		CASE WHEN ISNULL(a.CMTE_ZIP, '') = '' THEN NULL ELSE a.CMTE_ZIP END,
		a.CMTE_DSGN,
		a.CMTE_TP,
		a.CMTE_FILING_FREQ,
		a.ORG_TP,
		CASE WHEN ISNULL(a.CONNECTED_ORG_NM, '') = '' THEN NULL ELSE a.CONNECTED_ORG_NM END,
		a.CandID,
		CASE WHEN ISNULL(a.TRES_NM, '') = '' THEN NULL ELSE a.TRES_NM END,
		@FileDate
	FROM stgCommittees a
	LEFT OUTER JOIN CommMaster b
		ON a.CommID = b.CommID
			AND a.ElecCycle = b.ElecCycle
	WHERE b.USATID IS NULL;


END
















GO
/****** Object:  StoredProcedure [dbo].[usp_ScrubIndiv]    Script Date: 2/25/2015 1:01:48 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE PROCEDURE [dbo].[usp_ScrubIndiv] (@FileDate date = NULL)

AS

-- This stored procedure cleans data imported into stgIndiv, then uses that data to update Indiv

BEGIN

	SET NOCOUNT ON;

	-- FOR TESTING ONLY, DECLARE VARIABLE
	-- DECLARE @FileDate date

	-- Populate FileDate with most recent Sunday date when not provided
	IF @FileDate IS NULL
	SET @FileDate = DATEADD(dd, 1 - DATEPART(dw, CAST(GETDATE() as date)), CAST(GETDATE() as date))
		
	-- FOR TESTING ONLY:
	-- SET @FileDate = CAST('9/1/2013' AS date)

	-- Populate RptCommID
	UPDATE a
	SET a.RptCommID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpCommittees b
		ON ISNULL(a.CMTE_ID, '') = b.FECCommID;

	-- Add new committee IDs to lookup table
	INSERT INTO lkpCommittees (FECCommID)
	SELECT DISTINCT CMTE_ID
	FROM stgIndiv
	WHERE RptCommID IS NULL;

	-- Populate remaining records
	UPDATE a
	SET a.RptCommID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpCommittees b
		ON a.RptCommID IS NULL
			AND ISNULL(a.CMTE_ID, '') = b.FECCommID;

	-------------------------------------

	-- Populate RptPrdID
	UPDATE a
	SET a.RptPrdID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpRptPrd b
		ON ISNULL(a.RPT_TP, '') = b.RptPrdCd;

	-- Add new report period IDs to lookup table
	INSERT INTO lkpRptPrd (RptPrdCd)
	SELECT DISTINCT RPT_TP
	FROM stgIndiv
	WHERE RptPrdID IS NULL;

	-- Populate remaining records
	UPDATE a
	SET a.RptPrdID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpRptPrd b
		ON a.RptPrdID IS NULL
			AND ISNULL(a.RPT_TP, '') = b.RptPrdCd;

	-------------------------------------

	-- Populate ElecID
	UPDATE a
	SET a.ElecID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpElec b
		ON ISNULL(a.TRANSACTION_PGI, '') = b.ElecCd;

	-- Add new election IDs (PGI indicators) to lookup table
	INSERT INTO lkpElec (ElecCd)
	SELECT DISTINCT TRANSACTION_PGI
	FROM stgIndiv
	WHERE ElecID IS NULL;

	-- Populate remaining records
	UPDATE a
	SET a.ElecID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpElec b
		ON a.ElecID IS NULL
			AND ISNULL(a.TRANSACTION_PGI, '') = b.ElecCd;

	-------------------------------------

	-- Populate TransTpID
	UPDATE a
	SET a.TransTpID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpTransTp b
		ON ISNULL(a.TRANSACTION_TP, '') = b.TransTp;

	-- Add new transaction types to lookup table
	INSERT INTO lkpTransTp (TransTp)
	SELECT DISTINCT TRANSACTION_TP
	FROM stgIndiv
	WHERE TransTpID IS NULL;

	-- Populate remaining records
	UPDATE a
	SET a.TransTpID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpTransTp b
		ON a.TransTpID IS NULL
			AND ISNULL(a.TRANSACTION_TP, '') = b.TransTp;

	-------------------------------------

	-- Populate ContRcptEntTpID
	UPDATE a
	SET a.ContRcptEntTpID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpEntTp b
		ON ISNULL(a.ENTITY_TP, '') = b.EntTp;

	-- Add new entity types to lookup table
	INSERT INTO lkpEntTp (EntTp)
	SELECT DISTINCT ENTITY_TP
	FROM stgIndiv
	WHERE ContRcptEntTpID IS NULL;

	-- Populate remaining records
	UPDATE a
	SET a.ContRcptEntTpID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpEntTp b
		ON a.ContRcptEntTpID IS NULL
			AND ISNULL(a.ENTITY_TP, '') = b.EntTp;

	-------------------------------------

	-- Populate ContRcptCommID
	UPDATE a
	SET a.ContRcptCommID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpCommittees b
		ON a.OTHER_ID IS NOT NULL
			AND a.OTHER_ID LIKE 'C%'
			AND ISNULL(a.OTHER_ID, '') = b.FECCommID;

	-- Add new Committee IDs to lookup table
	INSERT INTO lkpCommittees (FECCommID)
	SELECT DISTINCT OTHER_ID
	FROM stgIndiv
	WHERE ContRcptCommID IS NULL
		AND OTHER_ID IS NOT NULL
		AND OTHER_ID LIKE 'C%';

	-- Populate remaining records
	UPDATE a
	SET a.ContRcptCommID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpCommittees b
		ON a.ContRcptCommID IS NULL
			AND a.OTHER_ID IS NOT NULL
			AND a.OTHER_ID LIKE 'C%'
			AND ISNULL(a.OTHER_ID, '') = b.FECCommID;

	-------------------------------------

	-- Populate ContRcptCandID
	UPDATE a
	SET a.ContRcptCandID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpCandidates b
		ON a.ContRcptCommID IS NULL
			AND a.OTHER_ID IS NOT NULL
			AND ISNULL(a.OTHER_ID, '') = b.FECCandID;

	-- Add new Candidate IDs to lookup table
	INSERT INTO lkpCandidates (FECCandID)
	SELECT DISTINCT OTHER_ID
	FROM stgIndiv
	WHERE ContRcptCommID IS NULL
		AND ContRcptCandID IS NULL
		AND OTHER_ID IS NOT NULL;

	-- Populate remaining records
	UPDATE a
	SET a.ContRcptCandID = b.USATID
	FROM stgIndiv a
	INNER JOIN lkpCandidates b
		ON a.ContRcptCommID IS NULL
			AND a.ContRcptCandID IS NULL
			AND a.OTHER_ID IS NOT NULL
			AND ISNULL(a.OTHER_ID, '') = b.FECCandID;

	-------------------------------------

	-- Update existing rows
	UPDATE a
	SET a.RptCommID = b.RptCommID,
	a.ElecCycle = b.ElecCycle,
	a.AmendCd = ISNULL(b.AMNDT_IND, ''),
	a.RptPrdID = b.RptPrdID,
	a.ElecID = b.ElecID,
	a.RptImgNbr = CASE
		WHEN ISNUMERIC(IMAGE_NUM) = 1 THEN CAST(IMAGE_NUM AS bigint)
		ELSE 0 END,
	a.TransTpID = b.TransTpID,
	a.ContRcptEntTpID = b.ContRcptEntTpID,
	a.ContRcptName = b._NAME,
	a.ContRcptCity = b.CITY,
	a.ContRcptStAbbr = ISNULL(b._STATE, ''),
	a.ContRcptZip = b.ZIP_CODE,
	a.ContRcptEmp = b.EMPLOYER,
	a.ContRcptOcc = b.OCCUPATION,
	a.ContRcptDt = CASE
		WHEN b.TRANSACTION_DT IS NOT NULL
			AND LEN(b.TRANSACTION_DT) = 8
			AND ISDATE(LEFT(b.TRANSACTION_DT, 2) + '/' + SUBSTRING(b.TRANSACTION_DT, 3, 2) + '/' + RIGHT(b.TRANSACTION_DT, 4)) = 1
			THEN CAST(LEFT(b.TRANSACTION_DT, 2) + '/' + SUBSTRING(b.TRANSACTION_DT, 3, 2) + '/' + RIGHT(b.TRANSACTION_DT, 4) AS date)
		ELSE NULL END,
	a.ContRcptAmt = CASE
		WHEN b.TRANSACTION_AMT IS NOT NULL
			AND LEN(b.TRANSACTION_AMT) > 0
			AND ISNUMERIC(b.TRANSACTION_AMT) = 1
			THEN CAST(b.TRANSACTION_AMT AS money)
		ELSE NULL END,
	a.ContRcptCommID = ISNULL(b.ContRcptCommID, 0),
	a.ContRcptCandID = ISNULL(b.ContRcptCandID, 0),
	a.TransID = b.TRAN_ID,
	a.ImageID = b.FILE_NUM,
	a.flgExclude = CASE b.MEMO_CD
		WHEN 'X' THEN 1
		ELSE 0 END,
	a.MemoTxt = b.MEMO_TEXT
	FROM Indiv a
	INNER JOIN stgIndiv b
		ON a.FEC_Contrib_ID = b.SUB_ID
			AND (a.RptCommID <> b.RptCommID
				OR a.ElecCycle <> b.ElecCycle
				OR a.AmendCd <> ISNULL(b.AMNDT_IND, '')
				OR a.RptPrdID <> b.RptPrdID
				OR a.ElecID <> b.ElecID
				OR a.RptImgNbr <> CASE
					WHEN ISNUMERIC(b.IMAGE_NUM) = 1 THEN CAST(b.IMAGE_NUM AS bigint)
					ELSE 0 END
				OR a.TransTpID <> b.TransTpID
				OR a.ContRcptEntTpID <> b.ContRcptEntTpID
				OR ISNULL(a.ContRcptName, '') <> ISNULL(b._NAME, '')
				OR ISNULL(a.ContRcptCity, '') <> ISNULL(b.CITY, '')
				OR a.ContRcptStAbbr <> b._STATE
				OR ISNULL(a.ContRcptZip, '') <> ISNULL(b.ZIP_CODE, '')
				OR ISNULL(a.ContRcptEmp, '') <> ISNULL(b.EMPLOYER, '')
				OR ISNULL(a.ContRcptOcc, '') <> ISNULL(b.OCCUPATION, '')
				OR ISNULL(a.ContRcptDt, CAST('1/1/1900' AS date)) <> CASE
					WHEN b.TRANSACTION_DT IS NOT NULL
						AND LEN(b.TRANSACTION_DT) = 8
						AND ISDATE(LEFT(b.TRANSACTION_DT, 2) + '/' + SUBSTRING(b.TRANSACTION_DT, 3, 2) + '/' + RIGHT(b.TRANSACTION_DT, 4)) = 1
						THEN CAST(LEFT(b.TRANSACTION_DT, 2) + '/' + SUBSTRING(b.TRANSACTION_DT, 3, 2) + '/' + RIGHT(b.TRANSACTION_DT, 4) AS date)
					ELSE CAST('1/1/1900' AS date) END
				OR ISNULL(a.ContRcptAmt, -1) <> CASE
					WHEN b.TRANSACTION_AMT IS NOT NULL
						AND LEN(b.TRANSACTION_AMT) > 0
						AND ISNUMERIC(b.TRANSACTION_AMT) = 1
						THEN CAST(b.TRANSACTION_AMT AS money)
					ELSE -1 END
				OR a.ContRcptCommID <> ISNULL(b.ContRcptCommID, 0)
				OR a.ContRcptCandID <> ISNULL(b.ContRcptCandID, 0)
				OR ISNULL(a.TransID, '') <> ISNULL(b.TRAN_ID, '')
				OR ISNULL(a.ImageID, 0) <> ISNULL(b.FILE_NUM, 0)
				OR a.flgExclude <> CASE b.MEMO_CD
					WHEN 'X' THEN 1
					ELSE 0 END
				OR ISNULL(a.MemoTxt, '') <> ISNULL(b.MEMO_TEXT, ''));

	-------------------------------------

	-- Add new rows
	INSERT INTO Indiv (FEC_Contrib_ID, RptCommID, ElecCycle, AmendCd, RptPrdID, ElecID, RptImgNbr, TransTpID,
		ContRcptEntTpID, ContRcptName, ContRcptCity, ContRcptStAbbr, ContRcptZip, ContRcptEmp, ContRcptOcc,
		ContRcptDt, ContRcptAmt, ContRcptCommID, ContRcptCandID, TransID, ImageID, flgExclude, MemoTxt, FileDate)
	SELECT a.SUB_ID,
		a.RptCommID,
		a.ElecCycle,
		ISNULL(a.AMNDT_IND, ''),
		a.RptPrdID,
		a.ElecID,
		CASE
			WHEN ISNUMERIC(a.IMAGE_NUM) = 1 THEN CAST(a.IMAGE_NUM AS bigint)
			ELSE 0
		END,
		a.TransTpID,
		a.ContRcptEntTpID,
		a._NAME,
		a.CITY,
		ISNULL(a._STATE, ''),
		a.ZIP_CODE,
		a.EMPLOYER,
		a.OCCUPATION,
		CASE
			WHEN a.TRANSACTION_DT IS NOT NULL AND LEN(a.TRANSACTION_DT) = 8
				AND ISDATE(LEFT(a.TRANSACTION_DT, 2) + '/' + SUBSTRING(a.TRANSACTION_DT, 3, 2) + '/' + RIGHT(a.TRANSACTION_DT, 4)) = 1
				THEN CAST(LEFT(a.TRANSACTION_DT, 2) + '/' + SUBSTRING(a.TRANSACTION_DT, 3, 2) + '/' + RIGHT(a.TRANSACTION_DT, 4) AS date)
			ELSE NULL 
		END,
		CASE
			WHEN a.TRANSACTION_AMT IS NOT NULL AND LEN(a.TRANSACTION_AMT) > 0 AND ISNUMERIC(a.TRANSACTION_AMT) = 1
				THEN CAST(a.TRANSACTION_AMT AS money)
			ELSE NULL
		END,
		ISNULL(a.ContRcptCommID, 0),
		ISNULL(a.ContRcptCandID, 0),
		a.TRAN_ID,
		a.FILE_NUM,
		CASE a.MEMO_CD
			WHEN 'X' THEN 1
			ELSE 0
		END,
		a.MEMO_TEXT,
		@FileDate
		FROM stgIndiv a
	LEFT OUTER JOIN Indiv b
		ON a.SUB_ID = b.FEC_Contrib_ID
	WHERE b.FEC_Contrib_ID IS NULL;

	-------------------------------------

	-- Remove deleted rows
	DELETE a
	FROM Indiv a
	LEFT OUTER JOIN stgIndiv b
		ON a.FEC_Contrib_ID = b.SUB_ID
	WHERE b.SUB_ID IS NULL;

END






GO



/****** Object:  StoredProcedure [dbo].[usp_UpdatePeopleID]    Script Date: 2/25/2015 1:01:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[usp_UpdatePeopleID] (@CandID int, @UpdatePeopleID int)

AS

-- This stored procedure is used by the update_congress Python script to update PeopleID in lkpCandidates.
-- This helps avoid and repair cases where multiple People records have been created for the same legislator

BEGIN

	SET NOCOUNT ON;

	DECLARE @OldPeopleID int;
	SET @OldPeopleID = (SELECT PeopleID
		FROM lkpCandidates
		WHERE USATID = @CandID);

	UPDATE lkpCandidates
	SET PeopleID = @UpdatePeopleID
	WHERE USATID = @CandID;

	IF ISNULL(@OldPeopleID, @UpdatePeopleID) <> @UpdatePeopleID
	BEGIN
		IF NOT EXISTS (SELECT 1 FROM lkpCandidates WHERE PeopleID = @OldPeopleID)
		BEGIN

			DELETE
			FROM People
			WHERE USATID = @OldPeopleID

		END
	END

	SELECT 0;

END



